// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 15.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace asi_express
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;


    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public partial class UIMap
    {

        #region Properties
        public StudioConnectWindow StudioConnectWindow
        {
            get
            {
                if ((this.mStudioConnectWindow == null))
                {
                    this.mStudioConnectWindow = new StudioConnectWindow();
                }
                return this.mStudioConnectWindow;
            }
        }

        public ARM_AdminWindow ARM_AdminWindow
        {
            get
            {
                if ((this.mARM_AdminWindow == null))
                {
                    this.mARM_AdminWindow = new ARM_AdminWindow();
                }
                return this.mARM_AdminWindow;
            }
        }

        public OKWindow1 OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow1();
                }
                return this.mOKWindow;
            }
        }

        public EmployeeWindow EmployeeWindow
        {
            get
            {
                if ((this.mEmployeeWindow == null))
                {
                    this.mEmployeeWindow = new EmployeeWindow();
                }
                return this.mEmployeeWindow;
            }
        }

        public ISA_Window ISA_Window
        {
            get
            {
                if ((this.mISA_Window == null))
                {
                    this.mISA_Window = new ISA_Window();
                }
                return this.mISA_Window;
            }
        }

        public UserCreatedWindow UserCreatedWindow
        {
            get
            {
                if ((this.mUserCreatedWindow == null))
                {
                    this.mUserCreatedWindow = new UserCreatedWindow();
                }
                return this.mUserCreatedWindow;
            }
        }

        public InfoWindow InfoWindow
        {
            get
            {
                if ((this.mInfoWindow == null))
                {
                    this.mInfoWindow = new InfoWindow();
                }
                return this.mInfoWindow;
            }
        }
        #endregion

        #region Fields
        private StudioConnectWindow mStudioConnectWindow;

        private ARM_AdminWindow mARM_AdminWindow;

        private OKWindow1 mOKWindow;

        private EmployeeWindow mEmployeeWindow;

        private ISA_Window mISA_Window;

        private UserCreatedWindow mUserCreatedWindow;

        private InfoWindow mInfoWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class StudioConnectWindow : WinWindow
    {

        public StudioConnectWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Регистрация";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public SchemaConnectWindow SchemaConnectWindow
        {
            get
            {
                if ((this.mSchemaConnectWindow == null))
                {
                    this.mSchemaConnectWindow = new SchemaConnectWindow(this);
                }
                return this.mSchemaConnectWindow;
            }
        }

        public LoginWindow LoginWindow
        {
            get
            {
                if ((this.mLoginWindow == null))
                {
                    this.mLoginWindow = new LoginWindow(this);
                }
                return this.mLoginWindow;
            }
        }

        public PasswordWindow PasswordWindow
        {
            get
            {
                if ((this.mPasswordWindow == null))
                {
                    this.mPasswordWindow = new PasswordWindow(this);
                }
                return this.mPasswordWindow;
            }
        }

        public OKWindow OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion

        #region Fields
        private SchemaConnectWindow mSchemaConnectWindow;

        private LoginWindow mLoginWindow;

        private PasswordWindow mPasswordWindow;

        private OKWindow mOKWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SchemaConnectWindow : WinWindow
    {

        public SchemaConnectWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "10211";
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public WinComboBox SchemaConnectComboBox
        {
            get
            {
                if ((this.mSchemaConnectComboBox == null))
                {
                    this.mSchemaConnectComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mSchemaConnectComboBox.WindowTitles.Add("Регистрация");
                    #endregion
                }
                return this.mSchemaConnectComboBox;
            }
        }
        #endregion

        #region Fields
        private WinComboBox mSchemaConnectComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class LoginWindow : WinWindow
    {

        public LoginWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "10215";
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public WinEdit LoginEdit
        {
            get
            {
                if ((this.mLoginEdit == null))
                {
                    this.mLoginEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mLoginEdit.WindowTitles.Add("Регистрация");
                    #endregion
                }
                return this.mLoginEdit;
            }
        }
        #endregion

        #region Fields
        private WinEdit mLoginEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class PasswordWindow : WinWindow
    {

        public PasswordWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "10212";
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public WinEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mPasswordEdit.WindowTitles.Add("Регистрация");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        #endregion

        #region Fields
        private WinEdit mPasswordEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OKWindow : WinWindow
    {

        public OKWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public WinButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WinButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mOKButton.WindowTitles.Add("Регистрация");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mOKButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ARM_AdminWindow : WpfWindow
    {

        public ARM_AdminWindow()
        {
            #region Условия поиска
            //this.SearchProperties[WpfWindow.PropertyNames.Name] = "Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия 2.3.1.0.13";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Рабочее место Администратора", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public MasterWindow MasterWindow
        {
            get
            {
                if ((this.mMasterWindow == null))
                {
                    this.mMasterWindow = new MasterWindow(this);
                }
                return this.mMasterWindow;
            }
        }

        public WpfButton InstallUpdateButton
        {
            get
            {
                if ((this.mInstallUpdateButton == null))
                {
                    this.mInstallUpdateButton = new WpfButton(this);
                    #region Условия поиска
                    this.mInstallUpdateButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "InstallUpdate_bt";
                    this.mInstallUpdateButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mInstallUpdateButton;
            }
        }

        public WpfButton TuPropButton
        {
            get
            {
                if ((this.mTuPropButton == null))
                {
                    this.mTuPropButton = new WpfButton(this);
                    #region Условия поиска
                    this.mTuPropButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TuProperties_bt";
                    this.mTuPropButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTuPropButton;
            }
        }

        public WpfButton SAFSBButton
        {
            get
            {
                if ((this.mSAFSBButton == null))
                {
                    this.mSAFSBButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSAFSBButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SAFSB_bt";
                    this.mSAFSBButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSAFSBButton;
            }
        }

        public WpfButton PTKKGRButton
        {
            get
            {
                if ((this.mPTKKGRButton == null))
                {
                    this.mPTKKGRButton = new WpfButton(this);
                    #region Условия поиска
                    this.mPTKKGRButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PTKKGR_bt";
                    this.mPTKKGRButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mPTKKGRButton;
            }
        }

        public WpfButton RecreateButton
        {
            get
            {
                if ((this.mRecreateButton == null))
                {
                    this.mRecreateButton = new WpfButton(this);
                    #region Условия поиска
                    this.mRecreateButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "RIO_bt";
                    this.mRecreateButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRecreateButton;
            }
        }

        public WpfButton UserListButton
        {
            get
            {
                if ((this.mUserListButton == null))
                {
                    this.mUserListButton = new WpfButton(this);
                    #region Условия поиска
                    this.mUserListButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UsersList_bt";
                    this.mUserListButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mUserListButton;
            }
        }

        public WpfButton AddUserButton
        {
            get
            {
                if ((this.mAddUserButton == null))
                {
                    this.mAddUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mAddUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AddUser_bt";
                    this.mAddUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAddUserButton;
            }
        }

        public Tree Tree
        {
            get
            {
                if ((this.mTree == null))
                {
                    this.mTree = new Tree(this);
                }
                return this.mTree;
            }
        }

        public SAFSBData SAFSBData
        {
            get
            {
                if ((this.mSAFSBData == null))
                {
                    this.mSAFSBData = new SAFSBData(this);
                }
                return this.mSAFSBData;
            }
        }

        public TechUserData TechUserData
        {
            get
            {
                if ((this.mTechUserData == null))
                {
                    this.mTechUserData = new TechUserData(this);
                }
                return this.mTechUserData;
            }
        }
        #endregion

        #region Fields
        private MasterWindow mMasterWindow;

        private WpfButton mInstallUpdateButton;

        private WpfButton mTuPropButton;

        private WpfButton mSAFSBButton;

        private WpfButton mPTKKGRButton;

        private WpfButton mRecreateButton;

        private WpfButton mUserListButton;

        private WpfButton mAddUserButton;

        private Tree mTree;

        private SAFSBData mSAFSBData;

        private TechUserData mTechUserData;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class MasterWindow : WpfCustom
    {

        public MasterWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MasterView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "MasterView";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public NavigationPanel NavigationPanel
        {
            get
            {
                if ((this.mNavigationPanel == null))
                {
                    this.mNavigationPanel = new NavigationPanel(this);
                }
                return this.mNavigationPanel;
            }
        }

        public TuPropWindow TuPropWindow
        {
            get
            {
                if ((this.mTuPropWindow == null))
                {
                    this.mTuPropWindow = new TuPropWindow(this);
                }
                return this.mTuPropWindow;
            }
        }

        public RecreateObjectsPanel RecreateObjectsPanel
        {
            get
            {
                if ((this.mRecreateObjectsPanel == null))
                {
                    this.mRecreateObjectsPanel = new RecreateObjectsPanel(this);
                }
                return this.mRecreateObjectsPanel;
            }
        }

        public UserPanel UserPanel
        {
            get
            {
                if ((this.mUserPanel == null))
                {
                    this.mUserPanel = new UserPanel(this);
                }
                return this.mUserPanel;
            }
        }

        public EditUserButton EditUserButton
        {
            get
            {
                if ((this.mEditUserButton == null))
                {
                    this.mEditUserButton = new EditUserButton(this);
                }
                return this.mEditUserButton;
            }
        }
        #endregion

        #region Fields
        private NavigationPanel mNavigationPanel;

        private TuPropWindow mTuPropWindow;

        private RecreateObjectsPanel mRecreateObjectsPanel;

        private UserPanel mUserPanel;

        private EditUserButton mEditUserButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NavigationPanel : WpfCustom
    {

        public NavigationPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.NavigationPanel";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "NavigationPanel";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfToggleButton UpdateVersionButton
        {
            get
            {
                if ((this.mUpdateVersionButton == null))
                {
                    this.mUpdateVersionButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mUpdateVersionButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "UpdatingVersion_bt";
                    this.mUpdateVersionButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mUpdateVersionButton;
            }
        }

        public WpfToggleButton PrepareButton
        {
            get
            {
                if ((this.mPrepareButton == null))
                {
                    this.mPrepareButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mPrepareButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "WorkPreparation_bt";
                    this.mPrepareButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mPrepareButton;
            }
        }

        public WpfToggleButton UsersButton
        {
            get
            {
                if ((this.mUsersButton == null))
                {
                    this.mUsersButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mUsersButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "Users_bt";
                    this.mUsersButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mUsersButton;
            }
        }

        public WpfToggleButton ServiceButton
        {
            get
            {
                if ((this.mServiceButton == null))
                {
                    this.mServiceButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mServiceButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "Service_bt";
                    this.mServiceButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mServiceButton;
            }
        }
        #endregion

        #region Fields
        private WpfToggleButton mUpdateVersionButton;

        private WpfToggleButton mPrepareButton;

        private WpfToggleButton mUsersButton;

        private WpfToggleButton mServiceButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TuPropWindow : WpfCustom
    {

        public TuPropWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DepartmentProperties";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DepartmentProperties";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfComboBox RegionsComboBox
        {
            get
            {
                if ((this.mRegionsComboBox == null))
                {
                    this.mRegionsComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mRegionsComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "TreeComboBox";
                    this.mRegionsComboBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRegionsComboBox;
            }
        }

        public WpfText NameTextBlock
        {
            get
            {
                if ((this.mNameTextBlock == null))
                {
                    this.mNameTextBlock = new WpfText(this);
                    #region Условия поиска
                    this.mNameTextBlock.SearchProperties[WpfText.PropertyNames.ClassName] = "Uia.TextBlock";
                    this.SearchProperties.Add(WpfText.PropertyNames.Name, "ГУ Банка России", PropertyExpressionOperator.Contains);
                    this.mNameTextBlock.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mNameTextBlock;
            }
        }
        #endregion

        #region Fields
        private WpfComboBox mRegionsComboBox;

        private WpfText mNameTextBlock;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RecreateObjectsPanel : WpfCustom
    {

        public RecreateObjectsPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RecreateInnerObjects";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "RecreateInnerObjects";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfCheckBox RecreateViewCheckBox
        {
            get
            {
                if ((this.mRecreateViewCheckBox == null))
                {
                    this.mRecreateViewCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mRecreateViewCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Views_RecreateInnerObjects_cb";
                    this.mRecreateViewCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRecreateViewCheckBox;
            }
        }

        public WpfCheckBox RecreateProcedureCheckBox
        {
            get
            {
                if ((this.mRecreateProcedureCheckBox == null))
                {
                    this.mRecreateProcedureCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mRecreateProcedureCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Procedures_RecreateInnerObjects_cb";
                    this.mRecreateProcedureCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRecreateProcedureCheckBox;
            }
        }

        public WpfCheckBox AddRigthsCheckBox
        {
            get
            {
                if ((this.mAddRigthsCheckBox == null))
                {
                    this.mAddRigthsCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mAddRigthsCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Grants_RecreateInnerObjects_cb";
                    this.mAddRigthsCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAddRigthsCheckBox;
            }
        }

        public WpfButton RecreateButton
        {
            get
            {
                if ((this.mRecreateButton == null))
                {
                    this.mRecreateButton = new WpfButton(this);
                    #region Условия поиска
                    this.mRecreateButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "RIO_RecreateInnerObjects_bt";
                    this.mRecreateButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRecreateButton;
            }
        }
        #endregion

        #region Fields
        private WpfCheckBox mRecreateViewCheckBox;

        private WpfCheckBox mRecreateProcedureCheckBox;

        private WpfCheckBox mAddRigthsCheckBox;

        private WpfButton mRecreateButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UserPanel : WpfCustom
    {

        public UserPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Users";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Users";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public UserList UserList
        {
            get
            {
                if ((this.mUserList == null))
                {
                    this.mUserList = new UserList(this);
                }
                return this.mUserList;
            }
        }

        public WpfButton EditUserButton
        {
            get
            {
                if ((this.mEditUserButton == null))
                {
                    this.mEditUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mEditUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Edit_UserControl_bt";
                    this.mEditUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mEditUserButton;
            }
        }

        public WpfButton RefreshUserButton
        {
            get
            {
                if ((this.mRefreshUserButton == null))
                {
                    this.mRefreshUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mRefreshUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UpdateUser_UserControl_bt";
                    this.mRefreshUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRefreshUserButton;
            }
        }

        public WpfButton DeleteUserButton
        {
            get
            {
                if ((this.mDeleteUserButton == null))
                {
                    this.mDeleteUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mDeleteUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Remove_UserControl_bt";
                    this.mDeleteUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mDeleteUserButton;
            }
        }

        public WpfButton AddUserButton
        {
            get
            {
                if ((this.mAddUserButton == null))
                {
                    this.mAddUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mAddUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Add_UserControl_bt";
                    this.mAddUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAddUserButton;
            }
        }

        public WpfButton RefreshAllUserButton
        {
            get
            {
                if ((this.mRefreshAllUserButton == null))
                {
                    this.mRefreshAllUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mRefreshAllUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UpdateUsers_UserControl_bt";
                    this.mRefreshAllUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRefreshAllUserButton;
            }
        }
        #endregion

        #region Fields
        private UserList mUserList;

        private WpfButton mEditUserButton;

        private WpfButton mRefreshUserButton;

        private WpfButton mDeleteUserButton;

        private WpfButton mAddUserButton;

        private WpfButton mRefreshAllUserButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UserList : WpfList
    {

        public UserList(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "UsersListView";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfListItem RIOListItem
        {
            get
            {
                if ((this.mRIOListItem == null))
                {
                    this.mRIOListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIOListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "UserControl_RIO_lv";
                    this.mRIOListItem.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRIOListItem;
            }
        }

        public WpfListItem RIO_2ListItem
        {
            get
            {
                if ((this.mRIO_2ListItem == null))
                {
                    this.mRIO_2ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_2ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "UserControl_RIO_2_lv";
                    this.mRIO_2ListItem.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRIO_2ListItem;
            }
        }

        public WpfListItem RIO_3ListItem
        {
            get
            {
                if ((this.mRIO_3ListItem == null))
                {
                    this.mRIO_3ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_3ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "UserControl_RIO_3_lv";
                    this.mRIO_3ListItem.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRIO_3ListItem;
            }
        }

        public WpfListItem RIO_4ListItem
        {
            get
            {
                if ((this.mRIO_4ListItem == null))
                {
                    this.mRIO_4ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_4ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "UserControl_RIO_4_lv";
                    this.mRIO_4ListItem.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRIO_4ListItem;
            }
        }
        #endregion

        #region Fields
        private WpfListItem mRIOListItem;

        private WpfListItem mRIO_2ListItem;

        private WpfListItem mRIO_3ListItem;

        private WpfListItem mRIO_4ListItem;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EditUserButton : WpfCustom
    {

        public EditUserButton(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.EditUser";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "EditUser";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfButton SelectPersonButton
        {
            get
            {
                if ((this.mSelectPersonButton == null))
                {
                    this.mSelectPersonButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSelectPersonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SelectPerson_EditUser_bt";
                    this.mSelectPersonButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSelectPersonButton;
            }
        }

        public WpfEdit LoginEdit
        {
            get
            {
                if ((this.mLoginEdit == null))
                {
                    this.mLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Login_EditUser_tb";
                    this.mLoginEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mLoginEdit;
            }
        }

        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Password_EditUser_tb";
                    this.mPasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }

        public WpfEdit RePasswordEdit
        {
            get
            {
                if ((this.mRePasswordEdit == null))
                {
                    this.mRePasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mRePasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RePassword_EditUser_tb";
                    this.mRePasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRePasswordEdit;
            }
        }
        #endregion

        #region Fields
        private WpfButton mSelectPersonButton;

        private WpfEdit mLoginEdit;

        private WpfEdit mPasswordEdit;

        private WpfEdit mRePasswordEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class Tree : WpfTree
    {

        public Tree(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "PART_TreeView";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public TreeLvL1 TreeLvL1
        {
            get
            {
                if ((this.mTreeLvL1 == null))
                {
                    this.mTreeLvL1 = new TreeLvL1(this);
                }
                return this.mTreeLvL1;
            }
        }
        #endregion

        #region Fields
        private TreeLvL1 mTreeLvL1;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TreeLvL1 : WpfTreeItem
    {

        public TreeLvL1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfTreeItem TreeLvL2
        {
            get
            {
                if ((this.mTreeLvL2 == null))
                {
                    this.mTreeLvL2 = new WpfTreeItem(this);
                    #region Условия поиска
                    this.mTreeLvL2.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mTreeLvL2.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mTreeLvL2.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTreeLvL2;
            }
        }
        #endregion

        #region Fields
        private WpfTreeItem mTreeLvL2;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SAFSBData : WpfGroup
    {

        public SAFSBData(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Расположение данных САФСБ:";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public ServerProperties ServerProperties
        {
            get
            {
                if ((this.mServerProperties == null))
                {
                    this.mServerProperties = new ServerProperties(this);
                }
                return this.mServerProperties;
            }
        }

        public WpfEdit SchemaNameEdit
        {
            get
            {
                if ((this.mSchemaNameEdit == null))
                {
                    this.mSchemaNameEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mSchemaNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Db_Safsb_tb";
                    //this.mSchemaNameEdit.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mSchemaNameEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSchemaNameEdit;
            }
        }

        public WpfEdit ServerMSSQLEdit
        {
            get
            {
                if ((this.mServerMSSQLEdit == null))
                {
                    this.mServerMSSQLEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mServerMSSQLEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Server_Safsb_tb";
                    this.mServerMSSQLEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mServerMSSQLEdit;
            }
        }
        #endregion

        #region Fields
        private ServerProperties mServerProperties;

        private WpfEdit mSchemaNameEdit;

        private WpfEdit mServerMSSQLEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ServerProperties : WpfGroup
    {

        public ServerProperties(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Свойства сервера (из TNSNAMES.ORA):";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfEdit ProtocolEdit
        {
            get
            {
                if ((this.mProtocolEdit == null))
                {
                    this.mProtocolEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mProtocolEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Protocol_Safsb_tb";
                    this.mProtocolEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mProtocolEdit;
            }
        }

        public WpfEdit HostEdit
        {
            get
            {
                if ((this.mHostEdit == null))
                {
                    this.mHostEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mHostEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Host_Safsb_tb";
                    this.mHostEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mHostEdit;
            }
        }

        public WpfEdit PortEdit
        {
            get
            {
                if ((this.mPortEdit == null))
                {
                    this.mPortEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mPortEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Port_Safsb_tb";
                    this.mPortEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mPortEdit;
            }
        }

        public WpfEdit ServiceEdit
        {
            get
            {
                if ((this.mServiceEdit == null))
                {
                    this.mServiceEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mServiceEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Service_Safsb_tb";
                    this.mServiceEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mServiceEdit;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mProtocolEdit;

        private WpfEdit mHostEdit;

        private WpfEdit mPortEdit;

        private WpfEdit mServiceEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TechUserData : WpfCustom
    {

        public TechUserData(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Safsb";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Safsb";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public TechUserDataGroup TechUserDataGroup
        {
            get
            {
                if ((this.mTechUserDataGroup == null))
                {
                    this.mTechUserDataGroup = new TechUserDataGroup(this);
                }
                return this.mTechUserDataGroup;
            }
        }

        public WpfCheckBox NeedCreateTechUserCheckBox
        {
            get
            {
                if ((this.mNeedCreateTechUserCheckBox == null))
                {
                    this.mNeedCreateTechUserCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mNeedCreateTechUserCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "NeedCreateTechUser_Safsb_cb";
                    this.mNeedCreateTechUserCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mNeedCreateTechUserCheckBox;
            }
        }

        public SYSTEMGroup SYSTEMGroup
        {
            get
            {
                if ((this.mSYSTEMGroup == null))
                {
                    this.mSYSTEMGroup = new SYSTEMGroup(this);
                }
                return this.mSYSTEMGroup;
            }
        }

        public SAFSBSystemGroup SAFSBSystemGroup
        {
            get
            {
                if ((this.mSAFSBSystemGroup == null))
                {
                    this.mSAFSBSystemGroup = new SAFSBSystemGroup(this);
                }
                return this.mSAFSBSystemGroup;
            }
        }

        public WpfCheckBox AddRigthsTechUserCheckBox
        {
            get
            {
                if ((this.mAddRigthsTechUserCheckBox == null))
                {
                    this.mAddRigthsTechUserCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mAddRigthsTechUserCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "NeedGrantsToTechUser_Safsb_cb";
                    this.mAddRigthsTechUserCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAddRigthsTechUserCheckBox;
            }
        }

        public WpfButton CreateConnectSafsbButton
        {
            get
            {
                if ((this.mCreateConnectSafsbButton == null))
                {
                    this.mCreateConnectSafsbButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCreateConnectSafsbButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CreateLinkToSAFSB_Safsb_bt";
                    this.mCreateConnectSafsbButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mCreateConnectSafsbButton;
            }
        }

        public LogWindow LogWindow
        {
            get
            {
                if ((this.mLogWindow == null))
                {
                    this.mLogWindow = new LogWindow(this);
                }
                return this.mLogWindow;
            }
        }
        #endregion

        #region Fields
        private TechUserDataGroup mTechUserDataGroup;

        private WpfCheckBox mNeedCreateTechUserCheckBox;

        private SYSTEMGroup mSYSTEMGroup;

        private SAFSBSystemGroup mSAFSBSystemGroup;

        private WpfCheckBox mAddRigthsTechUserCheckBox;

        private WpfButton mCreateConnectSafsbButton;

        private LogWindow mLogWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TechUserDataGroup : WpfGroup
    {

        public TechUserDataGroup(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Учетные данные технологического пользователя:";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfEdit TechUserLoginEdit
        {
            get
            {
                if ((this.mTechUserLoginEdit == null))
                {
                    this.mTechUserLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mTechUserLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TechUserLogin_Safsb_tb";
                    this.mTechUserLoginEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTechUserLoginEdit;
            }
        }

        public WpfEdit TechUserPasswordEdit
        {
            get
            {
                if ((this.mTechUserPasswordEdit == null))
                {
                    this.mTechUserPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mTechUserPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TechUserPassword_Safsb_tb";
                    this.mTechUserPasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTechUserPasswordEdit;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mTechUserLoginEdit;

        private WpfEdit mTechUserPasswordEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SYSTEMGroup : WpfGroup
    {

        public SYSTEMGroup(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Учетные данные пользователя с правами создания пользователей:";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfEdit SystemLoginEdit
        {
            get
            {
                if ((this.mSystemLoginEdit == null))
                {
                    this.mSystemLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mSystemLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SysUserLogin_Safsb_tb";
                    this.mSystemLoginEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSystemLoginEdit;
            }
        }

        public WpfEdit SystemPasswordEdit
        {
            get
            {
                if ((this.mSystemPasswordEdit == null))
                {
                    this.mSystemPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mSystemPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SysUserPassword_Safsb_tb";
                    this.mSystemPasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSystemPasswordEdit;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mSystemLoginEdit;

        private WpfEdit mSystemPasswordEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SAFSBSystemGroup : WpfGroup
    {

        public SAFSBSystemGroup(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Учетные данные пользователя - владельца схемы с данными САФСБ:";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfCheckBox EqualSystemSafsbSysCheckBox
        {
            get
            {
                if ((this.mEqualSystemSafsbSysCheckBox == null))
                {
                    this.mEqualSystemSafsbSysCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mEqualSystemSafsbSysCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "SysEqualsOwner_Safsb_cb";
                    this.mEqualSystemSafsbSysCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mEqualSystemSafsbSysCheckBox;
            }
        }

        public WpfEdit OwnerSafsbLoginEdit
        {
            get
            {
                if ((this.mOwnerSafsbLoginEdit == null))
                {
                    this.mOwnerSafsbLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mOwnerSafsbLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "OwnerUserLogin_Safsb_tb";
                    this.mOwnerSafsbLoginEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mOwnerSafsbLoginEdit;
            }
        }

        public WpfEdit OwnerSafsbPasswordEdit
        {
            get
            {
                if ((this.mOwnerSafsbPasswordEdit == null))
                {
                    this.mOwnerSafsbPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mOwnerSafsbPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "OwnUserPassword_Safsb_tb";
                    this.mOwnerSafsbPasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mOwnerSafsbPasswordEdit;
            }
        }
        #endregion

        #region Fields
        private WpfCheckBox mEqualSystemSafsbSysCheckBox;

        private WpfEdit mOwnerSafsbLoginEdit;

        private WpfEdit mOwnerSafsbPasswordEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class LogWindow : WpfExpander
    {

        public LogWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfExpander.PropertyNames.Name] = "Лог настройки на САФСБ";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfEdit TextLog
        {
            get
            {
                if ((this.mTextLog == null))
                {
                    this.mTextLog = new WpfEdit(this);
                    #region Условия поиска
                    this.mTextLog.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Logger_Safsb_tb";
                    this.mTextLog.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTextLog;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mTextLog;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OKWindow1 : WinWindow
    {

        public OKWindow1()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ОК";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("ОК");
            #endregion
        }

        #region Properties
        public WinButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WinButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mOKButton.WindowTitles.Add("ОК");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mOKButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EmployeeWindow : WpfWindow
    {

        public EmployeeWindow()
        {
            #region Условия поиска
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Список сотрудников";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Список сотрудников");
            #endregion
        }

        #region Properties
        public WpfButton AddEmployeeButton
        {
            get
            {
                if ((this.mAddEmployeeButton == null))
                {
                    this.mAddEmployeeButton = new WpfButton(this);
                    #region Условия поиска
                    this.mAddEmployeeButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AddUserPreviewButton_SelectPersonDialog_bt";
                    this.mAddEmployeeButton.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mAddEmployeeButton;
            }
        }

        public WpfList EmployeeList
        {
            get
            {
                if ((this.mEmployeeList == null))
                {
                    this.mEmployeeList = new WpfList(this);
                    #region Условия поиска
                    this.mEmployeeList.SearchProperties[WpfList.PropertyNames.AutomationId] = "PersonsListBox";
                    this.mEmployeeList.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mEmployeeList;
            }
        }

        public WpfButton SelectButton
        {
            get
            {
                if ((this.mSelectButton == null))
                {
                    this.mSelectButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSelectButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Select_SelectPersonDialog_bt";
                    this.mSelectButton.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mSelectButton;
            }
        }

        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Cancel_SelectPersonDialog_bt";
                    this.mCancelButton.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mCancelButton;
            }
        }

        public WpfEdit FIOEmployeeEdit
        {
            get
            {
                if ((this.mFIOEmployeeEdit == null))
                {
                    this.mFIOEmployeeEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mFIOEmployeeEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "LastName_SelectPersonDialog_tb";
                    this.mFIOEmployeeEdit.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mFIOEmployeeEdit;
            }
        }

        public WpfButton UIДобавитьButton
        {
            get
            {
                if ((this.mUIДобавитьButton == null))
                {
                    this.mUIДобавитьButton = new WpfButton(this);
                    #region Условия поиска
                    this.mUIДобавитьButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AddUser_SelectPersonDialog_bt";
                    this.mUIДобавитьButton.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mUIДобавитьButton;
            }
        }
        #endregion

        #region Fields
        private WpfButton mAddEmployeeButton;

        private WpfList mEmployeeList;

        private WpfButton mSelectButton;

        private WpfButton mCancelButton;

        private WpfEdit mFIOEmployeeEdit;

        private WpfButton mUIДобавитьButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ISA_Window : WinWindow
    {

        public ISA_Window()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Учетные данные АИБа";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Учетные данные АИБа");
            #endregion
        }

        #region Properties
        public WpfEdit IsaLoginEdit
        {
            get
            {
                if ((this.mIsaLoginEdit == null))
                {
                    this.mIsaLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mIsaLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "IsaLoginTextBox";
                    this.mIsaLoginEdit.WindowTitles.Add("Учетные данные АИБа");
                    #endregion
                }
                return this.mIsaLoginEdit;
            }
        }

        public WpfEdit IsaPasswordEdit
        {
            get
            {
                if ((this.mIsaPasswordEdit == null))
                {
                    this.mIsaPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mIsaPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "IsaPassPasswordBox";
                    this.mIsaPasswordEdit.WindowTitles.Add("Учетные данные АИБа");
                    #endregion
                }
                return this.mIsaPasswordEdit;
            }
        }

        public WpfButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WpfButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WpfButton.PropertyNames.Name] = "    OK     ";
                    this.mOKButton.WindowTitles.Add("Учетные данные АИБа");
                    #endregion
                }
                return this.mOKButton;
            }
        }

        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Отмена";
                    this.mCancelButton.WindowTitles.Add("Учетные данные АИБа");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mIsaLoginEdit;

        private WpfEdit mIsaPasswordEdit;

        private WpfButton mOKButton;

        private WpfButton mCancelButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UserCreatedWindow : WinWindow
    {

        public UserCreatedWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Пользователь успешно сохранен";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Пользователь успешно сохранен");
            #endregion
        }

        #region Properties
        public ОКWindow ОКWindow
        {
            get
            {
                if ((this.mОКWindow == null))
                {
                    this.mОКWindow = new ОКWindow(this);
                }
                return this.mОКWindow;
            }
        }
        #endregion

        #region Fields
        private ОКWindow mОКWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ОКWindow : WinWindow
    {

        public ОКWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Пользователь успешно сохранен");
            #endregion
        }

        #region Properties
        public WinButton ОКButton
        {
            get
            {
                if ((this.mОКButton == null))
                {
                    this.mОКButton = new WinButton(this);
                    #region Условия поиска
                    this.mОКButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mОКButton.WindowTitles.Add("Пользователь успешно сохранен");
                    #endregion
                }
                return this.mОКButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mОКButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class InfoWindow : WinWindow
    {

        public InfoWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Информация";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Информация");
            #endregion
        }

        #region Properties
        public ОКWindow1 ОКWindow
        {
            get
            {
                if ((this.mОКWindow == null))
                {
                    this.mОКWindow = new ОКWindow1(this);
                }
                return this.mОКWindow;
            }
        }
        #endregion

        #region Fields
        private ОКWindow1 mОКWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ОКWindow1 : WinWindow
    {

        public ОКWindow1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Информация");
            #endregion
        }

        #region Properties
        public WinButton ОКButton
        {
            get
            {
                if ((this.mОКButton == null))
                {
                    this.mОКButton = new WinButton(this);
                    #region Условия поиска
                    this.mОКButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mОКButton.WindowTitles.Add("Информация");
                    #endregion
                }
                return this.mОКButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mОКButton;
        #endregion
    }
}

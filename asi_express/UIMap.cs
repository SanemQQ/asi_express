// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 15.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace asi_express
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Globalization;
    using System.Text.RegularExpressions;
    using System.Windows.Forms;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;



    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public partial class UIMap
    {

        #region Properties
        public StudioConnectWindow StudioConnectWindow
        {
            get
            {
                if ((this.mStudioConnectWindow == null))
                {
                    this.mStudioConnectWindow = new StudioConnectWindow();
                }
                return this.mStudioConnectWindow;
            }
        }


        public ARM_AdminWindow ARM_AdminWindow
        {
            get
            {
                if ((this.mARM_AdminWindow == null))
                {
                    this.mARM_AdminWindow = new ARM_AdminWindow();
                }
                return this.mARM_AdminWindow;
            }
        }

        public OKWindow1 OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow1();
                }
                return this.mOKWindow;
            }
        }

        public EmployeeWindow EmployeeWindow
        {
            get
            {
                if ((this.mEmployeeWindow == null))
                {
                    this.mEmployeeWindow = new EmployeeWindow();
                }
                return this.mEmployeeWindow;
            }
        }

        public ISA_Window ISA_Window
        {
            get
            {
                if ((this.mISA_Window == null))
                {
                    this.mISA_Window = new ISA_Window();
                }
                return this.mISA_Window;
            }
        }

        public UserCreatedWindow UserCreatedWindow
        {
            get
            {
                if ((this.mUserCreatedWindow == null))
                {
                    this.mUserCreatedWindow = new UserCreatedWindow();
                }
                return this.mUserCreatedWindow;
            }
        }

        public InfoWindow InfoWindow
        {
            get
            {
                if ((this.mInfoWindow == null))
                {
                    this.mInfoWindow = new InfoWindow();
                }
                return this.mInfoWindow;
            }
        }

        public AcceptWindow AcceptWindow
        {
            get
            {
                if ((this.mAcceptWindow == null))
                {
                    this.mAcceptWindow = new AcceptWindow();
                }
                return this.mAcceptWindow;
            }
        }

        public ASI_Window ASI_Window
        {
            get
            {
                if ((this.mASI_Window == null))
                {
                    this.mASI_Window = new ASI_Window();
                }
                return this.mASI_Window;
            }
        }

        public LogWindow1 LogWindow
        {
            get
            {
                if ((this.mLogWindow == null))
                {
                    this.mLogWindow = new LogWindow1();
                }
                return this.mLogWindow;
            }
        }

        public SelectCode SelectCode
        {
            get
            {
                if ((this.mSelectCode == null))
                {
                    this.mSelectCode = new SelectCode();
                }
                return this.mSelectCode;
            }
        }

        public FormSprEmp FormSprEmp
        {
            get
            {
                if ((this.mFormSprEmp == null))
                {
                    this.mFormSprEmp = new FormSprEmp();
                }
                return this.mFormSprEmp;
            }
        }

        public SettingTask SettingTask
        {
            get
            {
                if ((this.mSettingTask == null))
                {
                    this.mSettingTask = new SettingTask();
                }
                return this.mSettingTask;
            }
        }

        public ContextMenuMaterial ContextMenuMaterial
        {
            get
            {
                if ((this.mContextMenuMaterial == null))
                {
                    this.mContextMenuMaterial = new ContextMenuMaterial();
                }
                return this.mContextMenuMaterial;
            }
        }

        public OpenFileDialog OpenFileDialog
        {
            get
            {
                if ((this.mOpenFileDialog == null))
                {
                    this.mOpenFileDialog = new OpenFileDialog();
                }
                return this.mOpenFileDialog;
            }
        }

        public SelectDateWindow SelectDateWindow
        {
            get
            {
                if ((this.mSelectDateWindow == null))
                {
                    this.mSelectDateWindow = new SelectDateWindow();
                }
                return this.mSelectDateWindow;
            }
        }

        public BorrowerListWindow BorrowerListWindow
        {
            get
            {
                if ((this.mBorrowerListWindow == null))
                {
                    this.mBorrowerListWindow = new BorrowerListWindow();
                }
                return this.mBorrowerListWindow;
            }
        }

        public AddAdressWindow AddAdressWindow
        {
            get
            {
                if ((this.mAddAdressWindow == null))
                {
                    this.mAddAdressWindow = new AddAdressWindow();
                }
                return this.mAddAdressWindow;
            }
        }

        public SelectAccBorrower SelectAccBorrower
        {
            get
            {
                if ((this.mSelectAccBorrower == null))
                {
                    this.mSelectAccBorrower = new SelectAccBorrower();
                }
                return this.mSelectAccBorrower;
            }
        }

        public SelectDateAbsWindow SelectDateAbsWindow
        {
            get
            {
                if ((this.mSelectDateAbsWindow == null))
                {
                    this.mSelectDateAbsWindow = new SelectDateAbsWindow();
                }
                return this.mSelectDateAbsWindow;
            }
        }

        public RefreshSheetBorrower RefreshSheetBorrower
        {
            get
            {
                if ((this.mRefreshSheetBorrower == null))
                {
                    this.mRefreshSheetBorrower = new RefreshSheetBorrower();
                }
                return this.mRefreshSheetBorrower;
            }
        }

        public ReportBorrower ReportBorrower
        {
            get
            {
                if ((this.mReportBorrower == null))
                {
                    this.mReportBorrower = new ReportBorrower();
                }
                return this.mReportBorrower;
            }
        }


        public AttentionWindow AttentionWindow
        {
            get
            {
                if ((this.mAttentionWindow == null))
                {
                    this.mAttentionWindow = new AttentionWindow();
                }
                return this.mAttentionWindow;
            }
        }

        public NameIndRepWindow NameIndRepWindow
        {
            get
            {
                if ((this.mNameIndRepWindow == null))
                {
                    this.mNameIndRepWindow = new NameIndRepWindow();
                }
                return this.mNameIndRepWindow;
            }
        }

        public OpenEditor OpenEditor
        {
            get
            {
                if ((this.mOpenEditor == null))
                {
                    this.mOpenEditor = new OpenEditor();
                }
                return this.mOpenEditor;
            }
        }

        public CreatingWindow CreatingWindow
        {
            get
            {
                if ((this.mCreatingWindow == null))
                {
                    this.mCreatingWindow = new CreatingWindow();
                }
                return this.mCreatingWindow;
            }
        }

        public DocumentWindow DocumentWindow
        {
            get
            {
                if ((this.mDocumentWindow == null))
                {
                    this.mDocumentWindow = new DocumentWindow();
                }
                return this.mDocumentWindow;
            }
        }

        public EndedCheckWindow EndedCheckWindow
        {
            get
            {
                if ((this.mEndedCheckWindow == null))
                {
                    this.mEndedCheckWindow = new EndedCheckWindow();
                }
                return this.mEndedCheckWindow;
            }
        }

        public NameAktWindow NameAktWindow
        {
            get
            {
                if ((this.mNameAktWindow == null))
                {
                    this.mNameAktWindow = new NameAktWindow();
                }
                return this.mNameAktWindow;
            }
        }

        public WarningWindow WarningWindow
        {
            get
            {
                if ((this.mWarningWindow == null))
                {
                    this.mWarningWindow = new WarningWindow();
                }
                return this.mWarningWindow;
            }
        }

        public CreatedWindow CreatedWindow
        {
            get
            {
                if ((this.mCreatedWindow == null))
                {
                    this.mCreatedWindow = new CreatedWindow();
                }
                return this.mCreatedWindow;
            }
        }
        #endregion

        #region Fields
        private StudioConnectWindow mStudioConnectWindow;

        private ARM_AdminWindow mARM_AdminWindow;

        private OKWindow1 mOKWindow;

        private EmployeeWindow mEmployeeWindow;

        private ISA_Window mISA_Window;

        private UserCreatedWindow mUserCreatedWindow;

        private InfoWindow mInfoWindow;

        private AcceptWindow mAcceptWindow;

        private ASI_Window mASI_Window;

        private LogWindow1 mLogWindow;

        private SelectCode mSelectCode;

        private FormSprEmp mFormSprEmp;

        private SettingTask mSettingTask;

        private ContextMenuMaterial mContextMenuMaterial;

        private OpenFileDialog mOpenFileDialog;

        private SelectDateWindow mSelectDateWindow;

        private BorrowerListWindow mBorrowerListWindow;

        private AddAdressWindow mAddAdressWindow;

        private SelectAccBorrower mSelectAccBorrower;

        private SelectDateAbsWindow mSelectDateAbsWindow;

        private RefreshSheetBorrower mRefreshSheetBorrower;

        private ReportBorrower mReportBorrower;

        private AttentionWindow mAttentionWindow;

        private NameIndRepWindow mNameIndRepWindow;

        private OpenEditor mOpenEditor;

        private CreatingWindow mCreatingWindow;

        private DocumentWindow mDocumentWindow;

        private EndedCheckWindow mEndedCheckWindow;

        private NameAktWindow mNameAktWindow;

        private WarningWindow mWarningWindow;

        private CreatedWindow mCreatedWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class StudioConnectWindow : WinWindow
    {

        public StudioConnectWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Регистрация";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public SchemaConnectWindow SchemaConnectWindow
        {
            get
            {
                if ((this.mSchemaConnectWindow == null))
                {
                    this.mSchemaConnectWindow = new SchemaConnectWindow(this);
                }
                return this.mSchemaConnectWindow;
            }
        }

        public LoginWindow LoginWindow
        {
            get
            {
                if ((this.mLoginWindow == null))
                {
                    this.mLoginWindow = new LoginWindow(this);
                }
                return this.mLoginWindow;
            }
        }

        public PasswordWindow PasswordWindow
        {
            get
            {
                if ((this.mPasswordWindow == null))
                {
                    this.mPasswordWindow = new PasswordWindow(this);
                }
                return this.mPasswordWindow;
            }
        }

        public OKWindow OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion

        #region Fields
        private SchemaConnectWindow mSchemaConnectWindow;

        private LoginWindow mLoginWindow;

        private PasswordWindow mPasswordWindow;

        private OKWindow mOKWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SchemaConnectWindow : WinWindow
    {

        public SchemaConnectWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "10211";
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public WinComboBox SchemaConnectComboBox
        {
            get
            {
                if ((this.mSchemaConnectComboBox == null))
                {
                    this.mSchemaConnectComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mSchemaConnectComboBox.WindowTitles.Add("Регистрация");
                    #endregion
                }
                return this.mSchemaConnectComboBox;
            }
        }
        #endregion

        #region Fields
        private WinComboBox mSchemaConnectComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class LoginWindow : WinWindow
    {

        public LoginWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "10215";
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public WinEdit LoginEdit
        {
            get
            {
                if ((this.mLoginEdit == null))
                {
                    this.mLoginEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mLoginEdit.WindowTitles.Add("Регистрация");
                    #endregion
                }
                return this.mLoginEdit;
            }
        }
        #endregion

        #region Fields
        private WinEdit mLoginEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class PasswordWindow : WinWindow
    {

        public PasswordWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "10212";
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public WinEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mPasswordEdit.WindowTitles.Add("Регистрация");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        #endregion

        #region Fields
        private WinEdit mPasswordEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OKWindow : WinWindow
    {

        public OKWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties.Add(WinWindow.PropertyNames.AccessibleName, "OK", PropertyExpressionOperator.Contains);
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public WinButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WinButton(this);
                    #region Условия поиска

                    this.mOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mOKButton.WindowTitles.Add("Регистрация");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mOKButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ARM_AdminWindow : WpfWindow
    {

        public ARM_AdminWindow()
        {
            #region Условия поиска
            //this.SearchProperties[WpfWindow.PropertyNames.Name] = "Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия 2.3.1.0.13";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Рабочее место Администратора", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public MasterWindow MasterWindow
        {
            get
            {
                if ((this.mMasterWindow == null))
                {
                    this.mMasterWindow = new MasterWindow(this);
                }
                return this.mMasterWindow;
            }
        }

        public WpfButton InstallUpdateButton
        {
            get
            {
                if ((this.mInstallUpdateButton == null))
                {
                    this.mInstallUpdateButton = new WpfButton(this);
                    #region Условия поиска
                    this.mInstallUpdateButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "InstallUpdate_bt";
                    this.mInstallUpdateButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mInstallUpdateButton;
            }
        }

        public WpfButton TuPropButton
        {
            get
            {
                if ((this.mTuPropButton == null))
                {
                    this.mTuPropButton = new WpfButton(this);
                    #region Условия поиска
                    this.mTuPropButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TuProperties_bt";
                    this.mTuPropButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTuPropButton;
            }
        }

        public WpfButton SAFSBButton
        {
            get
            {
                if ((this.mSAFSBButton == null))
                {
                    this.mSAFSBButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSAFSBButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SAFSB_bt";
                    this.mSAFSBButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSAFSBButton;
            }
        }

        public WpfButton PTKKGRButton
        {
            get
            {
                if ((this.mPTKKGRButton == null))
                {
                    this.mPTKKGRButton = new WpfButton(this);
                    #region Условия поиска
                    this.mPTKKGRButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PTKKGR_bt";
                    this.mPTKKGRButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mPTKKGRButton;
            }
        }

        public WpfButton RecreateButton
        {
            get
            {
                if ((this.mRecreateButton == null))
                {
                    this.mRecreateButton = new WpfButton(this);
                    #region Условия поиска
                    this.mRecreateButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "RIO_bt";
                    this.mRecreateButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRecreateButton;
            }
        }

        public WpfButton UserListButton
        {
            get
            {
                if ((this.mUserListButton == null))
                {
                    this.mUserListButton = new WpfButton(this);
                    #region Условия поиска
                    this.mUserListButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UsersList_bt";
                    this.mUserListButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mUserListButton;
            }
        }

        public WpfButton AddUserButton
        {
            get
            {
                if ((this.mAddUserButton == null))
                {
                    this.mAddUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mAddUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AddUser_bt";
                    this.mAddUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAddUserButton;
            }
        }

        public Tree Tree
        {
            get
            {
                if ((this.mTree == null))
                {
                    this.mTree = new Tree(this);
                }
                return this.mTree;
            }
        }

        public SAFSBData SAFSBData
        {
            get
            {
                if ((this.mSAFSBData == null))
                {
                    this.mSAFSBData = new SAFSBData(this);
                }
                return this.mSAFSBData;
            }
        }

        public TechUserData TechUserData
        {
            get
            {
                if ((this.mTechUserData == null))
                {
                    this.mTechUserData = new TechUserData(this);
                }
                return this.mTechUserData;
            }
        }
        #endregion

        #region Fields
        private MasterWindow mMasterWindow;

        private WpfButton mInstallUpdateButton;

        private WpfButton mTuPropButton;

        private WpfButton mSAFSBButton;

        private WpfButton mPTKKGRButton;

        private WpfButton mRecreateButton;

        private WpfButton mUserListButton;

        private WpfButton mAddUserButton;

        private Tree mTree;

        private SAFSBData mSAFSBData;

        private TechUserData mTechUserData;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class MasterWindow : WpfCustom
    {

        public MasterWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MasterView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "MasterView";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public NavigationPanel NavigationPanel
        {
            get
            {
                if ((this.mNavigationPanel == null))
                {
                    this.mNavigationPanel = new NavigationPanel(this);
                }
                return this.mNavigationPanel;
            }
        }

        public TuPropWindow TuPropWindow
        {
            get
            {
                if ((this.mTuPropWindow == null))
                {
                    this.mTuPropWindow = new TuPropWindow(this);
                }
                return this.mTuPropWindow;
            }
        }

        public RecreateObjectsPanel RecreateObjectsPanel
        {
            get
            {
                if ((this.mRecreateObjectsPanel == null))
                {
                    this.mRecreateObjectsPanel = new RecreateObjectsPanel(this);
                }
                return this.mRecreateObjectsPanel;
            }
        }

        public UserPanel UserPanel
        {
            get
            {
                if ((this.mUserPanel == null))
                {
                    this.mUserPanel = new UserPanel(this);
                }
                return this.mUserPanel;
            }
        }

        public EditUserPanel EditUserPanel
        {
            get
            {
                if ((this.mEditUserPanel == null))
                {
                    this.mEditUserPanel = new EditUserPanel(this);
                }
                return this.mEditUserPanel;
            }
        }

        public SafsbPanel SafsbPanel
        {
            get
            {
                if ((this.mSafsbPanel == null))
                {
                    this.mSafsbPanel = new SafsbPanel(this);
                }
                return this.mSafsbPanel;
            }
        }
        #endregion

        #region Fields
        private NavigationPanel mNavigationPanel;

        private TuPropWindow mTuPropWindow;

        private RecreateObjectsPanel mRecreateObjectsPanel;

        private UserPanel mUserPanel;

        private EditUserPanel mEditUserPanel;

        private SafsbPanel mSafsbPanel;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NavigationPanel : WpfCustom
    {

        public NavigationPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.NavigationPanel";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "NavigationPanel";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfToggleButton UpdateVersionButton
        {
            get
            {
                if ((this.mUpdateVersionButton == null))
                {
                    this.mUpdateVersionButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mUpdateVersionButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "UpdatingVersion_bt";
                    this.mUpdateVersionButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mUpdateVersionButton;
            }
        }

        public WpfToggleButton PrepareButton
        {
            get
            {
                if ((this.mPrepareButton == null))
                {
                    this.mPrepareButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mPrepareButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "WorkPreparation_bt";
                    this.mPrepareButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mPrepareButton;
            }
        }

        public WpfToggleButton UsersButton
        {
            get
            {
                if ((this.mUsersButton == null))
                {
                    this.mUsersButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mUsersButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "Users_bt";
                    this.mUsersButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mUsersButton;
            }
        }

        public WpfToggleButton ServiceButton
        {
            get
            {
                if ((this.mServiceButton == null))
                {
                    this.mServiceButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mServiceButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "Service_bt";
                    this.mServiceButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mServiceButton;
            }
        }
        #endregion

        #region Fields
        private WpfToggleButton mUpdateVersionButton;

        private WpfToggleButton mPrepareButton;

        private WpfToggleButton mUsersButton;

        private WpfToggleButton mServiceButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TuPropWindow : WpfCustom
    {

        public TuPropWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DepartmentProperties";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DepartmentProperties";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfComboBox RegionsComboBox
        {
            get
            {
                if ((this.mRegionsComboBox == null))
                {
                    this.mRegionsComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mRegionsComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "TreeComboBox";
                    this.mRegionsComboBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRegionsComboBox;
            }
        }

        public WpfText NameTextBlock
        {
            get
            {
                if ((this.mNameTextBlock == null))
                {
                    this.mNameTextBlock = new WpfText(this);
                    #region Условия поиска
                    this.mNameTextBlock.SearchProperties[WpfText.PropertyNames.ClassName] = "Uia.TextBlock";
                    this.SearchProperties.Add(WpfText.PropertyNames.Name, "ГУ Банка России", PropertyExpressionOperator.Contains);
                    this.mNameTextBlock.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mNameTextBlock;
            }
        }
        #endregion

        #region Fields
        private WpfComboBox mRegionsComboBox;

        private WpfText mNameTextBlock;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RecreateObjectsPanel : WpfCustom
    {

        public RecreateObjectsPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RecreateInnerObjects";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "RecreateInnerObjects";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfCheckBox RecreateViewCheckBox
        {
            get
            {
                if ((this.mRecreateViewCheckBox == null))
                {
                    this.mRecreateViewCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mRecreateViewCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Views_RecreateInnerObjects_cb";
                    this.mRecreateViewCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRecreateViewCheckBox;
            }
        }

        public WpfCheckBox RecreateProcedureCheckBox
        {
            get
            {
                if ((this.mRecreateProcedureCheckBox == null))
                {
                    this.mRecreateProcedureCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mRecreateProcedureCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Procedures_RecreateInnerObjects_cb";
                    this.mRecreateProcedureCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRecreateProcedureCheckBox;
            }
        }

        public WpfCheckBox AddRigthsCheckBox
        {
            get
            {
                if ((this.mAddRigthsCheckBox == null))
                {
                    this.mAddRigthsCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mAddRigthsCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Grants_RecreateInnerObjects_cb";
                    this.mAddRigthsCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAddRigthsCheckBox;
            }
        }

        public WpfButton RecreateButton
        {
            get
            {
                if ((this.mRecreateButton == null))
                {
                    this.mRecreateButton = new WpfButton(this);
                    #region Условия поиска
                    this.mRecreateButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "RIO_RecreateInnerObjects_bt";
                    this.mRecreateButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRecreateButton;
            }
        }
        #endregion

        #region Fields
        private WpfCheckBox mRecreateViewCheckBox;

        private WpfCheckBox mRecreateProcedureCheckBox;

        private WpfCheckBox mAddRigthsCheckBox;

        private WpfButton mRecreateButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UserPanel : WpfCustom
    {

        public UserPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Users";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Users";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public UserList UserList
        {
            get
            {
                if ((this.mUserList == null))
                {
                    this.mUserList = new UserList(this);
                }
                return this.mUserList;
            }
        }

        public WpfButton EditUserButton
        {
            get
            {
                if ((this.mEditUserButton == null))
                {
                    this.mEditUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mEditUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Edit_UserControl_bt";
                    this.mEditUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mEditUserButton;
            }
        }

        public WpfButton RefreshUserButton
        {
            get
            {
                if ((this.mRefreshUserButton == null))
                {
                    this.mRefreshUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mRefreshUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UpdateUser_UserControl_bt";
                    this.mRefreshUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRefreshUserButton;
            }
        }

        public WpfButton DeleteUserButton
        {
            get
            {
                if ((this.mDeleteUserButton == null))
                {
                    this.mDeleteUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mDeleteUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Remove_UserControl_bt";
                    this.mDeleteUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mDeleteUserButton;
            }
        }

        public WpfButton AddUserButton
        {
            get
            {
                if ((this.mAddUserButton == null))
                {
                    this.mAddUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mAddUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Add_UserControl_bt";
                    this.mAddUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAddUserButton;
            }
        }

        public WpfButton RefreshAllUserButton
        {
            get
            {
                if ((this.mRefreshAllUserButton == null))
                {
                    this.mRefreshAllUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mRefreshAllUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UpdateUsers_UserControl_bt";
                    this.mRefreshAllUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRefreshAllUserButton;
            }
        }
        #endregion

        #region Fields
        private UserList mUserList;

        private WpfButton mEditUserButton;

        private WpfButton mRefreshUserButton;

        private WpfButton mDeleteUserButton;

        private WpfButton mAddUserButton;

        private WpfButton mRefreshAllUserButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UserList : WpfList
    {

        public UserList(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "UsersListView";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfListItem RIOListItem
        {
            get
            {
                if ((this.mRIOListItem == null))
                {
                    this.mRIOListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIOListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "UserControl_RIO_lv";
                    this.mRIOListItem.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRIOListItem;
            }
        }

        public WpfListItem RIO_2ListItem
        {
            get
            {
                if ((this.mRIO_2ListItem == null))
                {
                    this.mRIO_2ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_2ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "UserControl_RIO_2_lv";
                    this.mRIO_2ListItem.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRIO_2ListItem;
            }
        }

        public WpfListItem RIO_3ListItem
        {
            get
            {
                if ((this.mRIO_3ListItem == null))
                {
                    this.mRIO_3ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_3ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "UserControl_RIO_3_lv";
                    this.mRIO_3ListItem.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRIO_3ListItem;
            }
        }

        public WpfListItem RIO_4ListItem
        {
            get
            {
                if ((this.mRIO_4ListItem == null))
                {
                    this.mRIO_4ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_4ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "UserControl_RIO_4_lv";
                    this.mRIO_4ListItem.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRIO_4ListItem;
            }
        }
        #endregion

        #region Fields
        private WpfListItem mRIOListItem;

        private WpfListItem mRIO_2ListItem;

        private WpfListItem mRIO_3ListItem;

        private WpfListItem mRIO_4ListItem;
        #endregion
    }

    public class SafsbPanel : WpfCustom
    {

        public SafsbPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Safsb";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Safsb";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        public WpfButton CreateConnectSafsb
        {
            get
            {
                if ((this.mCreateConnectSafsb == null))
                {
                    this.mCreateConnectSafsb = new WpfButton(this);
                    #region Условия поиска
                    this.mCreateConnectSafsb.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CreateLinkToSAFSB_Safsb_bt";
                    this.mCreateConnectSafsb.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mCreateConnectSafsb;
            }
        }

        #region Fields

        private WpfButton mCreateConnectSafsb;
        #endregion


    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EditUserPanel : WpfCustom
    {

        public EditUserPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.EditUser";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "EditUser";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfButton SelectPersonButton
        {
            get
            {
                if ((this.mSelectPersonButton == null))
                {
                    this.mSelectPersonButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSelectPersonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SelectPerson_EditUser_bt";
                    this.mSelectPersonButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSelectPersonButton;
            }
        }

        public WpfEdit LoginEdit
        {
            get
            {
                if ((this.mLoginEdit == null))
                {
                    this.mLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Login_EditUser_tb";
                    this.mLoginEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mLoginEdit;
            }
        }

        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Password_EditUser_tb";
                    this.mPasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }

        public WpfEdit RePasswordEdit
        {
            get
            {
                if ((this.mRePasswordEdit == null))
                {
                    this.mRePasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mRePasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RePassword_EditUser_tb";
                    this.mRePasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRePasswordEdit;
            }
        }


        public WpfRadioButton AsiAutoStartRadioButton
        {
            get
            {
                if ((this.mAsiAutoStartRadioButton == null))
                {
                    this.mAsiAutoStartRadioButton = new WpfRadioButton(this);
                    #region Условия поиска
                    this.mAsiAutoStartRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "AsiAutoStartObject_EditUser_rb";
                    this.mAsiAutoStartRadioButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAsiAutoStartRadioButton;
            }
        }

        public WpfButton SaveUserButton
        {
            get
            {
                if ((this.mSaveUserButton == null))
                {
                    this.mSaveUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSaveUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Save_EditUser_bt";
                    this.mSaveUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSaveUserButton;
            }
        }

        #endregion

        #region Fields
        private WpfButton mSelectPersonButton;

        private WpfEdit mLoginEdit;

        private WpfEdit mPasswordEdit;

        private WpfEdit mRePasswordEdit;

        private WpfRadioButton mAsiAutoStartRadioButton;

        private WpfButton mSaveUserButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class Tree : WpfTree
    {

        public Tree(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "PART_TreeView";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public TreeLvL1 TreeLvL1
        {
            get
            {
                if ((this.mTreeLvL1 == null))
                {
                    this.mTreeLvL1 = new TreeLvL1(this);
                }
                return this.mTreeLvL1;
            }
        }
        #endregion

        #region Fields
        private TreeLvL1 mTreeLvL1;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TreeLvL1 : WpfTreeItem
    {

        public TreeLvL1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfTreeItem TreeLvL2
        {
            get
            {
                if ((this.mTreeLvL2 == null))
                {
                    this.mTreeLvL2 = new WpfTreeItem(this);
                    #region Условия поиска
                    this.mTreeLvL2.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mTreeLvL2.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mTreeLvL2.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTreeLvL2;
            }
        }

        public WpfTreeItem TreeLvL2Selected
        {
            get
            {
                if ((this.mTreeLvL2Selected == null))
                {
                    this.mTreeLvL2Selected = new WpfTreeItem(this);
                    #region Условия поиска
                    this.mTreeLvL2Selected.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mTreeLvL2Selected.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mTreeLvL2Selected.SearchProperties[WpfTreeItem.PropertyNames.Selected] = "True";
                    this.mTreeLvL2Selected.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTreeLvL2Selected;
            }
        }
        #endregion

        #region Fields
        private WpfTreeItem mTreeLvL2;

        private WpfTreeItem mTreeLvL2Selected;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SAFSBData : WpfGroup
    {

        public SAFSBData(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Расположение данных САФСБ:";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public ServerProperties ServerProperties
        {
            get
            {
                if ((this.mServerProperties == null))
                {
                    this.mServerProperties = new ServerProperties(this);
                }
                return this.mServerProperties;
            }
        }

        public WpfEdit SchemaNameEdit
        {
            get
            {
                if ((this.mSchemaNameEdit == null))
                {
                    this.mSchemaNameEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mSchemaNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Db_Safsb_tb";
                    //this.mSchemaNameEdit.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mSchemaNameEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSchemaNameEdit;
            }
        }

        public WpfEdit ServerMSSQLEdit
        {
            get
            {
                if ((this.mServerMSSQLEdit == null))
                {
                    this.mServerMSSQLEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mServerMSSQLEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Server_Safsb_tb";
                    this.mServerMSSQLEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mServerMSSQLEdit;
            }
        }
        #endregion

        #region Fields
        private ServerProperties mServerProperties;

        private WpfEdit mSchemaNameEdit;

        private WpfEdit mServerMSSQLEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ServerProperties : WpfGroup
    {

        public ServerProperties(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Свойства сервера (из TNSNAMES.ORA):";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfEdit ProtocolEdit
        {
            get
            {
                if ((this.mProtocolEdit == null))
                {
                    this.mProtocolEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mProtocolEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Protocol_Safsb_tb";
                    this.mProtocolEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mProtocolEdit;
            }
        }

        public WpfEdit HostEdit
        {
            get
            {
                if ((this.mHostEdit == null))
                {
                    this.mHostEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mHostEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Host_Safsb_tb";
                    this.mHostEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mHostEdit;
            }
        }

        public WpfEdit PortEdit
        {
            get
            {
                if ((this.mPortEdit == null))
                {
                    this.mPortEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mPortEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Port_Safsb_tb";
                    this.mPortEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mPortEdit;
            }
        }

        public WpfEdit ServiceEdit
        {
            get
            {
                if ((this.mServiceEdit == null))
                {
                    this.mServiceEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mServiceEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Service_Safsb_tb";
                    this.mServiceEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mServiceEdit;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mProtocolEdit;

        private WpfEdit mHostEdit;

        private WpfEdit mPortEdit;

        private WpfEdit mServiceEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TechUserData : WpfCustom
    {

        public TechUserData(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Safsb";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Safsb";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public TechUserDataGroup TechUserDataGroup
        {
            get
            {
                if ((this.mTechUserDataGroup == null))
                {
                    this.mTechUserDataGroup = new TechUserDataGroup(this);
                }
                return this.mTechUserDataGroup;
            }
        }

        public WpfCheckBox NeedCreateTechUserCheckBox
        {
            get
            {
                if ((this.mNeedCreateTechUserCheckBox == null))
                {
                    this.mNeedCreateTechUserCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mNeedCreateTechUserCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "NeedCreateTechUser_Safsb_cb";
                    this.mNeedCreateTechUserCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mNeedCreateTechUserCheckBox;
            }
        }

        public SYSTEMGroup SYSTEMGroup
        {
            get
            {
                if ((this.mSYSTEMGroup == null))
                {
                    this.mSYSTEMGroup = new SYSTEMGroup(this);
                }
                return this.mSYSTEMGroup;
            }
        }

        public SAFSBSystemGroup SAFSBSystemGroup
        {
            get
            {
                if ((this.mSAFSBSystemGroup == null))
                {
                    this.mSAFSBSystemGroup = new SAFSBSystemGroup(this);
                }
                return this.mSAFSBSystemGroup;
            }
        }

        public WpfCheckBox AddRigthsTechUserCheckBox
        {
            get
            {
                if ((this.mAddRigthsTechUserCheckBox == null))
                {
                    this.mAddRigthsTechUserCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mAddRigthsTechUserCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "NeedGrantsToTechUser_Safsb_cb";
                    this.mAddRigthsTechUserCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAddRigthsTechUserCheckBox;
            }
        }

        public WpfButton CreateConnectSafsbButton
        {
            get
            {
                if ((this.mCreateConnectSafsbButton == null))
                {
                    this.mCreateConnectSafsbButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCreateConnectSafsbButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CreateLinkToSAFSB_Safsb_bt";
                    this.mCreateConnectSafsbButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mCreateConnectSafsbButton;
            }
        }

        public LogWindow LogWindow
        {
            get
            {
                if ((this.mLogWindow == null))
                {
                    this.mLogWindow = new LogWindow(this);
                }
                return this.mLogWindow;
            }
        }
        #endregion

        #region Fields
        private TechUserDataGroup mTechUserDataGroup;

        private WpfCheckBox mNeedCreateTechUserCheckBox;

        private SYSTEMGroup mSYSTEMGroup;

        private SAFSBSystemGroup mSAFSBSystemGroup;

        private WpfCheckBox mAddRigthsTechUserCheckBox;

        private WpfButton mCreateConnectSafsbButton;

        private LogWindow mLogWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TechUserDataGroup : WpfGroup
    {

        public TechUserDataGroup(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Учетные данные технологического пользователя:";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfEdit TechUserLoginEdit
        {
            get
            {
                if ((this.mTechUserLoginEdit == null))
                {
                    this.mTechUserLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mTechUserLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TechUserLogin_Safsb_tb";
                    this.mTechUserLoginEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTechUserLoginEdit;
            }
        }

        public WpfEdit TechUserPasswordEdit
        {
            get
            {
                if ((this.mTechUserPasswordEdit == null))
                {
                    this.mTechUserPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mTechUserPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TechUserPassword_Safsb_tb";
                    this.mTechUserPasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTechUserPasswordEdit;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mTechUserLoginEdit;

        private WpfEdit mTechUserPasswordEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SYSTEMGroup : WpfGroup
    {

        public SYSTEMGroup(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Учетные данные пользователя с правами создания пользователей:";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfEdit SystemLoginEdit
        {
            get
            {
                if ((this.mSystemLoginEdit == null))
                {
                    this.mSystemLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mSystemLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SysUserLogin_Safsb_tb";
                    this.mSystemLoginEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSystemLoginEdit;
            }
        }

        public WpfEdit SystemPasswordEdit
        {
            get
            {
                if ((this.mSystemPasswordEdit == null))
                {
                    this.mSystemPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mSystemPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SysUserPassword_Safsb_tb";
                    this.mSystemPasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSystemPasswordEdit;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mSystemLoginEdit;

        private WpfEdit mSystemPasswordEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SAFSBSystemGroup : WpfGroup
    {

        public SAFSBSystemGroup(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Учетные данные пользователя - владельца схемы с данными САФСБ:";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfCheckBox EqualSystemSafsbSysCheckBox
        {
            get
            {
                if ((this.mEqualSystemSafsbSysCheckBox == null))
                {
                    this.mEqualSystemSafsbSysCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mEqualSystemSafsbSysCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "SysEqualsOwner_Safsb_cb";
                    this.mEqualSystemSafsbSysCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mEqualSystemSafsbSysCheckBox;
            }
        }

        public WpfEdit OwnerSafsbLoginEdit
        {
            get
            {
                if ((this.mOwnerSafsbLoginEdit == null))
                {
                    this.mOwnerSafsbLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mOwnerSafsbLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "OwnerUserLogin_Safsb_tb";
                    this.mOwnerSafsbLoginEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mOwnerSafsbLoginEdit;
            }
        }

        public WpfEdit OwnerSafsbPasswordEdit
        {
            get
            {
                if ((this.mOwnerSafsbPasswordEdit == null))
                {
                    this.mOwnerSafsbPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mOwnerSafsbPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "OwnUserPassword_Safsb_tb";
                    this.mOwnerSafsbPasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mOwnerSafsbPasswordEdit;
            }
        }
        #endregion

        #region Fields
        private WpfCheckBox mEqualSystemSafsbSysCheckBox;

        private WpfEdit mOwnerSafsbLoginEdit;

        private WpfEdit mOwnerSafsbPasswordEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class LogWindow : WpfExpander
    {

        public LogWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfExpander.PropertyNames.Name] = "Лог настройки на САФСБ";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfEdit TextLog
        {
            get
            {
                if ((this.mTextLog == null))
                {
                    this.mTextLog = new WpfEdit(this);
                    #region Условия поиска
                    this.mTextLog.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Logger_Safsb_tb";
                    this.mTextLog.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTextLog;
            }
        }

        public WpfButton Expand
        {
            get
            {
                if ((this.mExpand == null))
                {
                    this.mExpand = new WpfButton(this);
                    #region Условия поиска
                    this.mExpand.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
                    this.mExpand.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mExpand;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mTextLog;

        private WpfButton mExpand;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OKWindow1 : WinWindow
    {

        public OKWindow1()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ОК";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("ОК");
            #endregion
        }

        #region Properties
        public WinButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WinButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mOKButton.WindowTitles.Add("ОК");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mOKButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EmployeeWindow : WpfWindow
    {

        public EmployeeWindow()
        {
            #region Условия поиска
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Список сотрудников";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Список сотрудников");
            #endregion
        }

        #region Properties
        public WpfButton AddEmployeeButton
        {
            get
            {
                if ((this.mAddEmployeeButton == null))
                {
                    this.mAddEmployeeButton = new WpfButton(this);
                    #region Условия поиска
                    this.mAddEmployeeButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AddUserPreviewButton_SelectPersonDialog_bt";
                    this.mAddEmployeeButton.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mAddEmployeeButton;
            }
        }

        public EmployeeList EmployeeList
        {
            get
            {
                if ((this.mEmployeeList == null))
                {
                    this.mEmployeeList = new EmployeeList(this);
                    #region Условия поиска
                    this.mEmployeeList.SearchProperties[WpfList.PropertyNames.AutomationId] = "PersonsListBox";
                    this.mEmployeeList.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mEmployeeList;
            }
        }

        public WpfButton SelectButton
        {
            get
            {
                if ((this.mSelectButton == null))
                {
                    this.mSelectButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSelectButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Select_SelectPersonDialog_bt";
                    this.mSelectButton.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mSelectButton;
            }
        }

        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Cancel_SelectPersonDialog_bt";
                    this.mCancelButton.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mCancelButton;
            }
        }

        public WpfEdit FIOEmployeeEdit
        {
            get
            {
                if ((this.mFIOEmployeeEdit == null))
                {
                    this.mFIOEmployeeEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mFIOEmployeeEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "LastName_SelectPersonDialog_tb";
                    this.mFIOEmployeeEdit.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mFIOEmployeeEdit;
            }
        }

        public WpfButton AddUserButton
        {
            get
            {
                if ((this.mAddUserButton == null))
                {
                    this.mAddUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mAddUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AddUser_SelectPersonDialog_bt";
                    this.mAddUserButton.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mAddUserButton;
            }
        }
        #endregion

        #region Fields
        private WpfButton mAddEmployeeButton;

        private EmployeeList mEmployeeList;

        private WpfButton mSelectButton;

        private WpfButton mCancelButton;

        private WpfEdit mFIOEmployeeEdit;

        private WpfButton mAddUserButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ISA_Window : WinWindow
    {

        public ISA_Window()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Учетные данные АИБа";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Учетные данные АИБа");
            #endregion
        }

        #region Properties
        public WpfEdit IsaLoginEdit
        {
            get
            {
                if ((this.mIsaLoginEdit == null))
                {
                    this.mIsaLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mIsaLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "IsaLoginTextBox";
                    this.mIsaLoginEdit.WindowTitles.Add("Учетные данные АИБа");
                    #endregion
                }
                return this.mIsaLoginEdit;
            }
        }

        public WpfEdit IsaPasswordEdit
        {
            get
            {
                if ((this.mIsaPasswordEdit == null))
                {
                    this.mIsaPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mIsaPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "IsaPassPasswordBox";
                    this.mIsaPasswordEdit.WindowTitles.Add("Учетные данные АИБа");
                    #endregion
                }
                return this.mIsaPasswordEdit;
            }
        }

        public WpfButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WpfButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WpfButton.PropertyNames.Name] = "    OK     ";
                    this.mOKButton.WindowTitles.Add("Учетные данные АИБа");
                    #endregion
                }
                return this.mOKButton;
            }
        }

        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Отмена";
                    this.mCancelButton.WindowTitles.Add("Учетные данные АИБа");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mIsaLoginEdit;

        private WpfEdit mIsaPasswordEdit;

        private WpfButton mOKButton;

        private WpfButton mCancelButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UserCreatedWindow : WinWindow
    {

        public UserCreatedWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Пользователь успешно сохранен";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Пользователь успешно сохранен");
            #endregion
        }

        #region Properties
        public OKWindow2 OKWindow2
        {
            get
            {
                if ((this.mOKWindow2 == null))
                {
                    this.mOKWindow2 = new OKWindow2(this);
                }
                return this.mOKWindow2;
            }
        }
        #endregion

        #region Fields
        private OKWindow2 mOKWindow2;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ОКWindow : WinWindow
    {

        public ОКWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "ОК";
            this.WindowTitles.Add("Пользователь успешно сохранен");
            #endregion
        }

        #region Properties
        public WinButton ОКButton
        {
            get
            {
                if ((this.mОКButton == null))
                {
                    this.mОКButton = new WinButton(this);
                    #region Условия поиска
                    this.mОКButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mОКButton.WindowTitles.Add("Пользователь успешно сохранен");
                    #endregion
                }
                return this.mОКButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mОКButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class InfoWindow : WinWindow
    {

        public InfoWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Информация";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Информация");
            #endregion
        }

        #region Properties
        public OKWindow2 OKWindow
        {
            get
            {
                if ((this.mOKWindow2 == null))
                {
                    this.mOKWindow2 = new OKWindow2(this);
                }
                return this.mOKWindow2;
            }
        }
        #endregion

        #region Fields
        private OKWindow2 mOKWindow2;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OKWindow2 : WinWindow
    {
        public OKWindow2(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "ОК";
            this.WindowTitles.Add("Информация");
            #endregion
        }

        #region Properties
        public WinButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WinButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mOKButton.WindowTitles.Add("Информация");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mOKButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EmployeeList : WpfList
    {

        public EmployeeList(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "PersonsListBox";
            this.WindowTitles.Add("Список сотрудников");
            #endregion
        }

        #region Properties
        public WpfListItem RIO_4ListItem
        {
            get
            {
                if ((this.mRIO_4ListItem == null))
                {
                    this.mRIO_4ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_4ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "SelectPersonDialog_RIO_4_lv";
                    this.mRIO_4ListItem.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mRIO_4ListItem;
            }
        }

        public WpfListItem RIO_3ListItem
        {
            get
            {
                if ((this.mRIO_3ListItem == null))
                {
                    this.mRIO_3ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_3ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "SelectPersonDialog_RIO_3_lv";
                    this.mRIO_3ListItem.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mRIO_3ListItem;
            }
        }

        public WpfListItem RIO_2ListItem
        {
            get
            {
                if ((this.mRIO_2ListItem == null))
                {
                    this.mRIO_2ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_2ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "SelectPersonDialog_РИО_2_lv";
                    this.mRIO_2ListItem.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mRIO_2ListItem;
            }
        }

        public WpfListItem RIOListItem
        {
            get
            {
                if ((this.mRIOListItem == null))
                {
                    this.mRIOListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIOListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "SelectPersonDialog_РИО_lv";
                    this.mRIOListItem.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mRIOListItem;
            }
        }
        #endregion

        #region Fields
        private WpfListItem mRIO_4ListItem;

        private WpfListItem mRIO_3ListItem;

        private WpfListItem mRIO_2ListItem;

        private WpfListItem mRIOListItem;
        #endregion
    }

    public class AcceptWindow : WinWindow
    {

        public AcceptWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Подтверждение";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Подтверждение");
            #endregion
        }

        #region Properties
        public Acc_YesWindow Acc_YesWindow
        {
            get
            {
                if ((this.mAcc_YesWindow == null))
                {
                    this.mAcc_YesWindow = new Acc_YesWindow(this);
                }
                return this.mAcc_YesWindow;
            }
        }

        public Acc_NoWindow Acc_NoWindow
        {
            get
            {
                if ((this.mAcc_NoWindow == null))
                {
                    this.mAcc_NoWindow = new Acc_NoWindow(this);
                }
                return this.mAcc_NoWindow;
            }
        }
        #endregion

        #region Fields
        private Acc_YesWindow mAcc_YesWindow;

        private Acc_NoWindow mAcc_NoWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class Acc_YesWindow : WinWindow
    {

        public Acc_YesWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Подтверждение");
            #endregion
        }

        #region Properties
        public WinButton YesButton
        {
            get
            {
                if ((this.mYesButton == null))
                {
                    this.mYesButton = new WinButton(this);
                    #region Условия поиска
                    this.mYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Да";
                    this.mYesButton.WindowTitles.Add("Подтверждение");
                    #endregion
                }
                return this.mYesButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mYesButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class Acc_NoWindow : WinWindow
    {

        public Acc_NoWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "7";
            this.WindowTitles.Add("Подтверждение");
            #endregion
        }

        #region Properties
        public WinButton NoButton
        {
            get
            {
                if ((this.mNoButton == null))
                {
                    this.mNoButton = new WinButton(this);
                    #region Условия поиска
                    this.mNoButton.SearchProperties[WinButton.PropertyNames.Name] = "Нет";
                    this.mNoButton.WindowTitles.Add("Подтверждение");
                    #endregion
                }
                return this.mNoButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mNoButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ASI_Window : WinWindow
    {

        public ASI_Window()
        {
            #region Условия поиска
            this.SearchProperties.Add(WinWindow.PropertyNames.Name, "АС Инспектора ", PropertyExpressionOperator.Contains);
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVWS_MAINFORMForm";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Импорт из АФСБ]");
            #endregion
        }

        #region Properties
        public ReestrWindow ReestrWindow
        {
            get
            {
                if ((this.mReestrWindow == null))
                {
                    this.mReestrWindow = new ReestrWindow(this);
                }
                return this.mReestrWindow;
            }
        }

        public WinWindow BorrowerWindow
        {
            get
            {
                if ((this.mBorrowerWindow == null))
                {
                    this.mBorrowerWindow = new WinWindow(this);
                    #region Условия поиска
                    this.mBorrowerWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Информация о заемщиках";
                    this.mBorrowerWindow.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Реестр проверок]");
                    #endregion
                }
                return this.mBorrowerWindow;
            }
        }

        public WinWindow GivingTaskWindow
        {
            get
            {
                if ((this.mGivingTaskWindow == null))
                {
                    this.mGivingTaskWindow = new WinWindow(this);
                    #region Условия поиска
                    this.mGivingTaskWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Распределение задания";
                    this.mGivingTaskWindow.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Реестр проверок]");
                    #endregion
                }
                return this.mGivingTaskWindow;
            }
        }

        public WinWindow CreateTaskWindow
        {
            get
            {
                if ((this.mCreateTaskWindow == null))
                {
                    this.mCreateTaskWindow = new WinWindow(this);
                    #region Условия поиска
                    this.mCreateTaskWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Формирование заданий";
                    this.mCreateTaskWindow.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Реестр проверок]");
                    #endregion
                }
                return this.mCreateTaskWindow;
            }
        }

        public CalcSpr CalcSpr
        {
            get
            {
                if ((this.mCalcSpr == null))
                {
                    this.mCalcSpr = new CalcSpr(this);
                }
                return this.mCalcSpr;
            }
        }

        public ImportAFSB ImportAFSB
        {
            get
            {
                if ((this.mImportAFSB == null))
                {
                    this.mImportAFSB = new ImportAFSB(this);
                }
                return this.mImportAFSB;
            }
        }

        public MaterialWindow MaterialWindow
        {
            get
            {
                if ((this.mMaterialWindow == null))
                {
                    this.mMaterialWindow = new MaterialWindow(this);
                }
                return this.mMaterialWindow;
            }
        }

        public AddCustomBorrowerWindow AddCustomBorrowerWindow
        {
            get
            {
                if ((this.mAddCustomBorrowerWindow == null))
                {
                    this.mAddCustomBorrowerWindow = new AddCustomBorrowerWindow(this);
                }
                return this.mAddCustomBorrowerWindow;
            }
        }

        public WinWindow IndReportWindow
        {
            get
            {
                if ((this.mIndReportWindow == null))
                {
                    this.mIndReportWindow = new WinWindow(this);
                    #region Условия поиска
                    this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.AccessibleName, "Индивидуальный отчет", PropertyExpressionOperator.Contains));
                    this.mIndReportWindow.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mIndReportWindow;
            }
        }

        public WinWindow AktReportWindow
        {
            get
            {
                if ((this.mAktReportWindow == null))
                {
                    this.mAktReportWindow = new WinWindow(this);
                    #region Условия поиска 
                    this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.AccessibleName, "Акт проверки", PropertyExpressionOperator.Contains));
                    this.mAktReportWindow.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mAktReportWindow;
            }
        }
        public InfoInspectWindow InfoInspectWindow
        {
            get
            {
                if ((this.mInfoInspectWindow == null))
                {
                    this.mInfoInspectWindow = new InfoInspectWindow(this);
                }
                return this.mInfoInspectWindow;
            }
        }
        #endregion

        #region Fields
        private ReestrWindow mReestrWindow;

        private WinWindow mGivingTaskWindow;

        private WinWindow mBorrowerWindow;

        private CalcSpr mCalcSpr;

        private ImportAFSB mImportAFSB;

        private WinWindow mCreateTaskWindow;

        private MaterialWindow mMaterialWindow;

        private AddCustomBorrowerWindow mAddCustomBorrowerWindow;

        private WinWindow mIndReportWindow;

        private WinWindow mAktReportWindow;

        private InfoInspectWindow mInfoInspectWindow;
        #endregion
    }

    public class CalcSpr : WinWindow
    {
        public CalcSpr(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Загрузка данных в cправочники";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Загрузка данных в cправочники]");
            #endregion
        }


        #region Properties
        public UploadWindow UploadWindow
        {
            get
            {
                if ((this.mUploadWindow == null))
                {
                    this.mUploadWindow = new UploadWindow(this);
                }
                return this.mUploadWindow;
            }
        }
        #endregion

        #region Fields
        private UploadWindow mUploadWindow;
        #endregion

    }

    public class UploadWindow : WinWindow
    {

        public UploadWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Загрузить";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Загрузка данных в cправочники]");
            #endregion
        }

        #region Properties
        public WinButton UploadButton
        {
            get
            {
                if ((this.mUploadButton == null))
                {
                    this.mUploadButton = new WinButton(this);
                    #region Условия поиска
                    this.mUploadButton.SearchProperties[WinButton.PropertyNames.Name] = "Загрузить";
                    this.mUploadButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Загрузка данных в cправочники]");
                    #endregion
                }
                return this.mUploadButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mUploadButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ImportAFSB : WinWindow
    {

        public ImportAFSB(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Импорт из АФСБ";
            //this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFrmMDIChildForm";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Импорт из АФСБ]");
            #endregion
        }

        #region Properties
        public ImportWindow ImportWindow
        {
            get
            {
                if ((this.mImportWindow == null))
                {
                    this.mImportWindow = new ImportWindow(this);
                }
                return this.mImportWindow;
            }
        }
        #endregion

        #region Fields
        private ImportWindow mImportWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ImportWindow : WinWindow
    {

        public ImportWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Импорт";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Импорт из АФСБ]");
            #endregion
        }

        #region Properties
        public WinButton ImportButton
        {
            get
            {
                if ((this.mImportButton == null))
                {
                    this.mImportButton = new WinButton(this);
                    #region Условия поиска
                    this.mImportButton.SearchProperties[WinButton.PropertyNames.Name] = "Импорт";
                    this.mImportButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Импорт из АФСБ]");
                    #endregion
                }
                return this.mImportButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mImportButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class LogWindow1 : WinWindow
    {

        public LogWindow1()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Текущий протокол";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVADM_CURRENTLOGForm";
            this.WindowTitles.Add("Текущий протокол");
            #endregion
        }

        #region Properties
        public CloseWindow CloseWindow
        {
            get
            {
                if ((this.mCloseWindow == null))
                {
                    this.mCloseWindow = new CloseWindow(this);
                }
                return this.mCloseWindow;
            }
        }
        #endregion

        #region Fields
        private CloseWindow mCloseWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class CloseWindow : WinWindow
    {

        public CloseWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Закрыть";
            this.WindowTitles.Add("Текущий протокол");
            #endregion
        }

        #region Properties
        public WinButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WinButton(this);
                    #region Условия поиска
                    this.mCloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mCloseButton.WindowTitles.Add("Текущий протокол");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mCloseButton;
        #endregion
    }


    public class FormSprEmp : WinWindow
    {

        public FormSprEmp()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4Form";
            this.WindowTitles.Add("Form");
            #endregion
        }

        #region Properties
        public OKWindow2 OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow2(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion

        #region Fields
        private OKWindow2 mOKWindow;
        #endregion
    }

    public class SelectCode : WinWindow
    {

        public SelectCode()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Выбор проверяемых кодов вопросов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFrmQuestionSelectForm";
            this.WindowTitles.Add("Выбор проверяемых кодов вопросов");
            #endregion
        }

        #region Properties
        public OKWindow OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion

        #region Fields
        private OKWindow mOKWindow;
        #endregion
    }

    public class SettingTask : WinWindow
    {

        public SettingTask()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Настройки задачи";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFRM_SET_TASK_PROPForm";
            this.WindowTitles.Add("Настройки задачи");
            #endregion
        }

        #region Properties
        public ClarifTaskWindow ClarifTaskWindow
        {
            get
            {
                if ((this.mClarifTaskWindow == null))
                {
                    this.mClarifTaskWindow = new ClarifTaskWindow(this);
                }
                return this.mClarifTaskWindow;
            }
        }

        public SaveWindow SaveWindow
        {
            get
            {
                if ((this.mSaveWindow == null))
                {
                    this.mSaveWindow = new SaveWindow(this);
                }
                return this.mSaveWindow;
            }
        }
        #endregion

        #region Fields
        private ClarifTaskWindow mClarifTaskWindow;

        private SaveWindow mSaveWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ClarifTaskWindow : WinWindow
    {

        public ClarifTaskWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4Memo";
            this.WindowTitles.Add("Настройки задачи");
            #endregion
        }

        #region Properties
        public WinEdit ClarifTaskMemo
        {
            get
            {
                if ((this.mClarifTaskMemo == null))
                {
                    this.mClarifTaskMemo = new WinEdit(this);
                    #region Условия поиска
                    this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4Memo";
                    this.mClarifTaskMemo.WindowTitles.Add("Настройки задачи");
                    #endregion
                }
                return this.mClarifTaskMemo;
            }
        }
        #endregion

        #region Fields
        private WinEdit mClarifTaskMemo;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SaveWindow : WinWindow
    {

        public SaveWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Сохранить";
            this.WindowTitles.Add("Настройки задачи");
            #endregion
        }

        #region Properties
        public WinButton SaveButton
        {
            get
            {
                if ((this.mSaveButton == null))
                {
                    this.mSaveButton = new WinButton(this);
                    #region Условия поиска
                    this.mSaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Сохранить";
                    this.mSaveButton.WindowTitles.Add("Настройки задачи");
                    #endregion
                }
                return this.mSaveButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mSaveButton;
        #endregion
    }

    public class ContextMenuMaterial : WpfWindow
    {

        public ContextMenuMaterial()
        {
            #region Условия поиска
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }

        #region Properties
        public MenuItem MenuItem
        {
            get
            {
                if ((this.mMenuItem == null))
                {
                    this.mMenuItem = new MenuItem(this);
                }
                return this.mMenuItem;
            }
        }
        #endregion

        #region Fields
        private MenuItem mMenuItem;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class MenuItem : WpfMenu
    {

        public MenuItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfMenu.PropertyNames.ClassName] = "Uia.ContextMenu";
            #endregion
        }

        #region Properties
        public WpfMenuItem CreateMenuItem
        {
            get
            {
                if ((this.mCreateMenuItem == null))
                {
                    this.mCreateMenuItem = new WpfMenuItem(this);
                    #region Условия поиска
                    this.mCreateMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "createMenuItem";
                    #endregion
                }
                return this.mCreateMenuItem;
            }
        }

        public WpfMenuItem UploadFileMenuItem
        {
            get
            {
                if ((this.mUploadFileMenuItem == null))
                {
                    this.mUploadFileMenuItem = new WpfMenuItem(this);
                    #region Условия поиска
                    this.mUploadFileMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Загрузить внешний документ";
                    #endregion
                }
                return this.mUploadFileMenuItem;
            }
        }
        #endregion

        #region Fields
        private WpfMenuItem mCreateMenuItem;

        private WpfMenuItem mUploadFileMenuItem;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OpenFileDialog : WinWindow
    {

        public OpenFileDialog()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Открытие";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Открытие");
            #endregion
        }

        #region Properties
        public FileNameWindow FileNameWindow
        {
            get
            {
                if ((this.mFileNameWindow == null))
                {
                    this.mFileNameWindow = new FileNameWindow(this);
                }
                return this.mFileNameWindow;
            }
        }

        public OpenWindow OpenWindow
        {
            get
            {
                if ((this.mOpenWindow == null))
                {
                    this.mOpenWindow = new OpenWindow(this);
                }
                return this.mOpenWindow;
            }
        }
        #endregion

        #region Fields
        private FileNameWindow mFileNameWindow;

        private OpenWindow mOpenWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class FileNameWindow : WinWindow
    {

        public FileNameWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1148";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Открытие");
            #endregion
        }

        #region Properties
        public WinEdit FileNameEdit
        {
            get
            {
                if ((this.mFileNameEdit == null))
                {
                    this.mFileNameEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mFileNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя файла:";
                    this.mFileNameEdit.WindowTitles.Add("Открытие");
                    #endregion
                }
                return this.mFileNameEdit;
            }
        }
        #endregion

        #region Fields
        private WinEdit mFileNameEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OpenWindow : WinWindow
    {

        public OpenWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Открытие");
            #endregion
        }

        #region Properties
        public WinButton OpenButton
        {
            get
            {
                if ((this.mOpenButton == null))
                {
                    this.mOpenButton = new WinButton(this);
                    #region Условия поиска
                    this.mOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Открыть";
                    this.mOpenButton.WindowTitles.Add("Открытие");
                    #endregion
                }
                return this.mOpenButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mOpenButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class MaterialWindow : WinWindow
    {

        public MaterialWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ControlAxSourcingSite";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public MaterialClient MaterialClient
        {
            get
            {
                if ((this.mMaterialClient == null))
                {
                    this.mMaterialClient = new MaterialClient(this);
                }
                return this.mMaterialClient;
            }
        }
        #endregion

        #region Fields
        private MaterialClient mMaterialClient;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class MaterialClient : WinClient
    {

        public MaterialClient(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public MaterialPanel MaterialPanel
        {
            get
            {
                if ((this.mMaterialPanel == null))
                {
                    this.mMaterialPanel = new MaterialPanel(this);
                }
                return this.mMaterialPanel;
            }
        }
        #endregion

        #region Fields
        private MaterialPanel mMaterialPanel;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class MaterialPanel : WpfPane
    {

        public MaterialPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public MaterialCustomTree MaterialCustomTree
        {
            get
            {
                if ((this.mMaterialCustomTree == null))
                {
                    this.mMaterialCustomTree = new MaterialCustomTree(this);
                }
                return this.mMaterialCustomTree;
            }
        }
        #endregion

        #region Fields
        private MaterialCustomTree mMaterialCustomTree;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class MaterialCustomTree : WpfCustom
    {

        public MaterialCustomTree(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ASIObjectsTree";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public WpfEdit SearchEdit
        {
            get
            {
                if ((this.mSearchEdit == null))
                {
                    this.mSearchEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mSearchEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "filterTextBox";
                    this.mSearchEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mSearchEdit;
            }
        }

        public Tree1 Tree
        {
            get
            {
                if ((this.mTree == null))
                {
                    this.mTree = new Tree1(this);
                }
                return this.mTree;
            }
        }

        public WpfButton ClearFilter
        {
            get
            {
                if ((this.mClearFilter == null))
                {
                    this.mClearFilter = new WpfButton(this);
                    #region Условия поиска
                    this.mClearFilter.SearchProperties[WpfButton.PropertyNames.HelpText] = "Очистить быстрый фильтр";
                    this.mClearFilter.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mClearFilter;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mSearchEdit;

        private Tree1 mTree;

        private WpfButton mClearFilter;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class Tree1 : WpfTree
    {

        public Tree1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "objectsTreeView";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public ASITreeFirstlvl ASITreeFirstlvl
        {
            get
            {
                if ((this.mASITreeFirstlvl == null))
                {
                    this.mASITreeFirstlvl = new ASITreeFirstlvl(this);
                }
                return this.mASITreeFirstlvl;
            }
        }
        #endregion

        #region Fields
        private ASITreeFirstlvl mASITreeFirstlvl;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ASITreeFirstlvl : WpfTreeItem
    {

        public ASITreeFirstlvl(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "ASIObjectsForms.ASIObjectTreeItem";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public ASITreeSecondlvl ASITreeSecondlvl
        {
            get
            {
                if ((this.mASITreeSecondlvl == null))
                {
                    this.mASITreeSecondlvl = new ASITreeSecondlvl(this);
                }
                return this.mASITreeSecondlvl;
            }
        }
        #endregion

        #region Fields
        private ASITreeSecondlvl mASITreeSecondlvl;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ASITreeSecondlvl : WpfTreeItem
    {

        public ASITreeSecondlvl(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "ASIObjectsForms.ASIObjectTreeItem";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public WpfControl ItemInSecondlvl
        {
            get
            {
                if ((this.mItemInSecondlvl == null))
                {
                    this.mItemInSecondlvl = new WpfControl(this);
                    #region Условия поиска
                    this.mItemInSecondlvl.SearchProperties[WpfControl.PropertyNames.ControlType] = "Indicator";
                    this.mItemInSecondlvl.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemInSecondlvl.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mItemInSecondlvl;
            }
        }
        #endregion

        #region Fields
        private WpfControl mItemInSecondlvl;
        #endregion
    }


    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SelectDateWindow : WinWindow
    {

        public SelectDateWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Выбор даты";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFRM_ADD_DEBTORSForm";
            this.WindowTitles.Add("Выбор даты");
            #endregion
        }

        #region Properties
        public ComboBoxDateWindow ComboBoxDateWindow
        {
            get
            {
                if ((this.mComboBoxDateWindow == null))
                {
                    this.mComboBoxDateWindow = new ComboBoxDateWindow(this);
                }
                return this.mComboBoxDateWindow;
            }
        }

        public OKWindow2 OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow2(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion

        #region Fields
        private ComboBoxDateWindow mComboBoxDateWindow;

        private OKWindow2 mOKWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ComboBoxDateWindow : WinWindow
    {

        public ComboBoxDateWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4DimensionCombo";
            this.WindowTitles.Add("Выбор даты");
            #endregion
        }

        #region Properties
        public WinClient ComoBoxClient
        {
            get
            {
                if ((this.mComoBoxClient == null))
                {
                    this.mComoBoxClient = new WinClient(this);
                    #region Условия поиска
                    this.mComoBoxClient.SearchProperties[WinControl.PropertyNames.ClassName] = "P4DimensionCombo";
                    this.mComoBoxClient.WindowTitles.Add("Выбор даты");
                    #endregion
                }
                return this.mComoBoxClient;
            }
        }
        #endregion

        #region Fields
        private WinClient mComoBoxClient;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class BorrowerListWindow : WinWindow
    {

        public BorrowerListWindow()
        {
            #region Условия поиска
            this.SearchProperties.Add(WinWindow.PropertyNames.Name, "Список заемщиков для добавления", PropertyExpressionOperator.Contains);
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFRM_TREE_NEW_DEBTORSForm";
            this.WindowTitles.Add("Список заемщиков для добавления на 01.12.2015");
            #endregion
        }

        #region Properties
        public ComboBoxWindow ComboBoxWindow
        {
            get
            {
                if ((this.mComboBoxWindow == null))
                {
                    this.mComboBoxWindow = new ComboBoxWindow(this);
                }
                return this.mComboBoxWindow;
            }
        }

        public OKWindow5 OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow5(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion

        #region Fields
        private ComboBoxWindow mComboBoxWindow;

        private OKWindow5 mOKWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ComboBoxWindow : WinWindow
    {

        public ComboBoxWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4DimensionCombo";
            this.WindowTitles.Add("Список заемщиков для добавления на 01.12.2015");
            #endregion
        }

        #region Properties
        public WinClient ComboBox
        {
            get
            {
                if ((this.mComboBox == null))
                {
                    this.mComboBox = new WinClient(this);
                    #region Условия поиска
                    this.mComboBox.SearchProperties[WinControl.PropertyNames.ClassName] = "P4DimensionCombo";
                    this.mComboBox.WindowTitles.Add("Список заемщиков для добавления на 01.12.2015");
                    #endregion
                }
                return this.mComboBox;
            }
        }
        #endregion

        #region Fields
        private WinClient mComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OKWindow5 : WinWindow // Ок - все русскими
    {

        public OKWindow5(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ок";
            this.WindowTitles.Add("Список заемщиков для добавления на 01.12.2015");
            #endregion
        }

        #region Properties
        public WinButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WinButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WinButton.PropertyNames.Name] = "Ок";
                    this.mOKButton.WindowTitles.Add("Список заемщиков для добавления на 01.12.2015");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mOKButton;
        #endregion
    }

    public class AddCustomBorrowerWindow : WinWindow
    {

        public AddCustomBorrowerWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Мастер ввода данных о контрагенте";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public NameEditWindow NameEditWindow
        {
            get
            {
                if ((this.mNameEditWindow == null))
                {
                    this.mNameEditWindow = new NameEditWindow(this);
                }
                return this.mNameEditWindow;
            }
        }

        public TypeContragenWindow TypeContragenWindow
        {
            get
            {
                if ((this.mTypeContragenWindow == null))
                {
                    this.mTypeContragenWindow = new TypeContragenWindow(this);
                }
                return this.mTypeContragenWindow;
            }
        }

        public TypeConnectWindow TypeConnectWindow
        {
            get
            {
                if ((this.mTypeConnectWindow == null))
                {
                    this.mTypeConnectWindow = new TypeConnectWindow(this);
                }
                return this.mTypeConnectWindow;
            }
        }

        public NextWindow NextWindow
        {
            get
            {
                if ((this.mNextWindow == null))
                {
                    this.mNextWindow = new NextWindow(this);
                }
                return this.mNextWindow;
            }
        }

        public ReadyWindow ReadyWindow
        {
            get
            {
                if ((this.mReadyWindow == null))
                {
                    this.mReadyWindow = new ReadyWindow(this);
                }
                return this.mReadyWindow;
            }
        }

        public CalcFromAbsWindow CalcFromAbsWindow
        {
            get
            {
                if ((this.mCalcFromAbsWindow == null))
                {
                    this.mCalcFromAbsWindow = new CalcFromAbsWindow(this);
                }
                return this.mCalcFromAbsWindow;
            }
        }

        public CreateReportWindow CreateReportWindow
        {
            get
            {
                if ((this.mCreateReportWindow == null))
                {
                    this.mCreateReportWindow = new CreateReportWindow(this);
                }
                return this.mCreateReportWindow;
            }
        }
        #endregion

        #region Fields
        private NameEditWindow mNameEditWindow;

        private TypeContragenWindow mTypeContragenWindow;

        private TypeConnectWindow mTypeConnectWindow;

        private NextWindow mNextWindow;

        private CalcFromAbsWindow mCalcFromAbsWindow;

        private CreateReportWindow mCreateReportWindow;

        private ReadyWindow mReadyWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NameEditWindow : WinWindow
    {

        public NameEditWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4Edit";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinEdit NameEdit
        {
            get
            {
                if ((this.mNameEdit == null))
                {
                    this.mNameEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mNameEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mNameEdit;
            }
        }
        #endregion

        #region Fields
        private WinEdit mNameEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TypeContragenWindow : WinWindow
    {

        public TypeContragenWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Юридическое лицо";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinClient TypeContragentComboBox
        {
            get
            {
                if ((this.mTypeContragentComboBox == null))
                {
                    this.mTypeContragentComboBox = new WinClient(this);
                    #region Условия поиска
                    this.SearchProperties[WinWindow.PropertyNames.Name] = "Юридическое лицо";
                    this.mTypeContragentComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mTypeContragentComboBox;
            }
        }
        #endregion

        #region Fields
        private WinClient mTypeContragentComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TypeConnectWindow : WinWindow
    {

        public TypeConnectWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinClient TypeConnectComboBox
        {
            get
            {
                if ((this.mTypeConnectComboBox == null))
                {
                    this.mTypeConnectComboBox = new WinClient(this);
                    #region Условия поиска
                    this.SearchProperties[WinWindow.PropertyNames.Name] = "";
                    this.mTypeConnectComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mTypeConnectComboBox;
            }
        }
        #endregion

        #region Fields
        private WinClient mTypeConnectComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NextWindow : WinWindow
    {

        public NextWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Далее >";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinButton NextButton
        {
            get
            {
                if ((this.mNextButton == null))
                {
                    this.mNextButton = new WinButton(this);
                    #region Условия поиска
                    this.mNextButton.SearchProperties[WinButton.PropertyNames.Name] = "Далее >";
                    this.mNextButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mNextButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mNextButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ReadyWindow : WinWindow
    {

        public ReadyWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Готово";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinButton ReadyButton
        {
            get
            {
                if ((this.mReadyButton == null))
                {
                    this.mReadyButton = new WinButton(this);
                    #region Условия поиска
                    this.mReadyButton.SearchProperties[WinButton.PropertyNames.Name] = "Готово";
                    this.mReadyButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mReadyButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mReadyButton;
        #endregion
    }

    public class AddAdressWindow : WinWindow
    {

        public AddAdressWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Ввод адреса";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFRM_INPUT_ADDRESSForm";
            this.WindowTitles.Add("Ввод адреса");
            #endregion
        }

        #region Properties
        public OKWindow2 OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow2(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion

        #region Fields
        private OKWindow2 mOKWindow;
        #endregion
    }



    public class SelectAccBorrower : WinWindow
    {

        public SelectAccBorrower()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4Form";
            this.WindowTitles.Add("Form");
            #endregion
        }

        #region Properties
        public OKWindow OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow(this);
                }
                return this.mOKWindow;
            }
        }

        public ShowAccountsWindow ShowAccountsWindow
        {
            get
            {
                if ((this.mShowAccountsWindow == null))
                {
                    this.mShowAccountsWindow = new ShowAccountsWindow(this);
                }
                return this.mShowAccountsWindow;
            }
        }
        #endregion

        #region Fields
        private OKWindow mOKWindow;

        private ShowAccountsWindow mShowAccountsWindow;
        #endregion
    }


    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ShowAccountsWindow : WinWindow
    {

        public ShowAccountsWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Показать счета";
            this.WindowTitles.Add("Form");
            #endregion
        }

        #region Properties
        public WinButton ShowAccountButton
        {
            get
            {
                if ((this.mShowAccountButton == null))
                {
                    this.mShowAccountButton = new WinButton(this);
                    #region Условия поиска
                    this.mShowAccountButton.SearchProperties[WinButton.PropertyNames.Name] = "Показать счета";
                    this.mShowAccountButton.WindowTitles.Add("Form");
                    #endregion
                }
                return this.mShowAccountButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mShowAccountButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SelectDateAbsWindow : WinWindow
    {

        public SelectDateAbsWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Выбор даты";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFRM_SELECT_DATEForm";
            this.WindowTitles.Add("Выбор даты");
            #endregion
        }

        #region Properties
        public OnThatDayWindow OnThatDayWindow
        {
            get
            {
                if ((this.mOnThatDayWindow == null))
                {
                    this.mOnThatDayWindow = new OnThatDayWindow(this);
                }
                return this.mOnThatDayWindow;
            }
        }

        public OKWindow2 OKWindow
        {
            get
            {
                if ((this.mOKWindow2 == null))
                {
                    this.mOKWindow2 = new OKWindow2(this);
                }
                return this.mOKWindow2;
            }
        }
        #endregion

        #region Fields
        private OnThatDayWindow mOnThatDayWindow;

        private OKWindow2 mOKWindow2;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OnThatDayWindow : WinWindow
    {

        public OnThatDayWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "На выбранную дату:";
            this.WindowTitles.Add("Выбор даты");
            #endregion
        }

        #region Properties
        public WinRadioButton OnThatDayRadioButton
        {
            get
            {
                if ((this.mOnThatDayRadioButton == null))
                {
                    this.mOnThatDayRadioButton = new WinRadioButton(this);
                    #region Условия поиска
                    this.mOnThatDayRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "На выбранную дату:";
                    this.mOnThatDayRadioButton.WindowTitles.Add("Выбор даты");
                    #endregion
                }
                return this.mOnThatDayRadioButton;
            }
        }
        #endregion

        #region Fields
        private WinRadioButton mOnThatDayRadioButton;
        #endregion
    }
    public class CalcFromAbsWindow : WinWindow
    {

        public CalcFromAbsWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Рассчитать по АБС";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinButton CalcFromAbsButon
        {
            get
            {
                if ((this.mCalcFromAbsButon == null))
                {
                    this.mCalcFromAbsButon = new WinButton(this);
                    #region Условия поиска
                    this.mCalcFromAbsButon.SearchProperties[WinButton.PropertyNames.Name] = "Рассчитать по АБС";
                    this.mCalcFromAbsButon.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mCalcFromAbsButon;
            }
        }
        #endregion

        #region Fields
        private WinButton mCalcFromAbsButon;
        #endregion
    }

    public class CreateReportWindow : WinWindow
    {

        public CreateReportWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Сформировать материалы по заемщику";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinButton CreateReportButton
        {
            get
            {
                if ((this.mCreateReportButton == null))
                {
                    this.mCreateReportButton = new WinButton(this);
                    #region Условия поиска
                    this.mCreateReportButton.SearchProperties[WinButton.PropertyNames.Name] = "Сформировать материалы по заемщику";
                    this.mCreateReportButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mCreateReportButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mCreateReportButton;
        #endregion
    }

    public class RefreshSheetBorrower : WpfWindow
    {

        public RefreshSheetBorrower()
        {
            #region Условия поиска
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Обновление листов материалов по заемщику...";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Обновление листов материалов по заемщику...");
            #endregion
        }
    }

    public class ReportBorrower : WinWindow
    {

        public ReportBorrower()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "\"Материалы по заемщику 118_New (РИО)\" - Редактирование";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "AfxFrameOrView100u";
            this.WindowTitles.Add("\"Материалы по заемщику 118_New (РИО)\" - Редактирование");
            #endregion
        }
    }

    public class AttentionWindow : WinWindow
    {

        public AttentionWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Внимание!";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Внимание!");
            #endregion
        }

        #region Properties
        public Att_YesWindow Att_YesWindow
        {
            get
            {
                if ((this.mAtt_YesWindow == null))
                {
                    this.mAtt_YesWindow = new Att_YesWindow(this);
                }
                return this.mAtt_YesWindow;
            }
        }

        public Att_NoWindow Att_NoWindow
        {
            get
            {
                if ((this.mAtt_NoWindow == null))
                {
                    this.mAtt_NoWindow = new Att_NoWindow(this);
                }
                return this.mAtt_NoWindow;
            }
        }
        #endregion

        #region Fields
        private Att_YesWindow mAtt_YesWindow;

        private Att_NoWindow mAtt_NoWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class Att_YesWindow : WinWindow
    {

        public Att_YesWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Да";
            this.WindowTitles.Add("Внимание!");
            #endregion
        }

        #region Properties
        public WinButton YesButton
        {
            get
            {
                if ((this.mYesButton == null))
                {
                    this.mYesButton = new WinButton(this);
                    #region Условия поиска
                    this.mYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Да";
                    this.mYesButton.WindowTitles.Add("Внимание!");
                    #endregion
                }
                return this.mYesButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mYesButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class Att_NoWindow : WinWindow
    {

        public Att_NoWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Нет";
            this.WindowTitles.Add("Внимание!");
            #endregion
        }

        #region Properties
        public WinButton NoButton
        {
            get
            {
                if ((this.mNoButton == null))
                {
                    this.mNoButton = new WinButton(this);
                    #region Условия поиска
                    this.mNoButton.SearchProperties[WinButton.PropertyNames.Name] = "Нет";
                    this.mNoButton.WindowTitles.Add("Внимание!");
                    #endregion
                }
                return this.mNoButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mNoButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NameIndRepWindow : WpfWindow
    {

        public NameIndRepWindow()
        {
            #region Условия поиска
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Наименование индивидуального отчёта";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Наименование индивидуального отчёта");
            #endregion
        }

        #region Properties
        public WpfEdit NameIndRepEdit
        {
            get
            {
                if ((this.mNameIndRepEdit == null))
                {
                    this.mNameIndRepEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mNameIndRepEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ValueTextBox";
                    this.mNameIndRepEdit.WindowTitles.Add("Наименование индивидуального отчёта");
                    #endregion
                }
                return this.mNameIndRepEdit;
            }
        }

        public WpfButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WpfButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "okButton";
                    this.mOKButton.WindowTitles.Add("Наименование индивидуального отчёта");
                    #endregion
                }
                return this.mOKButton;
            }
        }

        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Отмена";
                    this.mCancelButton.WindowTitles.Add("Наименование индивидуального отчёта");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mNameIndRepEdit;

        private WpfButton mOKButton;

        private WpfButton mCancelButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OpenEditor : WpfWindow
    {

        public OpenEditor()
        {
            #region Условия поиска
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Открытие редактора документов...";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Открытие редактора документов...");
            #endregion
        }
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class CreatingWindow : WpfWindow
    {

        public CreatingWindow()
        {
            #region Условия поиска            
            //Формирование индивидуального отчета Индивидуальный отчет (РИО)_24122018_174332 завершено!
            // this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Формирование индивидуального отчета Индивидуальный отчет (РИО)_24122018_174332 завершено!", PropertyExpressionOperator.Contains));
            // this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Формир", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Формирование индивидуального отчета Индивидуальный отчет (РИО) завершено!");
            #endregion
        }

        #region Properties
        public WpfProgressBar ProgressBar
        {
            get
            {
                if ((this.mProgressBar == null))
                {
                    this.mProgressBar = new WpfProgressBar(this);
                    #region Условия поиска
                    this.mProgressBar.WindowTitles.Add("Формируется документ Индивидуальный отчет (РИО)");
                    #endregion
                }
                return this.mProgressBar;
            }
        }

        public WpfButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WpfButton(this);
                    #region Условия поиска
                    //   this.mOKButton.SearchProperties[WpfButton.PropertyNames.Name] = "OK";
                    //this.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.ClassName, "Button", PropertyExpressionOperator.Contains));
                    this.mOKButton.WindowTitles.Add("Формирование индивидуального отчета Индивидуальный отчет (РИО) завершено!");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion

        #region Fields
        private WpfProgressBar mProgressBar;

        private WpfButton mOKButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class DocumentWindow : WpfWindow
    {

        public DocumentWindow()
        {
            #region Условия поиска            
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Конструктор фрагмента документа:", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Конструктор фрагмента документа: Вводная часть");
            #endregion
        }

        #region Properties
        public WpfButton SaveButton
        {
            get
            {
                if ((this.mSaveButton == null))
                {
                    this.mSaveButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSaveButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SaveButton";
                    this.mSaveButton.WindowTitles.Add("Конструктор фрагмента документа: Вводная часть");
                    #endregion
                }
                return this.mSaveButton;
            }
        }

        public ItemWordCustom ItemWordCustom
        {
            get
            {
                if ((this.mItemWordCustom == null))
                {
                    this.mItemWordCustom = new ItemWordCustom(this);
                }
                return this.mItemWordCustom;
            }
        }
        #endregion

        #region Fields
        private WpfButton mSaveButton;

        private ItemWordCustom mItemWordCustom;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EndedCheckWindow : WpfWindow
    {

        public EndedCheckWindow()
        {
            #region Условия поиска
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Проверка уже завершена";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Проверка уже завершена");
            #endregion
        }

        #region Properties
        public Panel Panel
        {
            get
            {
                if ((this.mPanel == null))
                {
                    this.mPanel = new Panel(this);
                }
                return this.mPanel;
            }
        }

        public WpfButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WpfButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "okButton";
                    this.mOKButton.WindowTitles.Add("Проверка уже завершена");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion

        #region Fields
        private Panel mPanel;

        private WpfButton mOKButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class Panel : WpfPane
    {

        public Panel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.WindowTitles.Add("Проверка уже завершена");
            #endregion
        }

        #region Properties
        public WpfRadioButton CreateAktRadioButton
        {
            get
            {
                if ((this.mCreateAktRadioButton == null))
                {
                    this.mCreateAktRadioButton = new WpfRadioButton(this);
                    #region Условия поиска
                    this.mCreateAktRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Да, создать акт проверки";
                    this.mCreateAktRadioButton.WindowTitles.Add("Проверка уже завершена");
                    #endregion
                }
                return this.mCreateAktRadioButton;
            }
        }
        #endregion

        #region Fields
        private WpfRadioButton mCreateAktRadioButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NameAktWindow : WinWindow
    {

        public NameAktWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Наименование акта проверки";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Наименование акта проверки");
            #endregion
        }

        #region Properties
        public WpfEdit NameAktEdit
        {
            get
            {
                if ((this.mNameAktEdit == null))
                {
                    this.mNameAktEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mNameAktEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ValueTextBox";
                    this.mNameAktEdit.WindowTitles.Add("Наименование акта проверки");
                    #endregion
                }
                return this.mNameAktEdit;
            }
        }

        public WpfButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WpfButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "okButton";
                    this.mOKButton.WindowTitles.Add("Наименование акта проверки");
                    #endregion
                }
                return this.mOKButton;
            }
        }

        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Отмена";
                    this.mCancelButton.WindowTitles.Add("Наименование акта проверки");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mNameAktEdit;

        private WpfButton mOKButton;

        private WpfButton mCancelButton;
        #endregion
    }

    public class WarningWindow : WinWindow
    {

        public WarningWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Предупреждение";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Предупреждение");
            #endregion
        }

        #region Properties
        public WarnYes_Window WarnYes_Window
        {
            get
            {
                if ((this.mWarnYes_Window == null))
                {
                    this.mWarnYes_Window = new WarnYes_Window(this);
                }
                return this.mWarnYes_Window;
            }
        }

        public WarnNo_Window WarnNo_Window
        {
            get
            {
                if ((this.mWarnNo_Window == null))
                {
                    this.mWarnNo_Window = new WarnNo_Window(this);
                }
                return this.mWarnNo_Window;
            }
        }
        #endregion

        #region Fields
        private WarnYes_Window mWarnYes_Window;

        private WarnNo_Window mWarnNo_Window;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class WarnYes_Window : WinWindow
    {

        public WarnYes_Window(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Да";
            this.WindowTitles.Add("Предупреждение");
            #endregion
        }

        #region Properties
        public WinButton YesButton
        {
            get
            {
                if ((this.mYesButton == null))
                {
                    this.mYesButton = new WinButton(this);
                    #region Условия поиска
                    this.mYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Да";
                    this.mYesButton.WindowTitles.Add("Предупреждение");
                    #endregion
                }
                return this.mYesButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mYesButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class WarnNo_Window : WinWindow
    {

        public WarnNo_Window(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Нет";
            this.WindowTitles.Add("Предупреждение");
            #endregion
        }

        #region Properties
        public WinButton NoButton
        {
            get
            {
                if ((this.mNoButton == null))
                {
                    this.mNoButton = new WinButton(this);
                    #region Условия поиска
                    this.mNoButton.SearchProperties[WinButton.PropertyNames.Name] = "Нет";
                    this.mNoButton.WindowTitles.Add("Предупреждение");
                    #endregion
                }
                return this.mNoButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mNoButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ItemWordCustom : WpfCustom
    {

        public ItemWordCustom(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WordControl";
            this.WindowTitles.Add("Конструктор фрагмента документа: Вводная часть");
            #endregion
        }

        #region Properties
        public WindowsFormsHost WindowsFormsHost
        {
            get
            {
                if ((this.mWindowsFormsHost == null))
                {
                    this.mWindowsFormsHost = new WindowsFormsHost(this);
                }
                return this.mWindowsFormsHost;
            }
        }
        #endregion

        #region Fields
        private WindowsFormsHost mWindowsFormsHost;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class WindowsFormsHost : WpfPane
    {

        public WindowsFormsHost(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.WindowsFormsHost";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "WindowsFormsHost";
            this.WindowTitles.Add("Конструктор фрагмента документа: Вводная часть");
            #endregion
        }

        #region Properties
        public TempWordFile TempWordFile
        {
            get
            {
                if ((this.mTempWordFile == null))
                {
                    this.mTempWordFile = new TempWordFile(this);
                }
                return this.mTempWordFile;
            }
        }
        #endregion

        #region Fields
        private TempWordFile mTempWordFile;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TempWordFile : WinClient
    {

        public TempWordFile(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties.Add(new PropertyExpression(WinControl.PropertyNames.Name, "tmp", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Конструктор фрагмента документа: Вводная часть");
            #endregion
        }

        #region Properties
        public WinClient DocumentMSWord
        {
            get
            {
                if ((this.mDocumentMSWord == null))
                {
                    this.mDocumentMSWord = new WinClient(this);
                    #region Условия поиска
                    this.mDocumentMSWord.SearchProperties[WinControl.PropertyNames.ClassName] = "_WwG";
                    this.mDocumentMSWord.WindowTitles.Add("Конструктор фрагмента документа: Вводная часть");
                    #endregion
                }
                return this.mDocumentMSWord;
            }
        }
        #endregion

        #region Fields
        private WinClient mDocumentMSWord;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class CreatedWindow : WpfWindow
    {

        public CreatedWindow()
        {
            #region Условия поиска
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "Формирование", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Формирование акта Акт проверки (РИО)_24122018_184658 завершено!");
            #endregion
        }

        #region Properties
        public WpfButton OKCreatedButton
        {
            get
            {
                if ((this.mOKCreatedButton == null))
                {
                    this.mOKCreatedButton = new WpfButton(this);
                    #region Условия поиска
                    //this.mOKCreatedButton.SearchProperties[WpfButton.PropertyNames.Name] = "OK";
                    this.mOKCreatedButton.WindowTitles.Add("Формирование акта Акт проверки (РИО)_24122018_184658 завершено!");
                    #endregion
                }
                return this.mOKCreatedButton;
            }
        }
        #endregion

        #region Fields
        private WpfButton mOKCreatedButton;
        #endregion
    }

    public class InfoInspectWindow : WinWindow
    {

        public InfoInspectWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Информация о проверке";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public WindowInInfoInspectWindow WindowInInfoInspectWindow
        {
            get
            {
                if ((this.mWindowInInfoInspectWindow == null))
                {
                    this.mWindowInInfoInspectWindow = new WindowInInfoInspectWindow(this);
                }
                return this.mWindowInInfoInspectWindow;
            }
        }
        #endregion

        #region Fields
        private WindowInInfoInspectWindow mWindowInInfoInspectWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class WindowInInfoInspectWindow : WinWindow
    {

        public WindowInInfoInspectWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ControlAxSourcingSite";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public ClientInInfoInspectWindow ClientInInfoInspectWindow
        {
            get
            {
                if ((this.mClientInInfoInspectWindow == null))
                {
                    this.mClientInInfoInspectWindow = new ClientInInfoInspectWindow(this);
                }
                return this.mClientInInfoInspectWindow;
            }
        }
        #endregion

        #region Fields
        private ClientInInfoInspectWindow mClientInInfoInspectWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ClientInInfoInspectWindow : WinClient
    {

        public ClientInInfoInspectWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public PanelInInfoInsepctWindow PanelInInfoInsepctWindow
        {
            get
            {
                if ((this.mPanelInInfoInsepctWindow == null))
                {
                    this.mPanelInInfoInsepctWindow = new PanelInInfoInsepctWindow(this);
                }
                return this.mPanelInInfoInsepctWindow;
            }
        }
        #endregion

        #region Fields
        private PanelInInfoInsepctWindow mPanelInInfoInsepctWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class PanelInInfoInsepctWindow : WpfPane
    {

        public PanelInInfoInsepctWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public CustomInInfoInspectWindow CustomInInfoInspectWindow
        {
            get
            {
                if ((this.mCustomInInfoInspectWindow == null))
                {
                    this.mCustomInInfoInspectWindow = new CustomInInfoInspectWindow(this);
                }
                return this.mCustomInInfoInspectWindow;
            }
        }

        public ItemTabList ItemTabList
        {
            get
            {
                if ((this.mItemTabList == null))
                {
                    this.mItemTabList = new ItemTabList(this);
                }
                return this.mItemTabList;
            }
        }
        #endregion

        #region Fields
        private CustomInInfoInspectWindow mCustomInInfoInspectWindow;

        private ItemTabList mItemTabList;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class CustomInInfoInspectWindow : WpfCustom
    {

        public CustomInInfoInspectWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.InspectionInfoView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "InspectionInfoView";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public WpfButton SaveInspecButton
        {
            get
            {
                if ((this.mSaveInspecButton == null))
                {
                    this.mSaveInspecButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSaveInspecButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SaveInspection_InspectionInfoView_bt";
                    this.mSaveInspecButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mSaveInspecButton;
            }
        }

        public WpfComboBox InspectStateComboBox
        {
            get
            {
                if ((this.mInspectStateComboBox == null))
                {
                    this.mInspectStateComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mInspectStateComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InspectionState_InspectionInfoView_cm";
                    this.mInspectStateComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspectStateComboBox;
            }
        }

        public WpfText KOHyperLink
        {
            get
            {
                if ((this.mKOHyperLink == null))
                {
                    this.mKOHyperLink = new WpfText(this);
                    #region Условия поиска
                    this.mKOHyperLink.SearchProperties[WpfText.PropertyNames.Name] = "Не выбран";
                    this.mKOHyperLink.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mKOHyperLink;
            }
        }

        public WpfText TUHyperLink
        {
            get
            {
                if ((this.mTUHyperLink == null))
                {
                    this.mTUHyperLink = new WpfText(this);
                    #region Условия поиска
                    this.mTUHyperLink.SearchProperties[WpfText.PropertyNames.Name] = "ГУ Банка России по Краснодарскому краю (03)";
                    this.mTUHyperLink.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mTUHyperLink;
            }
        }

        public ItemsTabList ItemsTabList
        {
            get
            {
                if ((this.mItemsTabList == null))
                {
                    this.mItemsTabList = new ItemsTabList(this);
                }
                return this.mItemsTabList;
            }
        }

        public WpfButton ApplyOKFilterKOButton
        {
            get
            {
                if ((this.mApplyOKFilterKOButton == null))
                {
                    this.mApplyOKFilterKOButton = new WpfButton(this);
                    #region Условия поиска
                    this.mApplyOKFilterKOButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ApplyKOFilter_InspectionInfoView_bt";
                    this.mApplyOKFilterKOButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mApplyOKFilterKOButton;
            }
        }

        public WpfEdit KOFilterEdit
        {
            get
            {
                if ((this.mKOFilterEdit == null))
                {
                    this.mKOFilterEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mKOFilterEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Filter_InspectionInfoView_tb";
                    this.mKOFilterEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mKOFilterEdit;
            }
        }

        public SelectKOTreeList SelectKOTreeList
        {
            get
            {
                if ((this.mSelectKOTreeList == null))
                {
                    this.mSelectKOTreeList = new SelectKOTreeList(this);
                }
                return this.mSelectKOTreeList;
            }
        }

        public WpfButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WpfButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SelectKOOK_InspectionInfoView_bt";
                    this.mOKButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mOKButton;
            }
        }

        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SelectKoCancel_InspectionInfoView_bt";
                    this.mCancelButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mCancelButton;
            }
        }

        public EmployeeList1 EmployeeList
        {
            get
            {
                if ((this.mEmployeeList == null))
                {
                    this.mEmployeeList = new EmployeeList1(this);
                }
                return this.mEmployeeList;
            }
        }
        #endregion

        #region Fields
        private WpfButton mSaveInspecButton;

        private WpfComboBox mInspectStateComboBox;

        private WpfText mKOHyperLink;

        private WpfText mTUHyperLink;

        private ItemsTabList mItemsTabList;

        private WpfButton mApplyOKFilterKOButton;

        private WpfEdit mKOFilterEdit;

        private SelectKOTreeList mSelectKOTreeList;

        private WpfButton mOKButton;

        private WpfButton mCancelButton;

        private EmployeeList1 mEmployeeList;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ItemsTabList : WpfTabList
    {

        public ItemsTabList(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTabList.PropertyNames.ClassName] = "Uia.TabControl";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public ControlTabItem ControlTabItem
        {
            get
            {
                if ((this.mControlTabItem == null))
                {
                    this.mControlTabItem = new ControlTabItem(this);
                }
                return this.mControlTabItem;
            }
        }
     

        public TaskTabItem TaskTabItem
        {
            get
            {
                if ((this.mTaskTabItem == null))
                {
                    this.mTaskTabItem = new TaskTabItem(this);
                }
                return this.mTaskTabItem;
            }
        }

        public DateDocDatePicker DateDocDatePicker
        {
            get
            {
                if ((this.mDateDocDatePicker == null))
                {
                    this.mDateDocDatePicker = new DateDocDatePicker(this);
                }
                return this.mDateDocDatePicker;
            }
        }

        public EmployeeTable EmployeeTable
        {
            get
            {
                if ((this.mEmployeeTable == null))
                {
                    this.mEmployeeTable = new EmployeeTable(this);
                }
                return this.mEmployeeTable;
            }
        }

        public ObjectiveTabItem ObjectiveTabItem
        {
            get
            {
                if ((this.mObjectiveTabItem == null))
                {
                    this.mObjectiveTabItem = new ObjectiveTabItem(this);
                }
                return this.mObjectiveTabItem;
            }
        }

        public DateObjectiveDatePicker DateObjectiveDatePicker
        {
            get
            {
                if ((this.mDateObjectiveDatePicker == null))
                {
                    this.mDateObjectiveDatePicker = new DateObjectiveDatePicker(this);
                }
                return this.mDateObjectiveDatePicker;
            }
        }

        public BlockInspecTabItem BlockInspecTabItem
        {
            get
            {
                if ((this.mBlockInspecTabItem == null))
                {
                    this.mBlockInspecTabItem = new BlockInspecTabItem(this);
                }
                return this.mBlockInspecTabItem;
            }
        }

        public FileABCITabItem FileABCITabItem
        {
            get
            {
                if ((this.mFileABCITabItem == null))
                {
                    this.mFileABCITabItem = new FileABCITabItem(this);
                }
                return this.mFileABCITabItem;
            }
        }
        #endregion

        #region Fields
        private ControlTabItem mControlTabItem;

        private TaskTabItem mTaskTabItem;

        private DateDocDatePicker mDateDocDatePicker;

        private EmployeeTable mEmployeeTable;

        private ObjectiveTabItem mObjectiveTabItem;

        private DateObjectiveDatePicker mDateObjectiveDatePicker;

        private BlockInspecTabItem mBlockInspecTabItem;

        private FileABCITabItem mFileABCITabItem;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ControlTabItem : WpfTabPage
    {

        public ControlTabItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "System.Windows.Controls.TabItem Header: Content:";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfComboBox SelectedDocumentComboBox
        {
            get
            {
                if ((this.mSelectedDocumentComboBox == null))
                {
                    this.mSelectedDocumentComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mSelectedDocumentComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SelectedDocument_InspectionInfoView_cm";
                    this.mSelectedDocumentComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mSelectedDocumentComboBox;
            }
        }

        public WpfButton CreateDocumentButton
        {
            get
            {
                if ((this.mCreateDocumentButton == null))
                {
                    this.mCreateDocumentButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCreateDocumentButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CreateDocument_InspectionInfoView_bt";
                    this.mCreateDocumentButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mCreateDocumentButton;
            }
        }

        public WpfEdit NumberInspectTextEdit
        {
            get
            {
                if ((this.mNumberInspectTextEdit == null))
                {
                    this.mNumberInspectTextEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mNumberInspectTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Number_InspectionInfoView_tb";
                    this.mNumberInspectTextEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mNumberInspectTextEdit;
            }
        }

        public WpfComboBox SignerInsepctionInfo
        {
            get
            {
                if ((this.mSignerInsepctionInfo == null))
                {
                    this.mSignerInsepctionInfo = new WpfComboBox(this);
                    #region Условия поиска
                    this.mSignerInsepctionInfo.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "Signer_InspectionInfoView_cm";
                    this.mSignerInsepctionInfo.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mSignerInsepctionInfo;
            }
        }

        public WpfComboBox PrepareGroupComboBox
        {
            get
            {
                if ((this.mPrepareGroupComboBox == null))
                {
                    this.mPrepareGroupComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mPrepareGroupComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "GroupMaker_InspectionInfoView_cm";
                    this.mPrepareGroupComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mPrepareGroupComboBox;
            }
        }

        public WpfComboBox PrepareTaskComboBox
        {
            get
            {
                if ((this.mPrepareTaskComboBox == null))
                {
                    this.mPrepareTaskComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mPrepareTaskComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "TaskMaker_InspectionInfoView_cm";
                    this.mPrepareTaskComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mPrepareTaskComboBox;
            }
        }

        public WpfRadioButton ComplexInsepctionRadioButton
        {
            get
            {
                if ((this.mComplexInsepctionRadioButton == null))
                {
                    this.mComplexInsepctionRadioButton = new WpfRadioButton(this);
                    #region Условия поиска
                    this.mComplexInsepctionRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "InspectionForm_Complex_InspectionInfoView_rb";
                    this.mComplexInsepctionRadioButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mComplexInsepctionRadioButton;
            }
        }

        public WpfRadioButton ThematicalInspectionRadioButton
        {
            get
            {
                if ((this.mThematicalInspectionRadioButton == null))
                {
                    this.mThematicalInspectionRadioButton = new WpfRadioButton(this);
                    #region Условия поиска
                    this.mThematicalInspectionRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "InspectionForm_Thematical_InspectionInfoView_rb";
                    this.mThematicalInspectionRadioButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mThematicalInspectionRadioButton;
            }
        }

        public WpfRadioButton SpecialInspectionRadioButton
        {
            get
            {
                if ((this.mSpecialInspectionRadioButton == null))
                {
                    this.mSpecialInspectionRadioButton = new WpfRadioButton(this);
                    #region Условия поиска
                    this.mSpecialInspectionRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "InspectionForm_Special_InspectionInfoView_rb";
                    this.mSpecialInspectionRadioButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mSpecialInspectionRadioButton;
            }
        }

        public WpfRadioButton RegionalCoverageRadioButton
        {
            get
            {
                if ((this.mRegionalCoverageRadioButton == null))
                {
                    this.mRegionalCoverageRadioButton = new WpfRadioButton(this);
                    #region Условия поиска
                    this.mRegionalCoverageRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "InspectionCoverage_Regional_InspectionInfoView_rb";
                    this.mRegionalCoverageRadioButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mRegionalCoverageRadioButton;
            }
        }

        public WpfRadioButton InterRegionalCoverageRadioButton
        {
            get
            {
                if ((this.mInterRegionalCoverageRadioButton == null))
                {
                    this.mInterRegionalCoverageRadioButton = new WpfRadioButton(this);
                    #region Условия поиска
                    this.mInterRegionalCoverageRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "InspectionCoverage_InterRegional_InspectionInfoView_rb";
                    this.mInterRegionalCoverageRadioButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInterRegionalCoverageRadioButton;
            }
        }

        public WpfRadioButton ArealInterRegionalCoverageRadioButton
        {
            get
            {
                if ((this.mArealInterRegionalCoverageRadioButton == null))
                {
                    this.mArealInterRegionalCoverageRadioButton = new WpfRadioButton(this);
                    #region Условия поиска
                    this.mArealInterRegionalCoverageRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "InspectionCoverage_ArealInterRegional_InspectionInfoView_rb";
                    this.mArealInterRegionalCoverageRadioButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mArealInterRegionalCoverageRadioButton;
            }
        }

        public WpfRadioButton PlannedReasonRadioButton
        {
            get
            {
                if ((this.mPlannedReasonRadioButton == null))
                {
                    this.mPlannedReasonRadioButton = new WpfRadioButton(this);
                    #region Условия поиска
                    this.mPlannedReasonRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "InspectionReason_Planned_InspectionInfoView_rb";
                    this.mPlannedReasonRadioButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mPlannedReasonRadioButton;
            }
        }

        public WpfRadioButton UnplannedReasonRadioButton
        {
            get
            {
                if ((this.mUnplannedReasonRadioButton == null))
                {
                    this.mUnplannedReasonRadioButton = new WpfRadioButton(this);
                    #region Условия поиска
                    this.mUnplannedReasonRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "InspectionReason_UnPlanned_InspectionInfoView_rb";
                    this.mUnplannedReasonRadioButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mUnplannedReasonRadioButton;
            }
        }

        public WpfComboBox SignOfParticipationComboBox
        {
            get
            {
                if ((this.mSignOfParticipationComboBox == null))
                {
                    this.mSignOfParticipationComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mSignOfParticipationComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SignOfParticipation_InspectionInfoView_cm";
                    this.mSignOfParticipationComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mSignOfParticipationComboBox;
            }
        }

        public WpfCheckBox RepaetInspectCheckBox
        {
            get
            {
                if ((this.mRepaetInspectCheckBox == null))
                {
                    this.mRepaetInspectCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mRepaetInspectCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsRepeat_InspectionInfoView_cb";
                    this.mRepaetInspectCheckBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mRepaetInspectCheckBox;
            }
        }

        public WpfCheckBox IsInMonitoringComboBox
        {
            get
            {
                if ((this.mIsInMonitoringComboBox == null))
                {
                    this.mIsInMonitoringComboBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mIsInMonitoringComboBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsInMonitoring_InspectionInfoView_cb";
                    this.mIsInMonitoringComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mIsInMonitoringComboBox;
            }
        }

        public WpfButton SaveDocumentButton
        {
            get
            {
                if ((this.mSaveDocumentButton == null))
                {
                    this.mSaveDocumentButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSaveDocumentButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SaveDisposal_InspectionInfoView_bt";
                    this.mSaveDocumentButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mSaveDocumentButton;
            }
        }

        public WpfImage AddDocImage
        {
            get
            {
                if ((this.mAddDocImage == null))
                {
                    this.mAddDocImage = new WpfImage(this);
                    #region Условия поиска
                    this.mAddDocImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "AddDocument_InspectionInfoView_im";
                    this.mAddDocImage.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mAddDocImage;
            }
        }

        public WpfComboBox ReasonsInspectionInComboBox
        {
            get
            {
                if ((this.mReasonsInspectionInComboBox == null))
                {
                    this.mReasonsInspectionInComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mReasonsInspectionInComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "Reasons_InspectionInfoView_cm";
                    this.mReasonsInspectionInComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mReasonsInspectionInComboBox;
            }
        }

        public AssignDateInspectInfoDatePicker AssignDateInspectInfoDatePicker
        {
            get
            {
                if ((this.mAssignDateInspectInfoDatePicker == null))
                {
                    this.mAssignDateInspectInfoDatePicker = new AssignDateInspectInfoDatePicker(this);
                }
                return this.mAssignDateInspectInfoDatePicker;
            }
        }

        public StartCheckPeriod StartCheckPeriod
        {
            get
            {
                if ((this.mStartCheckPeriod == null))
                {
                    this.mStartCheckPeriod = new StartCheckPeriod(this);
                }
                return this.mStartCheckPeriod;
            }
        }

        public EndCheckPeriod EndCheckPeriod
        {
            get
            {
                if ((this.mEndCheckPeriod == null))
                {
                    this.mEndCheckPeriod = new EndCheckPeriod(this);
                }
                return this.mEndCheckPeriod;
            }
        }

        public StartWorkPeriod StartWorkPeriod
        {
            get
            {
                if ((this.mStartWorkPeriod == null))
                {
                    this.mStartWorkPeriod = new StartWorkPeriod(this);
                }
                return this.mStartWorkPeriod;
            }
        }

        public EndWorkPeriod EndWorkPeriod
        {
            get
            {
                if ((this.mEndWorkPeriod == null))
                {
                    this.mEndWorkPeriod = new EndWorkPeriod(this);
                }
                return this.mEndWorkPeriod;
            }
        }
        #endregion

        #region Fields
        private AssignDateInspectInfoDatePicker mAssignDateInspectInfoDatePicker;

        private StartCheckPeriod mStartCheckPeriod;

        private EndCheckPeriod mEndCheckPeriod;

        private StartWorkPeriod mStartWorkPeriod;

        private EndWorkPeriod mEndWorkPeriod;

        private WpfComboBox mSelectedDocumentComboBox;

        private WpfButton mCreateDocumentButton;

        private WpfEdit mNumberInspectTextEdit;

        private WpfComboBox mSignerInsepctionInfo;

        private WpfComboBox mPrepareGroupComboBox;

        private WpfComboBox mPrepareTaskComboBox;

        private WpfRadioButton mComplexInsepctionRadioButton;

        private WpfRadioButton mThematicalInspectionRadioButton;

        private WpfRadioButton mSpecialInspectionRadioButton;

        private WpfRadioButton mRegionalCoverageRadioButton;

        private WpfRadioButton mInterRegionalCoverageRadioButton;

        private WpfRadioButton mArealInterRegionalCoverageRadioButton;

        private WpfRadioButton mPlannedReasonRadioButton;

        private WpfRadioButton mUnplannedReasonRadioButton;

        private WpfComboBox mSignOfParticipationComboBox;

        private WpfCheckBox mRepaetInspectCheckBox;

        private WpfCheckBox mIsInMonitoringComboBox;

        private WpfButton mSaveDocumentButton;

        private WpfImage mAddDocImage;

        private WpfComboBox mReasonsInspectionInComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AssignDateInspectInfoDatePicker : WpfCustom
    {

        public AssignDateInspectInfoDatePicker(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfCustom.PropertyNames.ClassName] = "Uia.DatePickerEx";
            this.SearchProperties[WpfCustom.PropertyNames.AutomationId] = "AssighDate_InspectionInfoView_dp";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfButton ShowCalendar
        {
            get
            {
                if ((this.mShowCalendar == null))
                {
                    this.mShowCalendar = new WpfButton(this);
                    #region Условия поиска
                    this.mShowCalendar.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_Button";
                    this.mShowCalendar.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mShowCalendar;
            }
        }

        public WpfEdit DateText
        {
            get
            {
                if ((this.mDateText == null))
                {
                    this.mDateText = new WpfEdit(this);
                    #region Условия поиска
                    this.mDateText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mDateText.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mDateText;
            }
        }
        #endregion

        #region Fields
        private WpfButton mShowCalendar;

        private WpfEdit mDateText;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class StartCheckPeriod : WpfCustom
    {

        public StartCheckPeriod(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DatePickerEx";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WatchPeriodStart_InspectionInfoView_dp";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfEdit DateText
        {
            get
            {
                if ((this.mDateText == null))
                {
                    this.mDateText = new WpfEdit(this);
                    #region Условия поиска
                    this.mDateText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mDateText.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mDateText;
            }
        }

        public WpfButton ShowCalendar
        {
            get
            {
                if ((this.mShowCalendar == null))
                {
                    this.mShowCalendar = new WpfButton(this);
                    #region Условия поиска
                    this.mShowCalendar.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_Button";
                    this.mShowCalendar.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mShowCalendar;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mDateText;

        private WpfButton mShowCalendar;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EndCheckPeriod : WpfCustom
    {

        public EndCheckPeriod(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DatePickerEx";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WatchPeriodEnd_InspectionInfoView_dp";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfEdit DateText
        {
            get
            {
                if ((this.mDateText == null))
                {
                    this.mDateText = new WpfEdit(this);
                    #region Условия поиска
                    this.mDateText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mDateText.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mDateText;
            }
        }

        public WpfButton ShowCalendar
        {
            get
            {
                if ((this.mShowCalendar == null))
                {
                    this.mShowCalendar = new WpfButton(this);
                    #region Условия поиска
                    this.mShowCalendar.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_Button";
                    this.mShowCalendar.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mShowCalendar;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mDateText;

        private WpfButton mShowCalendar;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class StartWorkPeriod : WpfCustom
    {

        public StartWorkPeriod(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DatePickerEx";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WorkPeriodStart_InspectionInfoView_dp";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfEdit DateText
        {
            get
            {
                if ((this.mDateText == null))
                {
                    this.mDateText = new WpfEdit(this);
                    #region Условия поиска
                    this.mDateText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mDateText.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mDateText;
            }
        }

        public WpfButton ShowCalendar
        {
            get
            {
                if ((this.mShowCalendar == null))
                {
                    this.mShowCalendar = new WpfButton(this);
                    #region Условия поиска
                    this.mShowCalendar.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_Button";
                    this.mShowCalendar.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mShowCalendar;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mDateText;

        private WpfButton mShowCalendar;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EndWorkPeriod : WpfCustom
    {

        public EndWorkPeriod(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DatePickerEx";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WorkPeriodEnd_InspectionInfoView_dp";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfEdit DateText
        {
            get
            {
                if ((this.mDateText == null))
                {
                    this.mDateText = new WpfEdit(this);
                    #region Условия поиска
                    this.mDateText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mDateText.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mDateText;
            }
        }

        public WpfButton ShowCalendar
        {
            get
            {
                if ((this.mShowCalendar == null))
                {
                    this.mShowCalendar = new WpfButton(this);
                    #region Условия поиска
                    this.mShowCalendar.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_Button";
                    this.mShowCalendar.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mShowCalendar;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mDateText;

        private WpfButton mShowCalendar;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TaskTabItem : WpfTabPage
    {

        public TaskTabItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "System.Windows.Controls.TabItem Header: Content:";
            this.SearchProperties[WpfTabPage.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfComboBox SelectedDocumentComboBox
        {
            get
            {
                if ((this.mSelectedDocumentComboBox == null))
                {
                    this.mSelectedDocumentComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mSelectedDocumentComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SelectedDocument_InspectionInfoView_cm";
                    this.mSelectedDocumentComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mSelectedDocumentComboBox;
            }
        }

        public WpfEdit NumberEdit
        {
            get
            {
                if ((this.mNumberEdit == null))
                {
                    this.mNumberEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mNumberEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Number_InspectionInfoView_tb";
                    this.mNumberEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mNumberEdit;
            }
        }

        public WpfComboBox UserComboBox
        {
            get
            {
                if ((this.mUserComboBox == null))
                {
                    this.mUserComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mUserComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SignOfParticipation_InspectionInfoView_cm";
                    this.mUserComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mUserComboBox;
            }
        }

        public WpfButton SaveDocument
        {
            get
            {
                if ((this.mSaveDocument == null))
                {
                    this.mSaveDocument = new WpfButton(this);
                    #region Условия поиска
                    this.mSaveDocument.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AssignmentSave_InspectionInfoView_bt";
                    this.mSaveDocument.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mSaveDocument;
            }
        }

        public WpfButton ChangeGropButton
        {
            get
            {
                if ((this.mChangeGropButton == null))
                {
                    this.mChangeGropButton = new WpfButton(this);
                    #region Условия поиска
                    this.mChangeGropButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SelectEmployees_InspectionInfoView_bt";
                    this.mChangeGropButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mChangeGropButton;
            }
        }

        public WpfImage AddDocImage
        {
            get
            {
                if ((this.mAddDocImage == null))
                {
                    this.mAddDocImage = new WpfImage(this);
                    #region Условия поиска
                    this.mAddDocImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "AddDocument_InspectionInfoView_im";
                    this.mAddDocImage.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mAddDocImage;
            }
        }
        #endregion

        #region Fields
        private WpfComboBox mSelectedDocumentComboBox;

        private WpfEdit mNumberEdit;

        private WpfComboBox mUserComboBox;

        private WpfButton mSaveDocument;

        private WpfButton mChangeGropButton;

        private WpfImage mAddDocImage;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class DateDocDatePicker : WpfCustom
    {

        public DateDocDatePicker(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DatePickerEx";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "AssignmentSave_InspectionInfoView_dp";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfEdit DateText
        {
            get
            {
                if ((this.mDateText == null))
                {
                    this.mDateText = new WpfEdit(this);
                    #region Условия поиска
                    this.mDateText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mDateText.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mDateText;
            }
        }

        public WpfButton ShowCalendar
        {
            get
            {
                if ((this.mShowCalendar == null))
                {
                    this.mShowCalendar = new WpfButton(this);
                    #region Условия поиска
                    this.mShowCalendar.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_Button";
                    this.mShowCalendar.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mShowCalendar;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mDateText;

        private WpfButton mShowCalendar;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EmployeeTable : WpfTable
    {

        public EmployeeTable(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public RIOTableItem RIOTableItem
        {
            get
            {
                if ((this.mRIOTableItem == null))
                {
                    this.mRIOTableItem = new RIOTableItem(this);
                }
                return this.mRIOTableItem;
            }
        }

        public RIO_2TableItem RIO_2TableItem
        {
            get
            {
                if ((this.mRIO_2TableItem == null))
                {
                    this.mRIO_2TableItem = new RIO_2TableItem(this);
                }
                return this.mRIO_2TableItem;
            }
        }
        #endregion

        #region Fields
        private RIOTableItem mRIOTableItem;

        private RIO_2TableItem mRIO_2TableItem;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RIOTableItem : WpfControl
    {

        public RIOTableItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "DataItem";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "InspectionInfoView_РИО_lv";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public RoleItemCell RoleItemCell
        {
            get
            {
                if ((this.mRoleItemCell == null))
                {
                    this.mRoleItemCell = new RoleItemCell(this);
                }
                return this.mRoleItemCell;
            }
        }
        #endregion

        #region Fields
        private RoleItemCell mRoleItemCell;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RoleItemCell : WpfCell
    {

        public RoleItemCell(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Роль";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfComboBox RIORoleComboBox
        {
            get
            {
                if ((this.mRIORoleComboBox == null))
                {
                    this.mRIORoleComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mRIORoleComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InspectionInfoView_РИО_cm";
                    this.mRIORoleComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mRIORoleComboBox;
            }
        }
        #endregion

        #region Fields
        private WpfComboBox mRIORoleComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RIO_2TableItem : WpfControl
    {

        public RIO_2TableItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "DataItem";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "InspectionInfoView_РИО_2_lv";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public RoleItemCell1 RoleItemCell
        {
            get
            {
                if ((this.mRoleItemCell == null))
                {
                    this.mRoleItemCell = new RoleItemCell1(this);
                }
                return this.mRoleItemCell;
            }
        }
        #endregion

        #region Fields
        private RoleItemCell1 mRoleItemCell;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RoleItemCell1 : WpfCell
    {

        public RoleItemCell1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Роль";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfComboBox RIO_2RoleComboBox
        {
            get
            {
                if ((this.mRIO_2RoleComboBox == null))
                {
                    this.mRIO_2RoleComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mRIO_2RoleComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InspectionInfoView_РИО_2_cm";
                    this.mRIO_2RoleComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mRIO_2RoleComboBox;
            }
        }
        #endregion

        #region Fields
        private WpfComboBox mRIO_2RoleComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ObjectiveTabItem : WpfTabPage
    {

        public ObjectiveTabItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "System.Windows.Controls.TabItem Header: Content:";
            this.SearchProperties[WpfTabPage.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public WpfComboBox SelectedDocumentComboBox
        {
            get
            {
                if ((this.mSelectedDocumentComboBox == null))
                {
                    this.mSelectedDocumentComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mSelectedDocumentComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SelectedDocument_InspectionInfoView_cm";
                    this.mSelectedDocumentComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mSelectedDocumentComboBox;
            }
        }

        public WpfComboBox UserComboBox
        {
            get
            {
                if ((this.mUserComboBox == null))
                {
                    this.mUserComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mUserComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "Signer_InspectionInfoView_cm";
                    this.mUserComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mUserComboBox;
            }
        }

        public WpfButton ChangeQuestListButton
        {
            get
            {
                if ((this.mChangeQuestListButton == null))
                {
                    this.mChangeQuestListButton = new WpfButton(this);
                    #region Условия поиска
                    this.mChangeQuestListButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ChangeQuestions_InspectionInfoView_bt";
                    this.mChangeQuestListButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mChangeQuestListButton;
            }
        }

        public WpfButton CreateDocumentComboBox
        {
            get
            {
                if ((this.mCreateDocumentComboBox == null))
                {
                    this.mCreateDocumentComboBox = new WpfButton(this);
                    #region Условия поиска
                    this.mCreateDocumentComboBox.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CreateDocument_InspectionInfoView_bt";
                    this.mCreateDocumentComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mCreateDocumentComboBox;
            }
        }

        public WpfImage AddDocImage
        {
            get
            {
                if ((this.mAddDocImage == null))
                {
                    this.mAddDocImage = new WpfImage(this);
                    #region Условия поиска
                    this.mAddDocImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "AddDocument_InspectionInfoView_im";
                    this.mAddDocImage.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mAddDocImage;
            }
        }
        #endregion

        #region Fields
        private WpfComboBox mSelectedDocumentComboBox;

        private WpfComboBox mUserComboBox;

        private WpfButton mChangeQuestListButton;

        private WpfButton mCreateDocumentComboBox;

        private WpfImage mAddDocImage;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class DateObjectiveDatePicker : WpfCustom
    {

        public DateObjectiveDatePicker(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DatePickerEx";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "JobDate_InspectionInfoView_dp";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfEdit DateText
        {
            get
            {
                if ((this.mDateText == null))
                {
                    this.mDateText = new WpfEdit(this);
                    #region Условия поиска
                    this.mDateText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mDateText.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mDateText;
            }
        }

        public WpfButton ShowCalendar
        {
            get
            {
                if ((this.mShowCalendar == null))
                {
                    this.mShowCalendar = new WpfButton(this);
                    #region Условия поиска
                    this.mShowCalendar.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_Button";
                    this.mShowCalendar.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mShowCalendar;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mDateText;

        private WpfButton mShowCalendar;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class BlockInspecTabItem : WpfTabPage
    {

        public BlockInspecTabItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "System.Windows.Controls.TabItem Header: Content:";
            this.SearchProperties[WpfTabPage.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public WpfButton CreateDocumentButton
        {
            get
            {
                if ((this.mCreateDocumentButton == null))
                {
                    this.mCreateDocumentButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCreateDocumentButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CreateDocument_InspectionInfoView_bt";
                    this.mCreateDocumentButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mCreateDocumentButton;
            }
        }

        public WpfComboBox SelectedDocumentComboBox
        {
            get
            {
                if ((this.mSelectedDocumentComboBox == null))
                {
                    this.mSelectedDocumentComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mSelectedDocumentComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SelectedDocument_InspectionInfoView_cm";
                    this.mSelectedDocumentComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mSelectedDocumentComboBox;
            }
        }

        public DateAktDatePicker DateAktDatePicker
        {
            get
            {
                if ((this.mDateAktDatePicker == null))
                {
                    this.mDateAktDatePicker = new DateAktDatePicker(this);
                }
                return this.mDateAktDatePicker;
            }
        }

        public SignerList SignerList
        {
            get
            {
                if ((this.mSignerList == null))
                {
                    this.mSignerList = new SignerList(this);
                }
                return this.mSignerList;
            }
        }

        public WpfEdit NumberActEdit
        {
            get
            {
                if ((this.mNumberActEdit == null))
                {
                    this.mNumberActEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mNumberActEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ActNumber_InspectionInfoView_tb";
                    this.mNumberActEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mNumberActEdit;
            }
        }

        public WpfEdit ActTextEdit
        {
            get
            {
                if ((this.mActTextEdit == null))
                {
                    this.mActTextEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mActTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ActText_InspectionInfoView_tb";
                    this.mActTextEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mActTextEdit;
            }
        }

        public WpfButton SaveDocumentButton
        {
            get
            {
                if ((this.mSaveDocumentButton == null))
                {
                    this.mSaveDocumentButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSaveDocumentButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SaveCounterAction_InspectionInfoView_bt";
                    this.mSaveDocumentButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mSaveDocumentButton;
            }
        }

        public WpfImage AddDocImage
        {
            get
            {
                if ((this.mAddDocImage == null))
                {
                    this.mAddDocImage = new WpfImage(this);
                    #region Условия поиска
                    this.mAddDocImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "AddDocument_InspectionInfoView_im";
                    this.mAddDocImage.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mAddDocImage;
            }
        }
        #endregion

        #region Fields
        private WpfButton mCreateDocumentButton;

        private WpfComboBox mSelectedDocumentComboBox;

        private DateAktDatePicker mDateAktDatePicker;

        private SignerList mSignerList;

        private WpfEdit mNumberActEdit;

        private WpfEdit mActTextEdit;

        private WpfButton mSaveDocumentButton;

        private WpfImage mAddDocImage;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class DateAktDatePicker : WpfCustom
    {

        public DateAktDatePicker(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DatePickerEx";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ActDate_InspectionInfoView_dp";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public WpfEdit DateText
        {
            get
            {
                if ((this.mDateText == null))
                {
                    this.mDateText = new WpfEdit(this);
                    #region Условия поиска
                    this.mDateText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mDateText.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mDateText;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mDateText;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SignerList : WpfText
    {

        public SignerList(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfText.PropertyNames.Name] = "Подписывают:";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public List List
        {
            get
            {
                if ((this.mList == null))
                {
                    this.mList = new List(this);
                }
                return this.mList;
            }
        }
        #endregion

        #region Fields
        private List mList;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class List : WpfList
    {

        public List(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public RIOListItem RIOListItem
        {
            get
            {
                if ((this.mRIOListItem == null))
                {
                    this.mRIOListItem = new RIOListItem(this);
                }
                return this.mRIOListItem;
            }
        }

        public RIO_2ListItem RIO_2ListItem
        {
            get
            {
                if ((this.mRIO_2ListItem == null))
                {
                    this.mRIO_2ListItem = new RIO_2ListItem(this);
                }
                return this.mRIO_2ListItem;
            }
        }
        #endregion

        #region Fields
        private RIOListItem mRIOListItem;

        private RIO_2ListItem mRIO_2ListItem;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RIOListItem : WpfListItem
    {

        public RIOListItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "InspectionInfoView_РИО_lv";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public WpfCheckBox SignerRIOComboBox
        {
            get
            {
                if ((this.mSignerRIOComboBox == null))
                {
                    this.mSignerRIOComboBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mSignerRIOComboBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "SignerChecked_InspectionInfoView_cb";
                    this.mSignerRIOComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mSignerRIOComboBox;
            }
        }
        #endregion

        #region Fields
        private WpfCheckBox mSignerRIOComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RIO_2ListItem : WpfListItem
    {

        public RIO_2ListItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "InspectionInfoView_РИО_2_lv";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public WpfCheckBox SignerRIO_2ComboBox
        {
            get
            {
                if ((this.mSignerRIO_2ComboBox == null))
                {
                    this.mSignerRIO_2ComboBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mSignerRIO_2ComboBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "SignerChecked_InspectionInfoView_cb";
                    this.mSignerRIO_2ComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mSignerRIO_2ComboBox;
            }
        }
        #endregion

        #region Fields
        private WpfCheckBox mSignerRIO_2ComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class FileABCITabItem : WpfTabPage
    {

        public FileABCITabItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "System.Windows.Controls.TabItem Header: Content:";
            this.SearchProperties[WpfTabPage.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public WpfButton CreateDocumentButton
        {
            get
            {
                if ((this.mCreateDocumentButton == null))
                {
                    this.mCreateDocumentButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCreateDocumentButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CreateDocument_InspectionInfoView_bt";
                    this.mCreateDocumentButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mCreateDocumentButton;
            }
        }

        public WpfComboBox SelectedDocumentComboBox
        {
            get
            {
                if ((this.mSelectedDocumentComboBox == null))
                {
                    this.mSelectedDocumentComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mSelectedDocumentComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SelectedDocument_InspectionInfoView_cm";
                    this.mSelectedDocumentComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mSelectedDocumentComboBox;
            }
        }


        public FileCustomView FileCustomView
        {
            get
            {
                if ((this.mFileCustomView == null))
                {
                    this.mFileCustomView = new FileCustomView(this);
                }
                return this.mFileCustomView;
            }
        }


        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Условия поиска
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UpdateFileABCI_InspectionInfoView_bt";
                    this.mRefreshButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }

        public WpfButton SaveDocumentButton
        {
            get
            {
                if ((this.mSaveDocumentButton == null))
                {
                    this.mSaveDocumentButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSaveDocumentButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SafeFile_InspectionInfoView_bt";
                    this.mSaveDocumentButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mSaveDocumentButton;
            }
        }

        public WpfImage AddDocImage
        {
            get
            {
                if ((this.mAddDocImage == null))
                {
                    this.mAddDocImage = new WpfImage(this);
                    #region Условия поиска
                    this.mAddDocImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "AddDocument_InspectionInfoView_im";
                    this.mAddDocImage.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mAddDocImage;
            }
        }
        #endregion

        #region Fields
        private WpfButton mCreateDocumentButton;

        private WpfComboBox mSelectedDocumentComboBox;

        private FileCustomView mFileCustomView;

        private WpfButton mRefreshButton;

        private WpfButton mSaveDocumentButton;

        private WpfImage mAddDocImage;
        #endregion
    }

    public class FileCustomView : WpfCustom
    {

        public FileCustomView(UITestControl searchLimitContainer) :
        base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FileAView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "FileAView";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }


        #region Properties
        public WpfEdit RegnumEdit
        {
            get
            {
                if ((this.mRegnumEdit == null))
                {
                    this.mRegnumEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mRegnumEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Regnum_FileAView_tb";
                    this.mRegnumEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mRegnumEdit;
            }
        }

        public WpfEdit TUValueEdit
        {
            get
            {
                if ((this.mTUValueEdit == null))
                {
                    this.mTUValueEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mTUValueEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TUValue_FileAView_tb";
                    this.mTUValueEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mTUValueEdit;
            }
        }


        public WpfEdit InspectionPauseEdit
        {
            get
            {
                if ((this.mInspectionPauseEdit == null))
                {
                    this.mInspectionPauseEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mInspectionPauseEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "InspectionPauseBase_FileAView_tb";
                    this.mInspectionPauseEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspectionPauseEdit;
            }
        }

        public RegDatePicker RegDatePicker
        {
            get
            {
                if ((this.mRegDatePicker == null))
                {
                    this.mRegDatePicker = new RegDatePicker(this);
                }
                return this.mRegDatePicker;
            }
        }

        public WpfComboBox TransportComboBox
        {
            get
            {
                if ((this.mTransportComboBox == null))
                {
                    this.mTransportComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mTransportComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "transport_FileAView_tb";
                    this.mTransportComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mTransportComboBox;
            }
        }

        public WpfEdit VersionEdit
        {
            get
            {
                if ((this.mVersionEdit == null))
                {
                    this.mVersionEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mVersionEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "version_FileAView_tb";
                    this.mVersionEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mVersionEdit;
            }
        }



        public WpfEdit NameFileEdit
        {
            get
            {
                if ((this.mNameFileEdit == null))
                {
                    this.mNameFileEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mNameFileEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "name_FileAView_tb";
                    this.mNameFileEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mNameFileEdit;
            }
        }

        public WpfEdit NameFile2Edit
        {
            get
            {
                if ((this.mNameFile2Edit == null))
                {
                    this.mNameFile2Edit = new WpfEdit(this);
                    #region Условия поиска
                    this.mNameFile2Edit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "name1_FileAView_tb";
                    this.mNameFile2Edit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mNameFile2Edit;
            }
        }

        public WpfEdit InspEdit
        {
            get
            {
                if ((this.mInspEdit == null))
                {
                    this.mInspEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mInspEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "insp_FileAView_tb";
                    this.mInspEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspEdit;
            }
        }

        public WpfEdit KONameEdit
        {
            get
            {
                if ((this.mKONameEdit == null))
                {
                    this.mKONameEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mKONameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "KOName_FileAView_tb";
                    this.mKONameEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mKONameEdit;
            }
        }

        /// <summary>
        /// /////////////////////////////////////////////////////////////////////////////////////////////////////
        /// </summary>

        public WpfEdit KOFilNameEdit
        {
            get
            {
                if ((this.mKOFilNameEdit == null))
                {
                    this.mKOFilNameEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mKOFilNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "KOFilName_FileAView_tb";
                    this.mKOFilNameEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mKOFilNameEdit;
            }
        }


        public WpfEdit DeptNumEdit
        {
            get
            {
                if ((this.mDeptNumEdit == null))
                {
                    this.mDeptNumEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mDeptNumEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "DeptNum_FileAView_tb";
                    this.mDeptNumEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mDeptNumEdit;
            }
        }

        public WpfEdit PredstavEdit
        {
            get
            {
                if ((this.mPredstavEdit == null))
                {
                    this.mPredstavEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mPredstavEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Predstav_FileAView_tb";
                    this.mPredstavEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mPredstavEdit;
            }
        }

        public WpfComboBox InspObjTypeComboBox
        {
            get
            {
                if ((this.mInspObjTypeComboBox == null))
                {
                    this.mInspObjTypeComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mInspObjTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InspObjType_FileAView_cm";
                    this.mInspObjTypeComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspObjTypeComboBox;
            }
        }

        public WpfComboBox InspObjVidComboBox
        {
            get
            {
                if ((this.mInspObjVidComboBox == null))
                {
                    this.mInspObjVidComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mInspObjVidComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InspObjVid_FileAView_cm";
                    this.mInspObjVidComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspObjVidComboBox;
            }
        }

        public WpfComboBox InspObjSignComboBox
        {
            get
            {
                if ((this.mInspObjSignComboBox == null))
                {
                    this.mInspObjSignComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mInspObjSignComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InspObjSign_FileAView_cm";
                    this.mInspObjSignComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspObjSignComboBox;
            }
        }

        public WpfEdit RegnumOrdEdit
        {
            get
            {
                if ((this.mRegnumOrdEdit == null))
                {
                    this.mRegnumOrdEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mRegnumOrdEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RegnumOrd_FileAView_tb";
                    this.mRegnumOrdEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mRegnumOrdEdit;
            }
        }


        public WpfEdit InspObjAddressEdit
        {
            get
            {
                if ((this.mInspObjAddressEdit == null))
                {
                    this.mInspObjAddressEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mInspObjAddressEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "InspObjAddress_FileAView_tb";
                    this.mInspObjAddressEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspObjAddressEdit;
            }
        }

        public WpfEdit KOAddressEdit
        {
            get
            {
                if ((this.mKOAddressEdit == null))
                {
                    this.mKOAddressEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mKOAddressEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "KOAddress_FileAView_tb";
                    this.mKOAddressEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mKOAddressEdit;
            }
        }

        public WpfComboBox InspectionVidComboBox
        {
            get
            {
                if ((this.mInspectionVidComboBox == null))
                {
                    this.mInspectionVidComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mInspectionVidComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InspectionVid_FileAView_cm";
                    this.mInspectionVidComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspectionVidComboBox;
            }
        }

        public WpfComboBox InspectionTypeComboBox
        {
            get
            {
                if ((this.mInspectionTypeComboBox == null))
                {
                    this.mInspectionTypeComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mInspectionTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InspectionType_FileAView_cm";
                    this.mInspectionTypeComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspectionTypeComboBox;
            }
        }

        public WpfEdit InspectionBaseEdit
        {
            get
            {
                if ((this.mInspectionBaseEdit == null))
                {
                    this.mInspectionBaseEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mInspectionBaseEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "InspectionBase_FileAView_tb";
                    this.mInspectionBaseEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspectionBaseEdit;
            }
        }

        public WpfEdit AssignmentEdit
        {
            get
            {
                if ((this.mAssignmentEdit == null))
                {
                    this.mAssignmentEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mAssignmentEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Assignment_FileAView_tb";
                    this.mAssignmentEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mAssignmentEdit;
            }
        }

        public WpfEdit DisposalEdit
        {
            get
            {
                if ((this.mDisposalEdit == null))
                {
                    this.mDisposalEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mDisposalEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Disposal_FileAView_tb";
                    this.mDisposalEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mDisposalEdit;
            }
        }

        public WpfEdit JobEdit
        {
            get
            {
                if ((this.mJobEdit == null))
                {
                    this.mJobEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mJobEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Job_FileAView_tb";
                    this.mJobEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mJobEdit;
            }
        }

        public WpfEdit AssignmentDopEdit
        {
            get
            {
                if ((this.mAssignmentDopEdit == null))
                {
                    this.mAssignmentDopEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mAssignmentDopEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "AssignmentDop_FileAView_tb";
                    this.mAssignmentDopEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mAssignmentDopEdit;
            }
        }
        public WpfEdit InspectionStartEdit
        {
            get
            {
                if ((this.mInspectionStartEdit == null))
                {
                    this.mInspectionStartEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mInspectionStartEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "InspectionStart_FileAView_tb";
                    this.mInspectionStartEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mAssignmentDopEdit;
            }
        }

        public WpfEdit InspectionEndEdit
        {
            get
            {
                if ((this.mInspectionEndEdit == null))
                {
                    this.mInspectionEndEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mInspectionEndEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "InspectionEnd_FileAView_tb";
                    this.mInspectionEndEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspectionEndEdit;
            }
        }

        public WpfEdit InspectionDaysEdit
        {
            get
            {
                if ((this.mInspectionDaysEdit == null))
                {
                    this.mInspectionDaysEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mInspectionDaysEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "InspectionDays_FileAView_tb";
                    this.mInspectionDaysEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspectionDaysEdit;
            }
        }

        public WpfEdit InspectionEndChangedEdit
        {
            get
            {
                if ((this.mInspectionEndChangedEdit == null))
                {
                    this.mInspectionEndChangedEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mInspectionEndChangedEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "InspectionEndChanged_FileAView_tb";
                    this.mInspectionEndChangedEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspectionEndChangedEdit;
            }
        }

        public WpfEdit InspectionChangedDaysEdit
        {
            get
            {
                if ((this.mInspectionChangedDaysEdit == null))
                {
                    this.mInspectionChangedDaysEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mInspectionChangedDaysEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "InspectionChangedDays_FileAView_tb";
                    this.mInspectionChangedDaysEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspectionChangedDaysEdit;
            }
        }

        public WpfEdit InspectionPauseBaseEdit
        {
            get
            {
                if ((this.mInspectionPauseBaseEdit == null))
                {
                    this.mInspectionPauseBaseEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mInspectionPauseBaseEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "InspectionPauseBase_FileAView_tb";
                    this.mInspectionPauseBaseEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspectionPauseBaseEdit;
            }
        }

        public WpfEdit InspectionStartDelayBaseEdit
        {
            get
            {
                if ((this.mInspectionStartDelayBaseEdit == null))
                {
                    this.mInspectionStartDelayBaseEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mInspectionStartDelayBaseEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "InspectionStartDelayBase_FileAView_tb";
                    this.mInspectionStartDelayBaseEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspectionStartDelayBaseEdit;
            }
        }

        public WpfEdit InspectionPeriodEdit
        {
            get
            {
                if ((this.mInspectionPeriodEdit == null))
                {
                    this.mInspectionPeriodEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mInspectionPeriodEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "InspectionPeriod_FileAView_tb";
                    this.mInspectionPeriodEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspectionPeriodEdit;
            }
        }

        public WpfEdit InspectionPeriodDopEdit
        {
            get
            {
                if ((this.mInspectionPeriodDopEdit == null))
                {
                    this.mInspectionPeriodDopEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mInspectionPeriodDopEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "InspectionPeriodDop_FileAView_tb";
                    this.mInspectionPeriodDopEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mInspectionPeriodDopEdit;
            }
        }

        public WpfEdit QuestionsCountEdit
        {
            get
            {
                if ((this.mQuestionsCountEdit == null))
                {
                    this.mQuestionsCountEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mQuestionsCountEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QuestionsCount_FileAView_tb";
                    this.mQuestionsCountEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mQuestionsCountEdit;
            }
        }


        public WpfEdit QuestionsCountDopEdit
        {
            get
            {
                if ((this.mQuestionsCountDopEdit == null))
                {
                    this.mQuestionsCountDopEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mQuestionsCountDopEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QuestionsCountDop_FileAView_tb";
                    this.mQuestionsCountDopEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mQuestionsCountDopEdit;
            }
        }

        public WpfEdit LeadEdit
        {
            get
            {
                if ((this.mLeadEdit == null))
                {
                    this.mLeadEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mLeadEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Lead_FileAView_tb";
                    this.mLeadEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mLeadEdit;
            }
        }

        public WpfEdit OkatoEdit
        {
            get
            {
                if ((this.mOkatoEdit == null))
                {
                    this.mOkatoEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mOkatoEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "okato_FileAView_tb";
                    this.mOkatoEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mOkatoEdit;
            }
        }

        public WpfEdit ViceLeadEdit
        {
            get
            {
                if ((this.mViceLeadEdit == null))
                {
                    this.mViceLeadEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mViceLeadEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ViceLead_FileAView_tb";
                    this.mViceLeadEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mViceLeadEdit;
            }
        }

        public WpfEdit ViceLeadOkatoEdit
        {
            get
            {
                if ((this.mViceLeadOkatoEdit == null))
                {
                    this.mViceLeadOkatoEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mViceLeadOkatoEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ViceLeadOkato_FileAView_tb";
                    this.mViceLeadOkatoEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mViceLeadOkatoEdit;
            }
        }
        /*
        public WpfEdit ViceLeadOkatoEdit
        {
            get
            {
                if ((this.mViceLeadOkatoEdit == null))
                {
                    this.mViceLeadOkatoEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mViceLeadOkatoEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ViceLeadOkato_FileAView_tb";
                    this.mViceLeadOkatoEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mViceLeadOkatoEdit;
            }
        }
        */
        public WpfEdit GroupCountEdit
        {
            get
            {
                if ((this.mGroupCountEdit == null))
                {
                    this.mGroupCountEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mGroupCountEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "GroupCount_FileAView_tb";
                    this.mGroupCountEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mGroupCountEdit;
            }
        }

        public WpfEdit UchastEdit
        {
            get
            {
                if ((this.mUchastEdit == null))
                {
                    this.mUchastEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mUchastEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Uchast_FileAView_tb";
                    this.mUchastEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mUchastEdit;
            }
        }

        public WpfEdit SignerPostEdit
        {
            get
            {
                if ((this.mSignerPostEdit == null))
                {
                    this.mSignerPostEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mSignerPostEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "signerpost_FileAView_tb";
                    this.mSignerPostEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mSignerPostEdit;
            }
        }

        public WpfEdit SignerEdit
        {
            get
            {
                if ((this.mSignerEdit == null))
                {
                    this.mSignerEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mSignerEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "signer_FileAView_tb";
                    this.mSignerEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mSignerEdit;
            }
        }

        public WpfEdit FooterEdit
        {
            get
            {
                if ((this.mFooterEdit == null))
                {
                    this.mFooterEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mFooterEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Footer_FileAView_tb";
                    this.mFooterEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mFooterEdit;
            }
        }



        public WpfEdit WorkerEmployeeEdit
        {
            get
            {
                if ((this.mWorkerEmployeeEdit == null))
                {
                    this.mWorkerEmployeeEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mWorkerEmployeeEdit.SearchProperties.Add(WpfEdit.PropertyNames.AutomationId, "Employee_РИО_2", PropertyExpressionOperator.Contains);
                    this.mWorkerEmployeeEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mWorkerEmployeeEdit;
            }
        }

        public WpfEdit WorkerEmployeeOkatoEdit
        {
            get
            {
                if ((this.mWorkerEmployeeOkatoEdit == null))
                {
                    this.mWorkerEmployeeOkatoEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mWorkerEmployeeOkatoEdit.SearchProperties.Add(WpfEdit.PropertyNames.AutomationId, "Employee_T", PropertyExpressionOperator.Contains);
                    this.mWorkerEmployeeOkatoEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mWorkerEmployeeOkatoEdit;
            }
        }

        //Footer_FileAView_tb
        #endregion




        #region Fields
        private WpfEdit mWorkerEmployeeEdit;

        private WpfEdit mWorkerEmployeeOkatoEdit;

        private WpfEdit mRegnumEdit;

        private WpfEdit mTUValueEdit;

        private WpfEdit mInspectionPauseEdit;

        private RegDatePicker mRegDatePicker;

        private WpfComboBox mTransportComboBox;

        private WpfEdit mVersionEdit;

        private WpfEdit mNameFileEdit;

        private WpfEdit mNameFile2Edit;

        private WpfEdit mInspEdit;

        private WpfEdit mKONameEdit;

        private WpfEdit mKOFilNameEdit;

        private WpfEdit mDeptNumEdit;

        private WpfEdit mPredstavEdit;

        private WpfComboBox mInspObjTypeComboBox;

        private WpfEdit mInspObjAddressEdit;

        private WpfEdit mRegnumOrdEdit;

        private WpfEdit mFooterEdit;

        private WpfEdit mSignerEdit;

        private WpfEdit mSignerPostEdit;

        private WpfEdit mUchastEdit;

        private WpfEdit mGroupCountEdit;

        private WpfEdit mViceLeadOkatoEdit;

        private WpfEdit mViceLeadEdit;

        private WpfEdit mInspectionStartDelayBaseEdit;

        private WpfEdit mOkatoEdit;

        private WpfEdit mQuestionsCountDopEdit;

        private WpfEdit mQuestionsCountEdit;

        private WpfEdit mInspectionPeriodDopEdit;

        private WpfEdit mInspectionPeriodEdit;

        private WpfEdit mLeadEdit;

        private WpfEdit mInspectionPauseBaseEdit;

        private WpfEdit mInspectionChangedDaysEdit;

        private WpfEdit mKOAddressEdit;

        private WpfEdit mInspectionEndChangedEdit;

        private WpfEdit mInspectionDaysEdit;

        private WpfEdit mInspectionEndEdit;

        private WpfEdit mInspectionStartEdit;

        private WpfEdit mAssignmentDopEdit;

        private WpfEdit mJobEdit;

        private WpfEdit mDisposalEdit;

        private WpfEdit mAssignmentEdit;

        private WpfEdit mInspectionBaseEdit;

        private WpfComboBox mInspectionTypeComboBox;

        private WpfComboBox mInspectionVidComboBox;

        private WpfComboBox mInspObjSignComboBox;

        private WpfComboBox mInspObjVidComboBox;
        #endregion
    }


    public class RegDatePicker : WpfCustom
    {

        public RegDatePicker(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DatePickerEx";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "regdate_FileAView_tb";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfButton ShowCalendar
        {
            get
            {
                if ((this.mShowCalendar == null))
                {
                    this.mShowCalendar = new WpfButton(this);
                    #region Условия поиска
                    this.mShowCalendar.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_Button";
                    this.mShowCalendar.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mShowCalendar;
            }
        }

        public WpfEdit DateText
        {
            get
            {
                if ((this.mDateText == null))
                {
                    this.mDateText = new WpfEdit(this);
                    #region Условия поиска
                    this.mDateText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mDateText.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mDateText;
            }
        }
        #endregion

        #region Fields
        private WpfButton mShowCalendar;

        private WpfEdit mDateText;
        #endregion
    }

    public class TransportComboBox : WpfCustom
    {
        public TransportComboBox(UITestControl searchLimitContainer) :
        base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "transport_FileAView_tb";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        public WpfEdit TransportTextBox
        {
            get
            {
                if ((this.mTransportTextBox == null))
                {
                    this.mTransportTextBox = new WpfEdit(this);
                    #region Условия поиска
                    this.mTransportTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_Editable_FileAView_tb";
                    this.mTransportTextBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mTransportTextBox;
            }
        }

        #region Fields

        private WpfEdit mTransportTextBox;
        #endregion

    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SelectKOTreeList : WpfList
    {

        public SelectKOTreeList(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "SelectKoOrDepartmentTreeView";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public OutCityTreeListItem OutCityTreeListItem
        {
            get
            {
                if ((this.mOutCityTreeListItem == null))
                {
                    this.mOutCityTreeListItem = new OutCityTreeListItem(this);
                }
                return this.mOutCityTreeListItem;
            }
        }

        public KO918ListItem KO918ListItem
        {
            get
            {
                if ((this.mKO918ListItem == null))
                {
                    this.mKO918ListItem = new KO918ListItem(this);
                }
                return this.mKO918ListItem;
            }
        }
        #endregion

        #region Fields
        private OutCityTreeListItem mOutCityTreeListItem;

        private KO918ListItem mKO918ListItem;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OutCityTreeListItem : WpfListItem
    {

        public OutCityTreeListItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Иногородние КО";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfToggleButton ExpandButton
        {
            get
            {
                if ((this.mExpandButton == null))
                {
                    this.mExpandButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mExpandButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpandButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mExpandButton;
            }
        }
        #endregion

        #region Fields
        private WpfToggleButton mExpandButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class KO918ListItem : WpfListItem
    {

        public KO918ListItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Публичное акционерное общество \"Западно-Сибирский коммерческий банк\" (918)";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfToggleButton ExpandButton
        {
            get
            {
                if ((this.mExpandButton == null))
                {
                    this.mExpandButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mExpandButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpandButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mExpandButton;
            }
        }
        #endregion

        #region Fields
        private WpfToggleButton mExpandButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EmployeeList1 : WpfList
    {

        public EmployeeList1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "SelectEmployeeListView";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public RIOListItem1 RIOListItem
        {
            get
            {
                if ((this.mRIOListItem == null))
                {
                    this.mRIOListItem = new RIOListItem1(this);
                }
                return this.mRIOListItem;
            }
        }

        public RIO_2ListItem1 RIO_2ListItem
        {
            get
            {
                if ((this.mRIO_2ListItem == null))
                {
                    this.mRIO_2ListItem = new RIO_2ListItem1(this);
                }
                return this.mRIO_2ListItem;
            }
        }
        #endregion

        #region Fields
        private RIOListItem1 mRIOListItem;

        private RIO_2ListItem1 mRIO_2ListItem;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RIOListItem1 : WpfListItem
    {

        public RIOListItem1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "InspectionInfoView_РИО_lv";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfCheckBox RIOListItemCheckBox
        {
            get
            {
                if ((this.mRIOListItemCheckBox == null))
                {
                    this.mRIOListItemCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mRIOListItemCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "РИО";
                    this.mRIOListItemCheckBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mRIOListItemCheckBox;
            }
        }
        #endregion

        #region Fields
        private WpfCheckBox mRIOListItemCheckBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RIO_2ListItem1 : WpfListItem
    {

        public RIO_2ListItem1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "InspectionInfoView_РИО_2_lv";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfCheckBox RIO_2ListItemCheckBox
        {
            get
            {
                if ((this.mRIO_2ListItemCheckBox == null))
                {
                    this.mRIO_2ListItemCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mRIO_2ListItemCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "РИО_2";
                    this.mRIO_2ListItemCheckBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mRIO_2ListItemCheckBox;
            }
        }
        #endregion

        #region Fields
        private WpfCheckBox mRIO_2ListItemCheckBox;
        #endregion
    }

    public class ReestrWindow : WinWindow
    {

        public ReestrWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Реестр проверок";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Реестр проверок]");
            #endregion
        }

        #region Properties


        public ControlAxSourcingSitWindow ControlAxSourcingSitWindow
        {
            get
            {
                if ((this.mControlAxSourcingSitWindow == null))
                {
                    this.mControlAxSourcingSitWindow = new ControlAxSourcingSitWindow(this);
                }
                return this.mControlAxSourcingSitWindow;
            }
        }

        #endregion

        #region Fields
        private ControlAxSourcingSitWindow mControlAxSourcingSitWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ControlAxSourcingSitWindow : WinWindow
    {

        public ControlAxSourcingSitWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ControlAxSourcingSite";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Реестр проверок]");
            #endregion
        }

        #region Properties
        public ControlAxSourcingSitClient ControlAxSourcingSitClient
        {
            get
            {
                if ((this.mControlAxSourcingSitClient == null))
                {
                    this.mControlAxSourcingSitClient = new ControlAxSourcingSitClient(this);
                }
                return this.mControlAxSourcingSitClient;
            }
        }
        #endregion

        #region Fields
        private ControlAxSourcingSitClient mControlAxSourcingSitClient;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ControlAxSourcingSitClient : WinClient
    {

        public ControlAxSourcingSitClient(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Реестр проверок]");
            #endregion
        }

        #region Properties
        public ItemPanel ItemPanel
        {
            get
            {
                if ((this.mItemPanel == null))
                {
                    this.mItemPanel = new ItemPanel(this);
                }
                return this.mItemPanel;
            }
        }
        #endregion

        #region Fields
        private ItemPanel mItemPanel;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ItemPanel : WpfPane
    {

        public ItemPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Реестр проверок]");
            #endregion
        }

        #region Properties
        public ItemCustom ItemCustom
        {
            get
            {
                if ((this.mItemCustom == null))
                {
                    this.mItemCustom = new ItemCustom(this);
                }
                return this.mItemCustom;
            }
        }
        #endregion

        #region Fields
        private ItemCustom mItemCustom;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ItemCustom : WpfCustom
    {

        public ItemCustom(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.InspectionsView";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Реестр проверок]");
            #endregion
        }

        #region Properties
        public WpfButton AddInspectButton
        {
            get
            {
                if ((this.mAddInspectButton == null))
                {
                    this.mAddInspectButton = new WpfButton(this);
                    #region Условия поиска
                    this.mAddInspectButton.SearchProperties[WpfButton.PropertyNames.Name] = "Добавить проверку";
                    this.mAddInspectButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Реестр проверок]");
                    #endregion
                }
                return this.mAddInspectButton;
            }
        }

        public WpfButton OpenInspectButton
        {
            get
            {
                if ((this.mOpenInspectButton == null))
                {
                    this.mOpenInspectButton = new WpfButton(this);
                    #region Условия поиска
                    this.mOpenInspectButton.SearchProperties[WpfButton.PropertyNames.Name] = "Открыть проверку";
                    this.mOpenInspectButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Реестр проверок]");
                    #endregion
                }
                return this.mOpenInspectButton;
            }
        }

        public InspectionsListViewTable InspectionsListViewTable
        {
            get
            {
                if ((this.mInspectionsListViewTable == null))
                {
                    this.mInspectionsListViewTable = new InspectionsListViewTable(this);
                }
                return this.mInspectionsListViewTable;
            }
        }
        #endregion

        #region Fields
        private WpfButton mAddInspectButton;

        private WpfButton mOpenInspectButton;

        private InspectionsListViewTable mInspectionsListViewTable;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class InspectionsListViewTable : WpfTable
    {

        public InspectionsListViewTable(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "InspectionsListView";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Реестр проверок]");
            #endregion
        }

        #region Properties
        public DataItem DataItem
        {
            get
            {
                if ((this.mDataItem == null))
                {
                    this.mDataItem = new DataItem(this);
                }
                return this.mDataItem;
            }
        }
        #endregion

        #region Fields
        private DataItem mDataItem;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class DataItem : WpfControl
    {

        public DataItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "DataItem";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Реестр проверок]");
            #endregion
        }

        #region Properties
        public ItemCell ItemCell
        {
            get
            {
                if ((this.mItemCell == null))
                {
                    this.mItemCell = new ItemCell(this);
                }
                return this.mItemCell;
            }
        }
        #endregion

        #region Fields
        private ItemCell mItemCell;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ItemCell : WpfCell
    {

        public ItemCell(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Рег. №";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Реестр проверок]");
            #endregion
        }

        #region Properties
        public WpfText RegNumberText
        {
            get
            {
                if ((this.mRegNumberText == null))
                {
                    this.mRegNumberText = new WpfText(this);
                    #region Условия поиска
                    this.mRegNumberText.SearchProperties[WpfText.PropertyNames.Name] = "918";
                    this.mRegNumberText.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Реестр проверок]");
                    #endregion
                }
                return this.mRegNumberText;
            }
        }
        #endregion

        #region Fields
        private WpfText mRegNumberText;
        #endregion
    }

    public class ItemTabList : WpfTabList
    {

        public ItemTabList(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public AssighDate_InspectionCustom AssighDate_InspectionCustom
        {
            get
            {
                if ((this.mAssighDate_InspectionCustom == null))
                {
                    this.mAssighDate_InspectionCustom = new AssighDate_InspectionCustom(this);
                }
                return this.mAssighDate_InspectionCustom;
            }
        }
        #endregion

        #region Fields
        private AssighDate_InspectionCustom mAssighDate_InspectionCustom;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AssighDate_InspectionCustom : WpfCustom
    {

        public AssighDate_InspectionCustom(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DatePickerEx";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "AssighDate_InspectionInfoView_dp";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Информация о проверке]");
            #endregion
        }

        #region Properties
        public WpfEdit DateText
        {
            get
            {
                if ((this.mDateText == null))
                {
                    this.mDateText = new WpfEdit(this);
                    #region Условия поиска
                    this.mDateText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mDateText.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Информация о проверке]");
                    #endregion
                }
                return this.mDateText;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mDateText;
        #endregion
    }
}

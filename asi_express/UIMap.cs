// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 15.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace asi_express
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Globalization;
    using System.Text.RegularExpressions;
    using System.Windows.Forms;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    


    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public partial class UIMap
    {

        #region Properties
        public StudioConnectWindow StudioConnectWindow
        {
            get
            {
                if ((this.mStudioConnectWindow == null))
                {
                    this.mStudioConnectWindow = new StudioConnectWindow();
                }
                return this.mStudioConnectWindow;
            }
        }

        public ARM_AdminWindow ARM_AdminWindow
        {
            get
            {
                if ((this.mARM_AdminWindow == null))
                {
                    this.mARM_AdminWindow = new ARM_AdminWindow();
                }
                return this.mARM_AdminWindow;
            }
        }

        public OKWindow1 OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow1();
                }
                return this.mOKWindow;
            }
        }

        public EmployeeWindow EmployeeWindow
        {
            get
            {
                if ((this.mEmployeeWindow == null))
                {
                    this.mEmployeeWindow = new EmployeeWindow();
                }
                return this.mEmployeeWindow;
            }
        }

        public ISA_Window ISA_Window
        {
            get
            {
                if ((this.mISA_Window == null))
                {
                    this.mISA_Window = new ISA_Window();
                }
                return this.mISA_Window;
            }
        }

        public UserCreatedWindow UserCreatedWindow
        {
            get
            {
                if ((this.mUserCreatedWindow == null))
                {
                    this.mUserCreatedWindow = new UserCreatedWindow();
                }
                return this.mUserCreatedWindow;
            }
        }

        public InfoWindow InfoWindow
        {
            get
            {
                if ((this.mInfoWindow == null))
                {
                    this.mInfoWindow = new InfoWindow();
                }
                return this.mInfoWindow;
            }
        }

        public AcceptWindow AcceptWindow
        {
            get
            {
                if ((this.mAcceptWindow == null))
                {
                    this.mAcceptWindow = new AcceptWindow();
                }
                return this.mAcceptWindow;
            }
        }

        public ASI_Window ASI_Window
        {
            get
            {
                if ((this.mASI_Window == null))
                {
                    this.mASI_Window = new ASI_Window();
                }
                return this.mASI_Window;
            }
        }

        public LogWindow1 LogWindow
        {
            get
            {
                if ((this.mLogWindow == null))
                {
                    this.mLogWindow = new LogWindow1();
                }
                return this.mLogWindow;
            }
        }

        public SelectCode SelectCode
        {
            get
            {
                if ((this.mSelectCode == null))
                {
                    this.mSelectCode = new SelectCode();
                }
                return this.mSelectCode;
            }
        }

        public FormSprEmp FormSprEmp
        {
            get
            {
                if ((this.mFormSprEmp == null))
                {
                    this.mFormSprEmp = new FormSprEmp();
                }
                return this.mFormSprEmp;
            }
        }

        public SettingTask SettingTask
        {
            get
            {
                if ((this.mSettingTask == null))
                {
                    this.mSettingTask = new SettingTask();
                }
                return this.mSettingTask;
            }
        }

        public ContextMenuMaterial ContextMenuMaterial
        {
            get
            {
                if ((this.mContextMenuMaterial == null))
                {
                    this.mContextMenuMaterial = new ContextMenuMaterial();
                }
                return this.mContextMenuMaterial;
            }
        }

        public OpenFileDialog OpenFileDialog
        {
            get
            {
                if ((this.mOpenFileDialog == null))
                {
                    this.mOpenFileDialog = new OpenFileDialog();
                }
                return this.mOpenFileDialog;
            }
        }

        public SelectDateWindow SelectDateWindow
        {
            get
            {
                if ((this.mSelectDateWindow == null))
                {
                    this.mSelectDateWindow = new SelectDateWindow();
                }
                return this.mSelectDateWindow;
            }
        }

        public BorrowerListWindow BorrowerListWindow
        {
            get
            {
                if ((this.mBorrowerListWindow == null))
                {
                    this.mBorrowerListWindow = new BorrowerListWindow();
                }
                return this.mBorrowerListWindow;
            }
        }

        public AddAdressWindow AddAdressWindow
        {
            get
            {
                if ((this.mAddAdressWindow == null))
                {
                    this.mAddAdressWindow = new AddAdressWindow();
                }
                return this.mAddAdressWindow;
            }
        }

        public SelectAccBorrower SelectAccBorrower
        {
            get
            {
                if ((this.mSelectAccBorrower == null))
                {
                    this.mSelectAccBorrower = new SelectAccBorrower();
                }
                return this.mSelectAccBorrower;
            }
        }

        public SelectDateAbsWindow SelectDateAbsWindow
        {
            get
            {
                if ((this.mSelectDateAbsWindow == null))
                {
                    this.mSelectDateAbsWindow = new SelectDateAbsWindow();
                }
                return this.mSelectDateAbsWindow;
            }
        }

        public RefreshSheetBorrower RefreshSheetBorrower
        {
            get
            {
                if ((this.mRefreshSheetBorrower == null))
                {
                    this.mRefreshSheetBorrower = new RefreshSheetBorrower();
                }
                return this.mRefreshSheetBorrower;
            }
        }

        public ReportBorrower ReportBorrower
        {
            get
            {
                if ((this.mReportBorrower == null))
                {
                    this.mReportBorrower = new ReportBorrower();
                }
                return this.mReportBorrower;
            }
        }
        #endregion

        #region Fields
        private StudioConnectWindow mStudioConnectWindow;

        private ARM_AdminWindow mARM_AdminWindow;

        private OKWindow1 mOKWindow;

        private EmployeeWindow mEmployeeWindow;

        private ISA_Window mISA_Window;

        private UserCreatedWindow mUserCreatedWindow;

        private InfoWindow mInfoWindow;

        private AcceptWindow mAcceptWindow;

        private ASI_Window mASI_Window;

        private LogWindow1 mLogWindow;

        private SelectCode mSelectCode;

        private FormSprEmp mFormSprEmp;

        private SettingTask mSettingTask;

        private ContextMenuMaterial mContextMenuMaterial;

        private OpenFileDialog mOpenFileDialog;

        private SelectDateWindow mSelectDateWindow;

        private BorrowerListWindow mBorrowerListWindow;

        private AddAdressWindow mAddAdressWindow;

        private SelectAccBorrower mSelectAccBorrower;

        private SelectDateAbsWindow mSelectDateAbsWindow;

        private RefreshSheetBorrower mRefreshSheetBorrower;

        private ReportBorrower mReportBorrower;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class StudioConnectWindow : WinWindow
    {

        public StudioConnectWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Регистрация";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public SchemaConnectWindow SchemaConnectWindow
        {
            get
            {
                if ((this.mSchemaConnectWindow == null))
                {
                    this.mSchemaConnectWindow = new SchemaConnectWindow(this);
                }
                return this.mSchemaConnectWindow;
            }
        }

        public LoginWindow LoginWindow
        {
            get
            {
                if ((this.mLoginWindow == null))
                {
                    this.mLoginWindow = new LoginWindow(this);
                }
                return this.mLoginWindow;
            }
        }

        public PasswordWindow PasswordWindow
        {
            get
            {
                if ((this.mPasswordWindow == null))
                {
                    this.mPasswordWindow = new PasswordWindow(this);
                }
                return this.mPasswordWindow;
            }
        }

        public OKWindow OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion

        #region Fields
        private SchemaConnectWindow mSchemaConnectWindow;

        private LoginWindow mLoginWindow;

        private PasswordWindow mPasswordWindow;

        private OKWindow mOKWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SchemaConnectWindow : WinWindow
    {

        public SchemaConnectWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "10211";
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public WinComboBox SchemaConnectComboBox
        {
            get
            {
                if ((this.mSchemaConnectComboBox == null))
                {
                    this.mSchemaConnectComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mSchemaConnectComboBox.WindowTitles.Add("Регистрация");
                    #endregion
                }
                return this.mSchemaConnectComboBox;
            }
        }
        #endregion

        #region Fields
        private WinComboBox mSchemaConnectComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class LoginWindow : WinWindow
    {

        public LoginWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "10215";
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public WinEdit LoginEdit
        {
            get
            {
                if ((this.mLoginEdit == null))
                {
                    this.mLoginEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mLoginEdit.WindowTitles.Add("Регистрация");
                    #endregion
                }
                return this.mLoginEdit;
            }
        }
        #endregion

        #region Fields
        private WinEdit mLoginEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class PasswordWindow : WinWindow
    {

        public PasswordWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "10212";
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public WinEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mPasswordEdit.WindowTitles.Add("Регистрация");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        #endregion

        #region Fields
        private WinEdit mPasswordEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OKWindow : WinWindow
    {

        public OKWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties.Add(WinWindow.PropertyNames.AccessibleName, "OK", PropertyExpressionOperator.Contains);
            this.WindowTitles.Add("Регистрация");
            #endregion
        }

        #region Properties
        public WinButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WinButton(this);
                    #region Условия поиска

                        this.mOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mOKButton.WindowTitles.Add("Регистрация");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mOKButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ARM_AdminWindow : WpfWindow
    {

        public ARM_AdminWindow()
        {
            #region Условия поиска
            //this.SearchProperties[WpfWindow.PropertyNames.Name] = "Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия 2.3.1.0.13";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Рабочее место Администратора", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public MasterWindow MasterWindow
        {
            get
            {
                if ((this.mMasterWindow == null))
                {
                    this.mMasterWindow = new MasterWindow(this);
                }
                return this.mMasterWindow;
            }
        }

        public WpfButton InstallUpdateButton
        {
            get
            {
                if ((this.mInstallUpdateButton == null))
                {
                    this.mInstallUpdateButton = new WpfButton(this);
                    #region Условия поиска
                    this.mInstallUpdateButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "InstallUpdate_bt";
                    this.mInstallUpdateButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mInstallUpdateButton;
            }
        }

        public WpfButton TuPropButton
        {
            get
            {
                if ((this.mTuPropButton == null))
                {
                    this.mTuPropButton = new WpfButton(this);
                    #region Условия поиска
                    this.mTuPropButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TuProperties_bt";
                    this.mTuPropButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTuPropButton;
            }
        }

        public WpfButton SAFSBButton
        {
            get
            {
                if ((this.mSAFSBButton == null))
                {
                    this.mSAFSBButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSAFSBButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SAFSB_bt";
                    this.mSAFSBButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSAFSBButton;
            }
        }

        public WpfButton PTKKGRButton
        {
            get
            {
                if ((this.mPTKKGRButton == null))
                {
                    this.mPTKKGRButton = new WpfButton(this);
                    #region Условия поиска
                    this.mPTKKGRButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PTKKGR_bt";
                    this.mPTKKGRButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mPTKKGRButton;
            }
        }

        public WpfButton RecreateButton
        {
            get
            {
                if ((this.mRecreateButton == null))
                {
                    this.mRecreateButton = new WpfButton(this);
                    #region Условия поиска
                    this.mRecreateButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "RIO_bt";
                    this.mRecreateButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRecreateButton;
            }
        }

        public WpfButton UserListButton
        {
            get
            {
                if ((this.mUserListButton == null))
                {
                    this.mUserListButton = new WpfButton(this);
                    #region Условия поиска
                    this.mUserListButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UsersList_bt";
                    this.mUserListButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mUserListButton;
            }
        }

        public WpfButton AddUserButton
        {
            get
            {
                if ((this.mAddUserButton == null))
                {
                    this.mAddUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mAddUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AddUser_bt";
                    this.mAddUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAddUserButton;
            }
        }

        public Tree Tree
        {
            get
            {
                if ((this.mTree == null))
                {
                    this.mTree = new Tree(this);
                }
                return this.mTree;
            }
        }

        public SAFSBData SAFSBData
        {
            get
            {
                if ((this.mSAFSBData == null))
                {
                    this.mSAFSBData = new SAFSBData(this);
                }
                return this.mSAFSBData;
            }
        }

        public TechUserData TechUserData
        {
            get
            {
                if ((this.mTechUserData == null))
                {
                    this.mTechUserData = new TechUserData(this);
                }
                return this.mTechUserData;
            }
        }
        #endregion

        #region Fields
        private MasterWindow mMasterWindow;

        private WpfButton mInstallUpdateButton;

        private WpfButton mTuPropButton;

        private WpfButton mSAFSBButton;

        private WpfButton mPTKKGRButton;

        private WpfButton mRecreateButton;

        private WpfButton mUserListButton;

        private WpfButton mAddUserButton;

        private Tree mTree;

        private SAFSBData mSAFSBData;

        private TechUserData mTechUserData;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class MasterWindow : WpfCustom
    {

        public MasterWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MasterView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "MasterView";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public NavigationPanel NavigationPanel
        {
            get
            {
                if ((this.mNavigationPanel == null))
                {
                    this.mNavigationPanel = new NavigationPanel(this);
                }
                return this.mNavigationPanel;
            }
        }

        public TuPropWindow TuPropWindow
        {
            get
            {
                if ((this.mTuPropWindow == null))
                {
                    this.mTuPropWindow = new TuPropWindow(this);
                }
                return this.mTuPropWindow;
            }
        }

        public RecreateObjectsPanel RecreateObjectsPanel
        {
            get
            {
                if ((this.mRecreateObjectsPanel == null))
                {
                    this.mRecreateObjectsPanel = new RecreateObjectsPanel(this);
                }
                return this.mRecreateObjectsPanel;
            }
        }

        public UserPanel UserPanel
        {
            get
            {
                if ((this.mUserPanel == null))
                {
                    this.mUserPanel = new UserPanel(this);
                }
                return this.mUserPanel;
            }
        }

        public EditUserPanel EditUserPanel
        {
            get
            {
                if ((this.mEditUserPanel == null))
                {
                    this.mEditUserPanel = new EditUserPanel(this);
                }
                return this.mEditUserPanel;
            }
        }

        public SafsbPanel SafsbPanel
        {
            get
            {
                if ((this.mSafsbPanel == null))
                {
                    this.mSafsbPanel = new SafsbPanel(this);
                }
                return this.mSafsbPanel;
            }
        }
        #endregion

        #region Fields
        private NavigationPanel mNavigationPanel;

        private TuPropWindow mTuPropWindow;

        private RecreateObjectsPanel mRecreateObjectsPanel;

        private UserPanel mUserPanel;

        private EditUserPanel mEditUserPanel;

        private SafsbPanel mSafsbPanel;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NavigationPanel : WpfCustom
    {

        public NavigationPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.NavigationPanel";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "NavigationPanel";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfToggleButton UpdateVersionButton
        {
            get
            {
                if ((this.mUpdateVersionButton == null))
                {
                    this.mUpdateVersionButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mUpdateVersionButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "UpdatingVersion_bt";
                    this.mUpdateVersionButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mUpdateVersionButton;
            }
        }

        public WpfToggleButton PrepareButton
        {
            get
            {
                if ((this.mPrepareButton == null))
                {
                    this.mPrepareButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mPrepareButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "WorkPreparation_bt";
                    this.mPrepareButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mPrepareButton;
            }
        }

        public WpfToggleButton UsersButton
        {
            get
            {
                if ((this.mUsersButton == null))
                {
                    this.mUsersButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mUsersButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "Users_bt";
                    this.mUsersButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mUsersButton;
            }
        }

        public WpfToggleButton ServiceButton
        {
            get
            {
                if ((this.mServiceButton == null))
                {
                    this.mServiceButton = new WpfToggleButton(this);
                    #region Условия поиска
                    this.mServiceButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "Service_bt";
                    this.mServiceButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mServiceButton;
            }
        }
        #endregion

        #region Fields
        private WpfToggleButton mUpdateVersionButton;

        private WpfToggleButton mPrepareButton;

        private WpfToggleButton mUsersButton;

        private WpfToggleButton mServiceButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TuPropWindow : WpfCustom
    {

        public TuPropWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DepartmentProperties";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DepartmentProperties";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfComboBox RegionsComboBox
        {
            get
            {
                if ((this.mRegionsComboBox == null))
                {
                    this.mRegionsComboBox = new WpfComboBox(this);
                    #region Условия поиска
                    this.mRegionsComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "TreeComboBox";
                    this.mRegionsComboBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRegionsComboBox;
            }
        }

        public WpfText NameTextBlock
        {
            get
            {
                if ((this.mNameTextBlock == null))
                {
                    this.mNameTextBlock = new WpfText(this);
                    #region Условия поиска
                    this.mNameTextBlock.SearchProperties[WpfText.PropertyNames.ClassName] = "Uia.TextBlock";
                    this.SearchProperties.Add(WpfText.PropertyNames.Name, "ГУ Банка России", PropertyExpressionOperator.Contains);
                    this.mNameTextBlock.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mNameTextBlock;
            }
        }
        #endregion

        #region Fields
        private WpfComboBox mRegionsComboBox;

        private WpfText mNameTextBlock;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RecreateObjectsPanel : WpfCustom
    {

        public RecreateObjectsPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RecreateInnerObjects";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "RecreateInnerObjects";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfCheckBox RecreateViewCheckBox
        {
            get
            {
                if ((this.mRecreateViewCheckBox == null))
                {
                    this.mRecreateViewCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mRecreateViewCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Views_RecreateInnerObjects_cb";
                    this.mRecreateViewCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRecreateViewCheckBox;
            }
        }

        public WpfCheckBox RecreateProcedureCheckBox
        {
            get
            {
                if ((this.mRecreateProcedureCheckBox == null))
                {
                    this.mRecreateProcedureCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mRecreateProcedureCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Procedures_RecreateInnerObjects_cb";
                    this.mRecreateProcedureCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRecreateProcedureCheckBox;
            }
        }

        public WpfCheckBox AddRigthsCheckBox
        {
            get
            {
                if ((this.mAddRigthsCheckBox == null))
                {
                    this.mAddRigthsCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mAddRigthsCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Grants_RecreateInnerObjects_cb";
                    this.mAddRigthsCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAddRigthsCheckBox;
            }
        }

        public WpfButton RecreateButton
        {
            get
            {
                if ((this.mRecreateButton == null))
                {
                    this.mRecreateButton = new WpfButton(this);
                    #region Условия поиска
                    this.mRecreateButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "RIO_RecreateInnerObjects_bt";
                    this.mRecreateButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRecreateButton;
            }
        }
        #endregion

        #region Fields
        private WpfCheckBox mRecreateViewCheckBox;

        private WpfCheckBox mRecreateProcedureCheckBox;

        private WpfCheckBox mAddRigthsCheckBox;

        private WpfButton mRecreateButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UserPanel : WpfCustom
    {

        public UserPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Users";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Users";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public UserList UserList
        {
            get
            {
                if ((this.mUserList == null))
                {
                    this.mUserList = new UserList(this);
                }
                return this.mUserList;
            }
        }

        public WpfButton EditUserButton
        {
            get
            {
                if ((this.mEditUserButton == null))
                {
                    this.mEditUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mEditUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Edit_UserControl_bt";
                    this.mEditUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mEditUserButton;
            }
        }

        public WpfButton RefreshUserButton
        {
            get
            {
                if ((this.mRefreshUserButton == null))
                {
                    this.mRefreshUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mRefreshUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UpdateUser_UserControl_bt";
                    this.mRefreshUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRefreshUserButton;
            }
        }

        public WpfButton DeleteUserButton
        {
            get
            {
                if ((this.mDeleteUserButton == null))
                {
                    this.mDeleteUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mDeleteUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Remove_UserControl_bt";
                    this.mDeleteUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mDeleteUserButton;
            }
        }

        public WpfButton AddUserButton
        {
            get
            {
                if ((this.mAddUserButton == null))
                {
                    this.mAddUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mAddUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Add_UserControl_bt";
                    this.mAddUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAddUserButton;
            }
        }

        public WpfButton RefreshAllUserButton
        {
            get
            {
                if ((this.mRefreshAllUserButton == null))
                {
                    this.mRefreshAllUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mRefreshAllUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UpdateUsers_UserControl_bt";
                    this.mRefreshAllUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRefreshAllUserButton;
            }
        }
        #endregion

        #region Fields
        private UserList mUserList;

        private WpfButton mEditUserButton;

        private WpfButton mRefreshUserButton;

        private WpfButton mDeleteUserButton;

        private WpfButton mAddUserButton;

        private WpfButton mRefreshAllUserButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UserList : WpfList
    {

        public UserList(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "UsersListView";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfListItem RIOListItem
        {
            get
            {
                if ((this.mRIOListItem == null))
                {
                    this.mRIOListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIOListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "UserControl_RIO_lv";
                    this.mRIOListItem.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRIOListItem;
            }
        }

        public WpfListItem RIO_2ListItem
        {
            get
            {
                if ((this.mRIO_2ListItem == null))
                {
                    this.mRIO_2ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_2ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "UserControl_RIO_2_lv";
                    this.mRIO_2ListItem.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRIO_2ListItem;
            }
        }

        public WpfListItem RIO_3ListItem
        {
            get
            {
                if ((this.mRIO_3ListItem == null))
                {
                    this.mRIO_3ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_3ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "UserControl_RIO_3_lv";
                    this.mRIO_3ListItem.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRIO_3ListItem;
            }
        }

        public WpfListItem RIO_4ListItem
        {
            get
            {
                if ((this.mRIO_4ListItem == null))
                {
                    this.mRIO_4ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_4ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "UserControl_RIO_4_lv";
                    this.mRIO_4ListItem.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRIO_4ListItem;
            }
        }
        #endregion

        #region Fields
        private WpfListItem mRIOListItem;

        private WpfListItem mRIO_2ListItem;

        private WpfListItem mRIO_3ListItem;

        private WpfListItem mRIO_4ListItem;
        #endregion
    }

    public class SafsbPanel : WpfCustom
    {

        public SafsbPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Safsb";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Safsb";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        public WpfButton CreateConnectSafsb
        {
            get
            {
                if ((this.mCreateConnectSafsb == null))
                {
                    this.mCreateConnectSafsb = new WpfButton(this);
                    #region Условия поиска
                    this.mCreateConnectSafsb.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CreateLinkToSAFSB_Safsb_bt";
                    this.mCreateConnectSafsb.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mCreateConnectSafsb;
            }
        }

        #region Fields

        private WpfButton mCreateConnectSafsb;
        #endregion


    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EditUserPanel : WpfCustom
    {

        public EditUserPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.EditUser";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "EditUser";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfButton SelectPersonButton
        {
            get
            {
                if ((this.mSelectPersonButton == null))
                {
                    this.mSelectPersonButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSelectPersonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SelectPerson_EditUser_bt";
                    this.mSelectPersonButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSelectPersonButton;
            }
        }

        public WpfEdit LoginEdit
        {
            get
            {
                if ((this.mLoginEdit == null))
                {
                    this.mLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Login_EditUser_tb";
                    this.mLoginEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mLoginEdit;
            }
        }

        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Password_EditUser_tb";
                    this.mPasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }

        public WpfEdit RePasswordEdit
        {
            get
            {
                if ((this.mRePasswordEdit == null))
                {
                    this.mRePasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mRePasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RePassword_EditUser_tb";
                    this.mRePasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mRePasswordEdit;
            }
        }


        public WpfRadioButton AsiAutoStartRadioButton
        {
            get
            {
                if ((this.mAsiAutoStartRadioButton == null))
                {
                    this.mAsiAutoStartRadioButton = new WpfRadioButton(this);
                    #region Условия поиска
                    this.mAsiAutoStartRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "AsiAutoStartObject_EditUser_rb";
                    this.mAsiAutoStartRadioButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAsiAutoStartRadioButton;
            }
        }

        public WpfButton SaveUserButton
        {
            get
            {
                if ((this.mSaveUserButton == null))
                {
                    this.mSaveUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSaveUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Save_EditUser_bt";
                    this.mSaveUserButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSaveUserButton;
            }
        }

        #endregion

        #region Fields
        private WpfButton mSelectPersonButton;

        private WpfEdit mLoginEdit;

        private WpfEdit mPasswordEdit;

        private WpfEdit mRePasswordEdit;

        private WpfRadioButton mAsiAutoStartRadioButton;

        private WpfButton mSaveUserButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class Tree : WpfTree
    {

        public Tree(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "PART_TreeView";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public TreeLvL1 TreeLvL1
        {
            get
            {
                if ((this.mTreeLvL1 == null))
                {
                    this.mTreeLvL1 = new TreeLvL1(this);
                }
                return this.mTreeLvL1;
            }
        }
        #endregion

        #region Fields
        private TreeLvL1 mTreeLvL1;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TreeLvL1 : WpfTreeItem
    {

        public TreeLvL1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfTreeItem TreeLvL2
        {
            get
            {
                if ((this.mTreeLvL2 == null))
                {
                    this.mTreeLvL2 = new WpfTreeItem(this);
                    #region Условия поиска
                    this.mTreeLvL2.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mTreeLvL2.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mTreeLvL2.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTreeLvL2;
            }
        }

        public WpfTreeItem TreeLvL2Selected
        {
            get
            {
                if ((this.mTreeLvL2Selected == null))
                {
                    this.mTreeLvL2Selected = new WpfTreeItem(this);
                    #region Условия поиска
                    this.mTreeLvL2Selected.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mTreeLvL2Selected.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mTreeLvL2Selected.SearchProperties[WpfTreeItem.PropertyNames.Selected] = "True";
                    this.mTreeLvL2Selected.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTreeLvL2Selected;
            }
        }
        #endregion

        #region Fields
        private WpfTreeItem mTreeLvL2;

        private WpfTreeItem mTreeLvL2Selected;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SAFSBData : WpfGroup
    {

        public SAFSBData(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Расположение данных САФСБ:";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public ServerProperties ServerProperties
        {
            get
            {
                if ((this.mServerProperties == null))
                {
                    this.mServerProperties = new ServerProperties(this);
                }
                return this.mServerProperties;
            }
        }

        public WpfEdit SchemaNameEdit
        {
            get
            {
                if ((this.mSchemaNameEdit == null))
                {
                    this.mSchemaNameEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mSchemaNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Db_Safsb_tb";
                    //this.mSchemaNameEdit.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mSchemaNameEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSchemaNameEdit;
            }
        }

        public WpfEdit ServerMSSQLEdit
        {
            get
            {
                if ((this.mServerMSSQLEdit == null))
                {
                    this.mServerMSSQLEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mServerMSSQLEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Server_Safsb_tb";
                    this.mServerMSSQLEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mServerMSSQLEdit;
            }
        }
        #endregion

        #region Fields
        private ServerProperties mServerProperties;

        private WpfEdit mSchemaNameEdit;

        private WpfEdit mServerMSSQLEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ServerProperties : WpfGroup
    {

        public ServerProperties(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Свойства сервера (из TNSNAMES.ORA):";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfEdit ProtocolEdit
        {
            get
            {
                if ((this.mProtocolEdit == null))
                {
                    this.mProtocolEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mProtocolEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Protocol_Safsb_tb";
                    this.mProtocolEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mProtocolEdit;
            }
        }

        public WpfEdit HostEdit
        {
            get
            {
                if ((this.mHostEdit == null))
                {
                    this.mHostEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mHostEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Host_Safsb_tb";
                    this.mHostEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mHostEdit;
            }
        }

        public WpfEdit PortEdit
        {
            get
            {
                if ((this.mPortEdit == null))
                {
                    this.mPortEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mPortEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Port_Safsb_tb";
                    this.mPortEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mPortEdit;
            }
        }

        public WpfEdit ServiceEdit
        {
            get
            {
                if ((this.mServiceEdit == null))
                {
                    this.mServiceEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mServiceEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Service_Safsb_tb";
                    this.mServiceEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mServiceEdit;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mProtocolEdit;

        private WpfEdit mHostEdit;

        private WpfEdit mPortEdit;

        private WpfEdit mServiceEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TechUserData : WpfCustom
    {

        public TechUserData(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Safsb";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Safsb";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public TechUserDataGroup TechUserDataGroup
        {
            get
            {
                if ((this.mTechUserDataGroup == null))
                {
                    this.mTechUserDataGroup = new TechUserDataGroup(this);
                }
                return this.mTechUserDataGroup;
            }
        }

        public WpfCheckBox NeedCreateTechUserCheckBox
        {
            get
            {
                if ((this.mNeedCreateTechUserCheckBox == null))
                {
                    this.mNeedCreateTechUserCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mNeedCreateTechUserCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "NeedCreateTechUser_Safsb_cb";
                    this.mNeedCreateTechUserCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mNeedCreateTechUserCheckBox;
            }
        }

        public SYSTEMGroup SYSTEMGroup
        {
            get
            {
                if ((this.mSYSTEMGroup == null))
                {
                    this.mSYSTEMGroup = new SYSTEMGroup(this);
                }
                return this.mSYSTEMGroup;
            }
        }

        public SAFSBSystemGroup SAFSBSystemGroup
        {
            get
            {
                if ((this.mSAFSBSystemGroup == null))
                {
                    this.mSAFSBSystemGroup = new SAFSBSystemGroup(this);
                }
                return this.mSAFSBSystemGroup;
            }
        }

        public WpfCheckBox AddRigthsTechUserCheckBox
        {
            get
            {
                if ((this.mAddRigthsTechUserCheckBox == null))
                {
                    this.mAddRigthsTechUserCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mAddRigthsTechUserCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "NeedGrantsToTechUser_Safsb_cb";
                    this.mAddRigthsTechUserCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mAddRigthsTechUserCheckBox;
            }
        }

        public WpfButton CreateConnectSafsbButton
        {
            get
            {
                if ((this.mCreateConnectSafsbButton == null))
                {
                    this.mCreateConnectSafsbButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCreateConnectSafsbButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CreateLinkToSAFSB_Safsb_bt";
                    this.mCreateConnectSafsbButton.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mCreateConnectSafsbButton;
            }
        }

        public LogWindow LogWindow
        {
            get
            {
                if ((this.mLogWindow == null))
                {
                    this.mLogWindow = new LogWindow(this);
                }
                return this.mLogWindow;
            }
        }
        #endregion

        #region Fields
        private TechUserDataGroup mTechUserDataGroup;

        private WpfCheckBox mNeedCreateTechUserCheckBox;

        private SYSTEMGroup mSYSTEMGroup;

        private SAFSBSystemGroup mSAFSBSystemGroup;

        private WpfCheckBox mAddRigthsTechUserCheckBox;

        private WpfButton mCreateConnectSafsbButton;

        private LogWindow mLogWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TechUserDataGroup : WpfGroup
    {

        public TechUserDataGroup(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Учетные данные технологического пользователя:";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfEdit TechUserLoginEdit
        {
            get
            {
                if ((this.mTechUserLoginEdit == null))
                {
                    this.mTechUserLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mTechUserLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TechUserLogin_Safsb_tb";
                    this.mTechUserLoginEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTechUserLoginEdit;
            }
        }

        public WpfEdit TechUserPasswordEdit
        {
            get
            {
                if ((this.mTechUserPasswordEdit == null))
                {
                    this.mTechUserPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mTechUserPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TechUserPassword_Safsb_tb";
                    this.mTechUserPasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTechUserPasswordEdit;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mTechUserLoginEdit;

        private WpfEdit mTechUserPasswordEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SYSTEMGroup : WpfGroup
    {

        public SYSTEMGroup(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Учетные данные пользователя с правами создания пользователей:";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfEdit SystemLoginEdit
        {
            get
            {
                if ((this.mSystemLoginEdit == null))
                {
                    this.mSystemLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mSystemLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SysUserLogin_Safsb_tb";
                    this.mSystemLoginEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSystemLoginEdit;
            }
        }

        public WpfEdit SystemPasswordEdit
        {
            get
            {
                if ((this.mSystemPasswordEdit == null))
                {
                    this.mSystemPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mSystemPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SysUserPassword_Safsb_tb";
                    this.mSystemPasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mSystemPasswordEdit;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mSystemLoginEdit;

        private WpfEdit mSystemPasswordEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SAFSBSystemGroup : WpfGroup
    {

        public SAFSBSystemGroup(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Учетные данные пользователя - владельца схемы с данными САФСБ:";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfCheckBox EqualSystemSafsbSysCheckBox
        {
            get
            {
                if ((this.mEqualSystemSafsbSysCheckBox == null))
                {
                    this.mEqualSystemSafsbSysCheckBox = new WpfCheckBox(this);
                    #region Условия поиска
                    this.mEqualSystemSafsbSysCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "SysEqualsOwner_Safsb_cb";
                    this.mEqualSystemSafsbSysCheckBox.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mEqualSystemSafsbSysCheckBox;
            }
        }

        public WpfEdit OwnerSafsbLoginEdit
        {
            get
            {
                if ((this.mOwnerSafsbLoginEdit == null))
                {
                    this.mOwnerSafsbLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mOwnerSafsbLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "OwnerUserLogin_Safsb_tb";
                    this.mOwnerSafsbLoginEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mOwnerSafsbLoginEdit;
            }
        }

        public WpfEdit OwnerSafsbPasswordEdit
        {
            get
            {
                if ((this.mOwnerSafsbPasswordEdit == null))
                {
                    this.mOwnerSafsbPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mOwnerSafsbPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "OwnUserPassword_Safsb_tb";
                    this.mOwnerSafsbPasswordEdit.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mOwnerSafsbPasswordEdit;
            }
        }
        #endregion

        #region Fields
        private WpfCheckBox mEqualSystemSafsbSysCheckBox;

        private WpfEdit mOwnerSafsbLoginEdit;

        private WpfEdit mOwnerSafsbPasswordEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class LogWindow : WpfExpander
    {

        public LogWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfExpander.PropertyNames.Name] = "Лог настройки на САФСБ";
            this.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                    "2.3.1.0.13");
            #endregion
        }

        #region Properties
        public WpfEdit TextLog
        {
            get
            {
                if ((this.mTextLog == null))
                {
                    this.mTextLog = new WpfEdit(this);
                    #region Условия поиска
                    this.mTextLog.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Logger_Safsb_tb";
                    this.mTextLog.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mTextLog;
            }
        }

        public WpfButton Expand
        {
            get
            {
                if ((this.mExpand == null))
                {
                    this.mExpand = new WpfButton(this);
                    #region Условия поиска
                    this.mExpand.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
                    this.mExpand.WindowTitles.Add("Рабочее место Администратора на ASISTA_UI_ASITST11 (ASISTA_UI @ ASITST11) Версия " +
                            "2.3.1.0.13");
                    #endregion
                }
                return this.mExpand;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mTextLog;

        private WpfButton mExpand;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OKWindow1 : WinWindow
    {

        public OKWindow1()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ОК";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("ОК");
            #endregion
        }

        #region Properties
        public WinButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WinButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mOKButton.WindowTitles.Add("ОК");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mOKButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EmployeeWindow : WpfWindow
    {

        public EmployeeWindow()
        {
            #region Условия поиска
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Список сотрудников";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Список сотрудников");
            #endregion
        }

        #region Properties
        public WpfButton AddEmployeeButton
        {
            get
            {
                if ((this.mAddEmployeeButton == null))
                {
                    this.mAddEmployeeButton = new WpfButton(this);
                    #region Условия поиска
                    this.mAddEmployeeButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AddUserPreviewButton_SelectPersonDialog_bt";
                    this.mAddEmployeeButton.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mAddEmployeeButton;
            }
        }

        public EmployeeList EmployeeList
        {
            get
            {
                if ((this.mEmployeeList == null))
                {
                    this.mEmployeeList = new EmployeeList(this);
                    #region Условия поиска
                    this.mEmployeeList.SearchProperties[WpfList.PropertyNames.AutomationId] = "PersonsListBox";
                    this.mEmployeeList.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mEmployeeList;
            }
        }

        public WpfButton SelectButton
        {
            get
            {
                if ((this.mSelectButton == null))
                {
                    this.mSelectButton = new WpfButton(this);
                    #region Условия поиска
                    this.mSelectButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Select_SelectPersonDialog_bt";
                    this.mSelectButton.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mSelectButton;
            }
        }

        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Cancel_SelectPersonDialog_bt";
                    this.mCancelButton.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mCancelButton;
            }
        }

        public WpfEdit FIOEmployeeEdit
        {
            get
            {
                if ((this.mFIOEmployeeEdit == null))
                {
                    this.mFIOEmployeeEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mFIOEmployeeEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "LastName_SelectPersonDialog_tb";
                    this.mFIOEmployeeEdit.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mFIOEmployeeEdit;
            }
        }

        public WpfButton AddUserButton
        {
            get
            {
                if ((this.mAddUserButton == null))
                {
                    this.mAddUserButton = new WpfButton(this);
                    #region Условия поиска
                    this.mAddUserButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AddUser_SelectPersonDialog_bt";
                    this.mAddUserButton.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mAddUserButton;
            }
        }
        #endregion

        #region Fields
        private WpfButton mAddEmployeeButton;

        private EmployeeList mEmployeeList;

        private WpfButton mSelectButton;

        private WpfButton mCancelButton;

        private WpfEdit mFIOEmployeeEdit;

        private WpfButton mAddUserButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ISA_Window : WinWindow
    {

        public ISA_Window()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Учетные данные АИБа";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Учетные данные АИБа");
            #endregion
        }

        #region Properties
        public WpfEdit IsaLoginEdit
        {
            get
            {
                if ((this.mIsaLoginEdit == null))
                {
                    this.mIsaLoginEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mIsaLoginEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "IsaLoginTextBox";
                    this.mIsaLoginEdit.WindowTitles.Add("Учетные данные АИБа");
                    #endregion
                }
                return this.mIsaLoginEdit;
            }
        }

        public WpfEdit IsaPasswordEdit
        {
            get
            {
                if ((this.mIsaPasswordEdit == null))
                {
                    this.mIsaPasswordEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mIsaPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "IsaPassPasswordBox";
                    this.mIsaPasswordEdit.WindowTitles.Add("Учетные данные АИБа");
                    #endregion
                }
                return this.mIsaPasswordEdit;
            }
        }

        public WpfButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WpfButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WpfButton.PropertyNames.Name] = "    OK     ";
                    this.mOKButton.WindowTitles.Add("Учетные данные АИБа");
                    #endregion
                }
                return this.mOKButton;
            }
        }

        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Условия поиска
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Отмена";
                    this.mCancelButton.WindowTitles.Add("Учетные данные АИБа");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mIsaLoginEdit;

        private WpfEdit mIsaPasswordEdit;

        private WpfButton mOKButton;

        private WpfButton mCancelButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UserCreatedWindow : WinWindow
    {

        public UserCreatedWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Пользователь успешно сохранен";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Пользователь успешно сохранен");
            #endregion
        }

        #region Properties
        public OKWindow2 OKWindow2
        {
            get
            {
                if ((this.mOKWindow2 == null))
                {
                    this.mOKWindow2 = new OKWindow2(this);
                }
                return this.mOKWindow2;
            }
        }
        #endregion

        #region Fields
        private OKWindow2 mOKWindow2;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ОКWindow : WinWindow
    {

        public ОКWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "ОК";
            this.WindowTitles.Add("Пользователь успешно сохранен");
            #endregion
        }

        #region Properties
        public WinButton ОКButton
        {
            get
            {
                if ((this.mОКButton == null))
                {
                    this.mОКButton = new WinButton(this);
                    #region Условия поиска
                    this.mОКButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mОКButton.WindowTitles.Add("Пользователь успешно сохранен");
                    #endregion
                }
                return this.mОКButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mОКButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class InfoWindow : WinWindow
    {

        public InfoWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Информация";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Информация");
            #endregion
        }

        #region Properties
        public OKWindow2 OKWindow
        {
            get
            {
                if ((this.mOKWindow2 == null))
                {
                    this.mOKWindow2 = new OKWindow2(this);
                }
                return this.mOKWindow2;
            }
        }
        #endregion

        #region Fields
        private OKWindow2 mOKWindow2;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OKWindow2 : WinWindow
    {
        public OKWindow2(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "ОК";
            this.WindowTitles.Add("Информация");
            #endregion
        }

        #region Properties
        public WinButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WinButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mOKButton.WindowTitles.Add("Информация");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mOKButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class EmployeeList : WpfList
    {

        public EmployeeList(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "PersonsListBox";
            this.WindowTitles.Add("Список сотрудников");
            #endregion
        }

        #region Properties
        public WpfListItem RIO_4ListItem
        {
            get
            {
                if ((this.mRIO_4ListItem == null))
                {
                    this.mRIO_4ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_4ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "SelectPersonDialog_RIO_4_lv";
                    this.mRIO_4ListItem.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mRIO_4ListItem;
            }
        }

        public WpfListItem RIO_3ListItem
        {
            get
            {
                if ((this.mRIO_3ListItem == null))
                {
                    this.mRIO_3ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_3ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "SelectPersonDialog_RIO_3_lv";
                    this.mRIO_3ListItem.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mRIO_3ListItem;
            }
        }

        public WpfListItem RIO_2ListItem
        {
            get
            {
                if ((this.mRIO_2ListItem == null))
                {
                    this.mRIO_2ListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIO_2ListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "SelectPersonDialog_РИО_2_lv";
                    this.mRIO_2ListItem.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mRIO_2ListItem;
            }
        }

        public WpfListItem RIOListItem
        {
            get
            {
                if ((this.mRIOListItem == null))
                {
                    this.mRIOListItem = new WpfListItem(this);
                    #region Условия поиска
                    this.mRIOListItem.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "SelectPersonDialog_РИО_lv";
                    this.mRIOListItem.WindowTitles.Add("Список сотрудников");
                    #endregion
                }
                return this.mRIOListItem;
            }
        }
        #endregion

        #region Fields
        private WpfListItem mRIO_4ListItem;

        private WpfListItem mRIO_3ListItem;

        private WpfListItem mRIO_2ListItem;

        private WpfListItem mRIOListItem;
        #endregion
    }

    public class AcceptWindow : WinWindow
    {

        public AcceptWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Подтверждение";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Подтверждение");
            #endregion
        }

        #region Properties
        public Acc_YesWindow Acc_YesWindow
        {
            get
            {
                if ((this.mAcc_YesWindow == null))
                {
                    this.mAcc_YesWindow = new Acc_YesWindow(this);
                }
                return this.mAcc_YesWindow;
            }
        }

        public Acc_NoWindow Acc_NoWindow
        {
            get
            {
                if ((this.mAcc_NoWindow == null))
                {
                    this.mAcc_NoWindow = new Acc_NoWindow(this);
                }
                return this.mAcc_NoWindow;
            }
        }
        #endregion

        #region Fields
        private Acc_YesWindow mAcc_YesWindow;

        private Acc_NoWindow mAcc_NoWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class Acc_YesWindow : WinWindow
    {

        public Acc_YesWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Подтверждение");
            #endregion
        }

        #region Properties
        public WinButton YesButton
        {
            get
            {
                if ((this.mYesButton == null))
                {
                    this.mYesButton = new WinButton(this);
                    #region Условия поиска
                    this.mYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Да";
                    this.mYesButton.WindowTitles.Add("Подтверждение");
                    #endregion
                }
                return this.mYesButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mYesButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class Acc_NoWindow : WinWindow
    {

        public Acc_NoWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "7";
            this.WindowTitles.Add("Подтверждение");
            #endregion
        }

        #region Properties
        public WinButton NoButton
        {
            get
            {
                if ((this.mNoButton == null))
                {
                    this.mNoButton = new WinButton(this);
                    #region Условия поиска
                    this.mNoButton.SearchProperties[WinButton.PropertyNames.Name] = "Нет";
                    this.mNoButton.WindowTitles.Add("Подтверждение");
                    #endregion
                }
                return this.mNoButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mNoButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ASI_Window : WinWindow
    {

        public ASI_Window()
        {
            #region Условия поиска
            this.SearchProperties.Add(WinWindow.PropertyNames.Name,"АС Инспектора ",PropertyExpressionOperator.Contains);
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVWS_MAINFORMForm";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Импорт из АФСБ]");
            #endregion
        }

        #region Properties
        public WinWindow ReestrWindow
        {
            get
            {
                if ((this.mReestrWindow == null))
                {
                    this.mReestrWindow = new WinWindow(this);
                    #region Условия поиска
                    this.mReestrWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Реестр проверок";
                    this.mReestrWindow.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Реестр проверок]");
                    #endregion
                }
                return this.mReestrWindow;
            }
        }

        public WinWindow BorrowerWindow
        {
            get
            {
                if ((this.mBorrowerWindow == null))
                {
                    this.mBorrowerWindow = new WinWindow(this);
                    #region Условия поиска
                    this.mBorrowerWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Информация о заемщиках";
                    this.mBorrowerWindow.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Реестр проверок]");
                    #endregion
                }
                return this.mBorrowerWindow;
            }
        }

        public WinWindow GivingTaskWindow
        {
            get
            {
                if ((this.mGivingTaskWindow == null))
                {
                    this.mGivingTaskWindow = new WinWindow(this);
                    #region Условия поиска
                    this.mGivingTaskWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Распределение задания";
                    this.mGivingTaskWindow.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Реестр проверок]");
                    #endregion
                }
                return this.mGivingTaskWindow;
            }
        }

        public WinWindow CreateTaskWindow
        {
            get
            {
                if ((this.mCreateTaskWindow == null))
                {
                    this.mCreateTaskWindow = new WinWindow(this);
                    #region Условия поиска
                    this.mCreateTaskWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Формирование заданий";
                    this.mCreateTaskWindow.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Реестр проверок]");
                    #endregion
                }
                return this.mCreateTaskWindow;
            }
        }

        public CalcSpr CalcSpr
        {
            get
            {
                if ((this.mCalcSpr == null))
                {
                    this.mCalcSpr = new CalcSpr(this);
                }
                return this.mCalcSpr;
            }
        }

        public ImportAFSB ImportAFSB
        {
            get
            {
                if ((this.mImportAFSB == null))
                {
                    this.mImportAFSB = new ImportAFSB(this);
                }
                return this.mImportAFSB;
            }
        }

        public MaterialWindow MaterialWindow
        {
            get
            {
                if ((this.mMaterialWindow == null))
                {
                    this.mMaterialWindow = new MaterialWindow(this);
                }
                return this.mMaterialWindow;
            }
        }

        public AddCustomBorrowerWindow AddCustomBorrowerWindow
        {
            get
            {
                if ((this.mAddCustomBorrowerWindow == null))
                {
                    this.mAddCustomBorrowerWindow = new AddCustomBorrowerWindow(this);
                }
                return this.mAddCustomBorrowerWindow;
            }
        }
        #endregion

        #region Fields
        private WinWindow mReestrWindow;

        private WinWindow mGivingTaskWindow;

        private WinWindow mBorrowerWindow;

        private CalcSpr mCalcSpr;

        private ImportAFSB mImportAFSB;

        private WinWindow mCreateTaskWindow;

        private MaterialWindow mMaterialWindow;

        private AddCustomBorrowerWindow mAddCustomBorrowerWindow;
        #endregion
    }

    public class CalcSpr : WinWindow
    {
        public CalcSpr(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Загрузка данных в cправочники";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Загрузка данных в cправочники]");
            #endregion
        }


        #region Properties
        public UploadWindow UploadWindow
        {
            get
            {
                if ((this.mUploadWindow == null))
                {
                    this.mUploadWindow = new UploadWindow(this);
                }
                return this.mUploadWindow;
            }
        }
        #endregion

        #region Fields
        private UploadWindow mUploadWindow;
        #endregion

    }

    public class UploadWindow : WinWindow
    {

        public UploadWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Загрузить";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Загрузка данных в cправочники]");
            #endregion
        }

        #region Properties
        public WinButton UploadButton
        {
            get
            {
                if ((this.mUploadButton == null))
                {
                    this.mUploadButton = new WinButton(this);
                    #region Условия поиска
                    this.mUploadButton.SearchProperties[WinButton.PropertyNames.Name] = "Загрузить";
                    this.mUploadButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Загрузка данных в cправочники]");
                    #endregion
                }
                return this.mUploadButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mUploadButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ImportAFSB : WinWindow
    {

        public ImportAFSB(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Импорт из АФСБ";
            //this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFrmMDIChildForm";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Импорт из АФСБ]");
            #endregion
        }

        #region Properties
        public ImportWindow ImportWindow
        {
            get
            {
                if ((this.mImportWindow == null))
                {
                    this.mImportWindow = new ImportWindow(this);
                }
                return this.mImportWindow;
            }
        }
        #endregion

        #region Fields
        private ImportWindow mImportWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ImportWindow : WinWindow
    {

        public ImportWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Импорт";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения - [Импорт из АФСБ]");
            #endregion
        }

        #region Properties
        public WinButton ImportButton
        {
            get
            {
                if ((this.mImportButton == null))
                {
                    this.mImportButton = new WinButton(this);
                    #region Условия поиска
                    this.mImportButton.SearchProperties[WinButton.PropertyNames.Name] = "Импорт";
                    this.mImportButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения - [Импорт из АФСБ]");
                    #endregion
                }
                return this.mImportButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mImportButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class LogWindow1 : WinWindow
    {

        public LogWindow1()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Текущий протокол";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVADM_CURRENTLOGForm";
            this.WindowTitles.Add("Текущий протокол");
            #endregion
        }

        #region Properties
        public CloseWindow CloseWindow
        {
            get
            {
                if ((this.mCloseWindow == null))
                {
                    this.mCloseWindow = new CloseWindow(this);
                }
                return this.mCloseWindow;
            }
        }
        #endregion

        #region Fields
        private CloseWindow mCloseWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class CloseWindow : WinWindow
    {

        public CloseWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Закрыть";
            this.WindowTitles.Add("Текущий протокол");
            #endregion
        }

        #region Properties
        public WinButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WinButton(this);
                    #region Условия поиска
                    this.mCloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mCloseButton.WindowTitles.Add("Текущий протокол");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mCloseButton;
        #endregion
    }


    public class FormSprEmp : WinWindow
    {

        public FormSprEmp()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4Form";
            this.WindowTitles.Add("Form");
            #endregion
        }

        #region Properties
        public OKWindow2 OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow2(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion

        #region Fields
        private OKWindow2 mOKWindow;
        #endregion
    }

        public class SelectCode : WinWindow
    {
        
        public SelectCode()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Выбор проверяемых кодов вопросов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFrmQuestionSelectForm";
            this.WindowTitles.Add("Выбор проверяемых кодов вопросов");
            #endregion
        }
        
        #region Properties
        public OKWindow OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private OKWindow mOKWindow;
        #endregion
    }

    public class SettingTask : WinWindow
    {

        public SettingTask()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Настройки задачи";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFRM_SET_TASK_PROPForm";
            this.WindowTitles.Add("Настройки задачи");
            #endregion
        }

        #region Properties
        public ClarifTaskWindow ClarifTaskWindow
        {
            get
            {
                if ((this.mClarifTaskWindow == null))
                {
                    this.mClarifTaskWindow = new ClarifTaskWindow(this);
                }
                return this.mClarifTaskWindow;
            }
        }

        public SaveWindow SaveWindow
        {
            get
            {
                if ((this.mSaveWindow == null))
                {
                    this.mSaveWindow = new SaveWindow(this);
                }
                return this.mSaveWindow;
            }
        }
        #endregion

        #region Fields
        private ClarifTaskWindow mClarifTaskWindow;

        private SaveWindow mSaveWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ClarifTaskWindow : WinWindow
    {

        public ClarifTaskWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4Memo";
            this.WindowTitles.Add("Настройки задачи");
            #endregion
        }

        #region Properties
        public WinEdit ClarifTaskMemo
        {
            get
            {
                if ((this.mClarifTaskMemo == null))
                {
                    this.mClarifTaskMemo = new WinEdit(this);
                    #region Условия поиска
                    this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4Memo";
                    this.mClarifTaskMemo.WindowTitles.Add("Настройки задачи");
                    #endregion
                }
                return this.mClarifTaskMemo;
            }
        }
        #endregion

        #region Fields
        private WinEdit mClarifTaskMemo;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SaveWindow : WinWindow
    {

        public SaveWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Сохранить";
            this.WindowTitles.Add("Настройки задачи");
            #endregion
        }

        #region Properties
        public WinButton SaveButton
        {
            get
            {
                if ((this.mSaveButton == null))
                {
                    this.mSaveButton = new WinButton(this);
                    #region Условия поиска
                    this.mSaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Сохранить";
                    this.mSaveButton.WindowTitles.Add("Настройки задачи");
                    #endregion
                }
                return this.mSaveButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mSaveButton;
        #endregion
    }

    public class ContextMenuMaterial : WpfWindow
    {

        public ContextMenuMaterial()
        {
            #region Условия поиска
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }

        #region Properties
        public MenuItem MenuItem
        {
            get
            {
                if ((this.mMenuItem == null))
                {
                    this.mMenuItem = new MenuItem(this);
                }
                return this.mMenuItem;
            }
        }
        #endregion

        #region Fields
        private MenuItem mMenuItem;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class MenuItem : WpfMenu
    {

        public MenuItem(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfMenu.PropertyNames.ClassName] = "Uia.ContextMenu";
            #endregion
        }

        #region Properties
        public WpfMenuItem CreateMenuItem
        {
            get
            {
                if ((this.mCreateMenuItem == null))
                {
                    this.mCreateMenuItem = new WpfMenuItem(this);
                    #region Условия поиска
                    this.mCreateMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "createMenuItem";
                    #endregion
                }
                return this.mCreateMenuItem;
            }
        }

        public WpfMenuItem UploadFileMenuItem
        {
            get
            {
                if ((this.mUploadFileMenuItem == null))
                {
                    this.mUploadFileMenuItem = new WpfMenuItem(this);
                    #region Условия поиска
                    this.mUploadFileMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Загрузить внешний документ";
                    #endregion
                }
                return this.mUploadFileMenuItem;
            }
        }
        #endregion

        #region Fields
        private WpfMenuItem mCreateMenuItem;

        private WpfMenuItem mUploadFileMenuItem;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OpenFileDialog : WinWindow
    {

        public OpenFileDialog()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Открытие";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Открытие");
            #endregion
        }

        #region Properties
        public FileNameWindow FileNameWindow
        {
            get
            {
                if ((this.mFileNameWindow == null))
                {
                    this.mFileNameWindow = new FileNameWindow(this);
                }
                return this.mFileNameWindow;
            }
        }

        public OpenWindow OpenWindow
        {
            get
            {
                if ((this.mOpenWindow == null))
                {
                    this.mOpenWindow = new OpenWindow(this);
                }
                return this.mOpenWindow;
            }
        }
        #endregion

        #region Fields
        private FileNameWindow mFileNameWindow;

        private OpenWindow mOpenWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class FileNameWindow : WinWindow
    {

        public FileNameWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1148";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Открытие");
            #endregion
        }

        #region Properties
        public WinEdit FileNameEdit
        {
            get
            {
                if ((this.mFileNameEdit == null))
                {
                    this.mFileNameEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mFileNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя файла:";
                    this.mFileNameEdit.WindowTitles.Add("Открытие");
                    #endregion
                }
                return this.mFileNameEdit;
            }
        }
        #endregion

        #region Fields
        private WinEdit mFileNameEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OpenWindow : WinWindow
    {

        public OpenWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Открытие");
            #endregion
        }

        #region Properties
        public WinButton OpenButton
        {
            get
            {
                if ((this.mOpenButton == null))
                {
                    this.mOpenButton = new WinButton(this);
                    #region Условия поиска
                    this.mOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Открыть";
                    this.mOpenButton.WindowTitles.Add("Открытие");
                    #endregion
                }
                return this.mOpenButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mOpenButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class MaterialWindow : WinWindow
    {

        public MaterialWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ControlAxSourcingSite";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public MaterialClient MaterialClient
        {
            get
            {
                if ((this.mMaterialClient == null))
                {
                    this.mMaterialClient = new MaterialClient(this);
                }
                return this.mMaterialClient;
            }
        }
        #endregion

        #region Fields
        private MaterialClient mMaterialClient;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class MaterialClient : WinClient
    {

        public MaterialClient(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public MaterialPanel MaterialPanel
        {
            get
            {
                if ((this.mMaterialPanel == null))
                {
                    this.mMaterialPanel = new MaterialPanel(this);
                }
                return this.mMaterialPanel;
            }
        }
        #endregion

        #region Fields
        private MaterialPanel mMaterialPanel;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class MaterialPanel : WpfPane
    {

        public MaterialPanel(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public MaterialCustomTree MaterialCustomTree
        {
            get
            {
                if ((this.mMaterialCustomTree == null))
                {
                    this.mMaterialCustomTree = new MaterialCustomTree(this);
                }
                return this.mMaterialCustomTree;
            }
        }
        #endregion

        #region Fields
        private MaterialCustomTree mMaterialCustomTree;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class MaterialCustomTree : WpfCustom
    {

        public MaterialCustomTree(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ASIObjectsTree";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public WpfEdit SearchEdit
        {
            get
            {
                if ((this.mSearchEdit == null))
                {
                    this.mSearchEdit = new WpfEdit(this);
                    #region Условия поиска
                    this.mSearchEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "filterTextBox";
                    this.mSearchEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mSearchEdit;
            }
        }

        public Tree1 Tree
        {
            get
            {
                if ((this.mTree == null))
                {
                    this.mTree = new Tree1(this);
                }
                return this.mTree;
            }
        }

        public WpfButton ClearFilter
        {
            get
            {
                if ((this.mClearFilter == null))
                {
                    this.mClearFilter = new WpfButton(this);
                    #region Условия поиска
                    this.mClearFilter.SearchProperties[WpfButton.PropertyNames.HelpText] = "Очистить быстрый фильтр";
                    this.mClearFilter.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mClearFilter;
            }
        }
        #endregion

        #region Fields
        private WpfEdit mSearchEdit;

        private Tree1 mTree;

        private WpfButton mClearFilter;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class Tree1 : WpfTree
    {

        public Tree1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "objectsTreeView";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public ASITreeFirstlvl ASITreeFirstlvl
        {
            get
            {
                if ((this.mASITreeFirstlvl == null))
                {
                    this.mASITreeFirstlvl = new ASITreeFirstlvl(this);
                }
                return this.mASITreeFirstlvl;
            }
        }
        #endregion

        #region Fields
        private ASITreeFirstlvl mASITreeFirstlvl;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ASITreeFirstlvl : WpfTreeItem
    {

        public ASITreeFirstlvl(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "ASIObjectsForms.ASIObjectTreeItem";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public ASITreeSecondlvl ASITreeSecondlvl
        {
            get
            {
                if ((this.mASITreeSecondlvl == null))
                {
                    this.mASITreeSecondlvl = new ASITreeSecondlvl(this);
                }
                return this.mASITreeSecondlvl;
            }
        }
        #endregion

        #region Fields
        private ASITreeSecondlvl mASITreeSecondlvl;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ASITreeSecondlvl : WpfTreeItem
    {

        public ASITreeSecondlvl(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "ASIObjectsForms.ASIObjectTreeItem";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                    "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
            #endregion
        }

        #region Properties
        public WpfControl ItemInSecondlvl
        {
            get
            {
                if ((this.mItemInSecondlvl == null))
                {
                    this.mItemInSecondlvl = new WpfControl(this);
                    #region Условия поиска
                    this.mItemInSecondlvl.SearchProperties[WpfControl.PropertyNames.ControlType] = "Indicator";
                    this.mItemInSecondlvl.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemInSecondlvl.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Стационарная региональная | РИО | Руководство инсп" +
                            "екционного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.20");
                    #endregion
                }
                return this.mItemInSecondlvl;
            }
        }
        #endregion

        #region Fields
        private WpfControl mItemInSecondlvl;
        #endregion
    }


    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SelectDateWindow : WinWindow
    {

        public SelectDateWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Выбор даты";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFRM_ADD_DEBTORSForm";
            this.WindowTitles.Add("Выбор даты");
            #endregion
        }

        #region Properties
        public ComboBoxDateWindow ComboBoxDateWindow
        {
            get
            {
                if ((this.mComboBoxDateWindow == null))
                {
                    this.mComboBoxDateWindow = new ComboBoxDateWindow(this);
                }
                return this.mComboBoxDateWindow;
            }
        }

        public OKWindow2 OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow2(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion

        #region Fields
        private ComboBoxDateWindow mComboBoxDateWindow;

        private OKWindow2 mOKWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ComboBoxDateWindow : WinWindow
    {

        public ComboBoxDateWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4DimensionCombo";
            this.WindowTitles.Add("Выбор даты");
            #endregion
        }

        #region Properties
        public WinClient ComoBoxClient
        {
            get
            {
                if ((this.mComoBoxClient == null))
                {
                    this.mComoBoxClient = new WinClient(this);
                    #region Условия поиска
                    this.mComoBoxClient.SearchProperties[WinControl.PropertyNames.ClassName] = "P4DimensionCombo";
                    this.mComoBoxClient.WindowTitles.Add("Выбор даты");
                    #endregion
                }
                return this.mComoBoxClient;
            }
        }
        #endregion

        #region Fields
        private WinClient mComoBoxClient;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class BorrowerListWindow : WinWindow
    {

        public BorrowerListWindow()
        {
            #region Условия поиска
            this.SearchProperties.Add(WinWindow.PropertyNames.Name, "Список заемщиков для добавления", PropertyExpressionOperator.Contains);
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFRM_TREE_NEW_DEBTORSForm";
            this.WindowTitles.Add("Список заемщиков для добавления на 01.12.2015");
            #endregion
        }

        #region Properties
        public ComboBoxWindow ComboBoxWindow
        {
            get
            {
                if ((this.mComboBoxWindow == null))
                {
                    this.mComboBoxWindow = new ComboBoxWindow(this);
                }
                return this.mComboBoxWindow;
            }
        }

        public OKWindow5 OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow5(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion

        #region Fields
        private ComboBoxWindow mComboBoxWindow;

        private OKWindow5 mOKWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ComboBoxWindow : WinWindow
    {

        public ComboBoxWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4DimensionCombo";
            this.WindowTitles.Add("Список заемщиков для добавления на 01.12.2015");
            #endregion
        }

        #region Properties
        public WinClient ComboBox
        {
            get
            {
                if ((this.mComboBox == null))
                {
                    this.mComboBox = new WinClient(this);
                    #region Условия поиска
                    this.mComboBox.SearchProperties[WinControl.PropertyNames.ClassName] = "P4DimensionCombo";
                    this.mComboBox.WindowTitles.Add("Список заемщиков для добавления на 01.12.2015");
                    #endregion
                }
                return this.mComboBox;
            }
        }
        #endregion

        #region Fields
        private WinClient mComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OKWindow5 : WinWindow // Ок - все русскими
    {

        public OKWindow5(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ок";
            this.WindowTitles.Add("Список заемщиков для добавления на 01.12.2015");
            #endregion
        }

        #region Properties
        public WinButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WinButton(this);
                    #region Условия поиска
                    this.mOKButton.SearchProperties[WinButton.PropertyNames.Name] = "Ок";
                    this.mOKButton.WindowTitles.Add("Список заемщиков для добавления на 01.12.2015");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mOKButton;
        #endregion
    }

    public class AddCustomBorrowerWindow : WinWindow
    {

        public AddCustomBorrowerWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Мастер ввода данных о контрагенте";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public NameEditWindow NameEditWindow
        {
            get
            {
                if ((this.mNameEditWindow == null))
                {
                    this.mNameEditWindow = new NameEditWindow(this);
                }
                return this.mNameEditWindow;
            }
        }

        public TypeContragenWindow TypeContragenWindow
        {
            get
            {
                if ((this.mTypeContragenWindow == null))
                {
                    this.mTypeContragenWindow = new TypeContragenWindow(this);
                }
                return this.mTypeContragenWindow;
            }
        }

        public TypeConnectWindow TypeConnectWindow
        {
            get
            {
                if ((this.mTypeConnectWindow == null))
                {
                    this.mTypeConnectWindow = new TypeConnectWindow(this);
                }
                return this.mTypeConnectWindow;
            }
        }

        public NextWindow NextWindow
        {
            get
            {
                if ((this.mNextWindow == null))
                {
                    this.mNextWindow = new NextWindow(this);
                }
                return this.mNextWindow;
            }
        }

        public ReadyWindow ReadyWindow
        {
            get
            {
                if ((this.mReadyWindow == null))
                {
                    this.mReadyWindow = new ReadyWindow(this);
                }
                return this.mReadyWindow;
            }
        }

        public CalcFromAbsWindow CalcFromAbsWindow
        {
            get
            {
                if ((this.mCalcFromAbsWindow == null))
                {
                    this.mCalcFromAbsWindow = new CalcFromAbsWindow(this);
                }
                return this.mCalcFromAbsWindow;
            }
        }

        public CreateReportWindow CreateReportWindow
        {
            get
            {
                if ((this.mCreateReportWindow == null))
                {
                    this.mCreateReportWindow = new CreateReportWindow(this);
                }
                return this.mCreateReportWindow;
            }
        }
        #endregion

        #region Fields
        private NameEditWindow mNameEditWindow;

        private TypeContragenWindow mTypeContragenWindow;

        private TypeConnectWindow mTypeConnectWindow;

        private NextWindow mNextWindow;

        private CalcFromAbsWindow mCalcFromAbsWindow;

        private CreateReportWindow mCreateReportWindow;

        private ReadyWindow mReadyWindow;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NameEditWindow : WinWindow
    {

        public NameEditWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4Edit";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinEdit NameEdit
        {
            get
            {
                if ((this.mNameEdit == null))
                {
                    this.mNameEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mNameEdit.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mNameEdit;
            }
        }
        #endregion

        #region Fields
        private WinEdit mNameEdit;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TypeContragenWindow : WinWindow
    {

        public TypeContragenWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Юридическое лицо";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinClient TypeContragentComboBox
        {
            get
            {
                if ((this.mTypeContragentComboBox == null))
                {
                    this.mTypeContragentComboBox = new WinClient(this);
                    #region Условия поиска
                    this.SearchProperties[WinWindow.PropertyNames.Name] = "Юридическое лицо";
                    this.mTypeContragentComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mTypeContragentComboBox;
            }
        }
        #endregion

        #region Fields
        private WinClient mTypeContragentComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class TypeConnectWindow : WinWindow
    {

        public TypeConnectWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinClient TypeConnectComboBox
        {
            get
            {
                if ((this.mTypeConnectComboBox == null))
                {
                    this.mTypeConnectComboBox = new WinClient(this);
                    #region Условия поиска
                    this.SearchProperties[WinWindow.PropertyNames.Name] = "";
                    this.mTypeConnectComboBox.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mTypeConnectComboBox;
            }
        }
        #endregion

        #region Fields
        private WinClient mTypeConnectComboBox;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NextWindow : WinWindow
    {

        public NextWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Далее >";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinButton NextButton
        {
            get
            {
                if ((this.mNextButton == null))
                {
                    this.mNextButton = new WinButton(this);
                    #region Условия поиска
                    this.mNextButton.SearchProperties[WinButton.PropertyNames.Name] = "Далее >";
                    this.mNextButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mNextButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mNextButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ReadyWindow : WinWindow
    {

        public ReadyWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Готово";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinButton ReadyButton
        {
            get
            {
                if ((this.mReadyButton == null))
                {
                    this.mReadyButton = new WinButton(this);
                    #region Условия поиска
                    this.mReadyButton.SearchProperties[WinButton.PropertyNames.Name] = "Готово";
                    this.mReadyButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mReadyButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mReadyButton;
        #endregion
    }

    public class AddAdressWindow : WinWindow
    {

        public AddAdressWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Ввод адреса";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFRM_INPUT_ADDRESSForm";
            this.WindowTitles.Add("Ввод адреса");
            #endregion
        }

        #region Properties
        public OKWindow2 OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow2(this);
                }
                return this.mOKWindow;
            }
        }
        #endregion

        #region Fields
        private OKWindow2 mOKWindow;
        #endregion
    }



    public class SelectAccBorrower : WinWindow
    {

        public SelectAccBorrower()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P4Form";
            this.WindowTitles.Add("Form");
            #endregion
        }

        #region Properties
        public OKWindow OKWindow
        {
            get
            {
                if ((this.mOKWindow == null))
                {
                    this.mOKWindow = new OKWindow(this);
                }
                return this.mOKWindow;
            }
        }

        public ShowAccountsWindow ShowAccountsWindow
        {
            get
            {
                if ((this.mShowAccountsWindow == null))
                {
                    this.mShowAccountsWindow = new ShowAccountsWindow(this);
                }
                return this.mShowAccountsWindow;
            }
        }
        #endregion

        #region Fields
        private OKWindow mOKWindow;

        private ShowAccountsWindow mShowAccountsWindow;
        #endregion
    }


    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ShowAccountsWindow : WinWindow
    {

        public ShowAccountsWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Показать счета";
            this.WindowTitles.Add("Form");
            #endregion
        }

        #region Properties
        public WinButton ShowAccountButton
        {
            get
            {
                if ((this.mShowAccountButton == null))
                {
                    this.mShowAccountButton = new WinButton(this);
                    #region Условия поиска
                    this.mShowAccountButton.SearchProperties[WinButton.PropertyNames.Name] = "Показать счета";
                    this.mShowAccountButton.WindowTitles.Add("Form");
                    #endregion
                }
                return this.mShowAccountButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mShowAccountButton;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class SelectDateAbsWindow : WinWindow
    {

        public SelectDateAbsWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Выбор даты";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "P5FRAME_DEVFRM_SELECT_DATEForm";
            this.WindowTitles.Add("Выбор даты");
            #endregion
        }

        #region Properties
        public OnThatDayWindow OnThatDayWindow
        {
            get
            {
                if ((this.mOnThatDayWindow == null))
                {
                    this.mOnThatDayWindow = new OnThatDayWindow(this);
                }
                return this.mOnThatDayWindow;
            }
        }

        public OKWindow2 OKWindow
        {
            get
            {
                if ((this.mOKWindow2 == null))
                {
                    this.mOKWindow2 = new OKWindow2(this);
                }
                return this.mOKWindow2;
            }
        }
        #endregion

        #region Fields
        private OnThatDayWindow mOnThatDayWindow;

        private OKWindow2 mOKWindow2;
        #endregion
    }

    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class OnThatDayWindow : WinWindow
    {

        public OnThatDayWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "На выбранную дату:";
            this.WindowTitles.Add("Выбор даты");
            #endregion
        }

        #region Properties
        public WinRadioButton OnThatDayRadioButton
        {
            get
            {
                if ((this.mOnThatDayRadioButton == null))
                {
                    this.mOnThatDayRadioButton = new WinRadioButton(this);
                    #region Условия поиска
                    this.mOnThatDayRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "На выбранную дату:";
                    this.mOnThatDayRadioButton.WindowTitles.Add("Выбор даты");
                    #endregion
                }
                return this.mOnThatDayRadioButton;
            }
        }
        #endregion

        #region Fields
        private WinRadioButton mOnThatDayRadioButton;
        #endregion
    }
    public class CalcFromAbsWindow : WinWindow
    {

        public CalcFromAbsWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Рассчитать по АБС";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinButton CalcFromAbsButon
        {
            get
            {
                if ((this.mCalcFromAbsButon == null))
                {
                    this.mCalcFromAbsButon = new WinButton(this);
                    #region Условия поиска
                    this.mCalcFromAbsButon.SearchProperties[WinButton.PropertyNames.Name] = "Рассчитать по АБС";
                    this.mCalcFromAbsButon.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mCalcFromAbsButon;
            }
        }
        #endregion

        #region Fields
        private WinButton mCalcFromAbsButon;
        #endregion
    }

    public class CreateReportWindow : WinWindow
    {

        public CreateReportWindow(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Сформировать материалы по заемщику";
            this.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                    "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
            #endregion
        }

        #region Properties
        public WinButton CreateReportButton
        {
            get
            {
                if ((this.mCreateReportButton == null))
                {
                    this.mCreateReportButton = new WinButton(this);
                    #region Условия поиска
                    this.mCreateReportButton.SearchProperties[WinButton.PropertyNames.Name] = "Сформировать материалы по заемщику";
                    this.mCreateReportButton.WindowTitles.Add("АС Инспектора. Версия 2.3.1.0. Мобильная региональная | РИО | Руководство инспекц" +
                            "ионного подразделения | Проверка ЗАПСИБКОМБАНК (918) за 01.01.2015-31.12.2015");
                    #endregion
                }
                return this.mCreateReportButton;
            }
        }
        #endregion

        #region Fields
        private WinButton mCreateReportButton;
        #endregion
    }

    public class RefreshSheetBorrower : WpfWindow
    {

        public RefreshSheetBorrower()
        {
            #region Условия поиска
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Обновление листов материалов по заемщику...";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Обновление листов материалов по заемщику...");
            #endregion
        }
    }

    public class ReportBorrower : WinWindow
    {

        public ReportBorrower()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "\"Материалы по заемщику 118_New (РИО)\" - Редактирование";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "AfxFrameOrView100u";
            this.WindowTitles.Add("\"Материалы по заемщику 118_New (РИО)\" - Редактирование");
            #endregion
        }
    }
}
